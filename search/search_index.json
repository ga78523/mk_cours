{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bienvenue #","title":"Home"},{"location":"#bienvenue","text":"","title":"Bienvenue"},{"location":"about/","text":"Liens utiles # Gilles Lassus : cours, exercices, \u00e9preuves pratiques & correction Site David Roche : cours, exercices, \u00e9preuves pratiques & correction Site du lyc\u00e9e M\u00e9mona Hintermann-Aff\u00e9jee Site du lyc\u00e9e beno\u00eet tech Lumni","title":"About"},{"location":"about/#liens-utiles","text":"Gilles Lassus : cours, exercices, \u00e9preuves pratiques & correction Site David Roche : cours, exercices, \u00e9preuves pratiques & correction Site du lyc\u00e9e M\u00e9mona Hintermann-Aff\u00e9jee Site du lyc\u00e9e beno\u00eet tech Lumni","title":"Liens utiles"},{"location":"Logiciels/git_github/","text":"Les outils git et github # Introduction (wikipedia) # Git est un logiciel de gestion de versions d\u00e9centralis\u00e9. C\u2019est un logiciel libre cr\u00e9\u00e9 par Linus Torvalds, auteur du noyau Linux, et distribu\u00e9 selon les termes de la licence publique g\u00e9n\u00e9rale GNU version 2. En 2016, il s\u2019agit du logiciel de gestion de versions le plus populaire. GitHub exploit\u00e9 sous le nom de GitHub, Inc.) est un service web d\u2019h\u00e9bergement et de gestion de d\u00e9veloppement de logiciels, utilisant le logiciel de gestion de versions Git. Ce site est d\u00e9velopp\u00e9 en Ruby on Rails et Erlang par Chris Wanstrath, PJ Hyett et Tom Preston-Werner. GitHub propose des comptes professionnels payants, ainsi que des comptes gratuits pour les projets de logiciels libres. Le site assure \u00e9galement un contr\u00f4le d\u2019acc\u00e8s et des fonctionnalit\u00e9s destin\u00e9es \u00e0 la collaboration comme le suivi des bugs, les demandes de fonctionnalit\u00e9s, la gestion de t\u00e2ches et un wiki pour chaque projet. En avril 2016, GitHub a annonc\u00e9 avoir d\u00e9pass\u00e9 les 14 millions d\u2019utilisateurs et plus de 35 millions de d\u00e9p\u00f4ts de projets le pla\u00e7ant comme le plus grand h\u00e9bergeur de code source au monde. Sur votre ordinateur : git # T\u00e9l\u00e9chargement, installation et configuration # Se rendre sur le site : https://git-scm.com/downloads T\u00e9l\u00e9charger le logiciel pour le syst\u00e8me d\u2019exploitation que vous avez ; Se rendre dans la console et taper : git --version pour vous assurer que cela a bien fonctionner. Configurer git : # git config --global user.email \"you@example.com \" git config --global user.name \"your Name\" Utilisation # On cr\u00e9e un dossier. Par exemple : Hello ; Dans ce dossier, on cr\u00e9e la page hello.html suivante : 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html > < head > < meta charset = \"utf8\" > < title > essai git et github </ title > </ head > < body > < h1 > Bonjour tout le monde </ h1 > </ body > </ html > On l\u2019enregistre ; Avec la console, se rendre dans le dossier Hello en ligne de commande ; Dans le dossier Hello, taper : git init pour commencer \u00e0 versionner le projet ; Pour faire une \"photo\" de votre projet \u00e0 un instant t, il faut en faire un commit. Cela se d\u00e9roule en deux \u00e9tapes : V\u00e9rifier que tout est en ordre. Pour cela taper : git add . Faire la \"photo\". Taper : git commit -m \"Premier commit\" pour \"pousser\" votre projet sur le serveur. Exercice 1 : Faire un modification du fichier hello.html puis en faire un commit. Sur internet : GitHub # Pr\u00e9alable # Se rendre sur github : https://github.com/ ; S\u2019inscrire ; Pour le projet Hello # Aller sur new repository ; Taper le nom : Hello ; Github vous donne ensuite la d\u00e9marche \u00e0 suivre. Dans notre cas, il faut recopier les lignes suivantes dans la console pour indiquer \u00e0 votre ordinateur le serveur git qui va recevoir votre projet ; git remote add origin https://github.com/yourLogin/hello.git git push -u origin master Pour obtenir l\u2019h\u00e9bergement de sa page html # 1 Une fois dans votre projet, se rendre sur settings. 2 Descendre, jusqu\u2019\u00e0 : 3 Cliquer dans source sur None et choisir Master . 4 Vous devriez obtenir un \u00e9cran du type : 5 Au prochain \"push\", votre site sera visible \u00e0 l\u2019adresse indiqu\u00e9e. Inviter des personnes # Dans votre projet, se rendre sur settings ; Aller dans manage access et rentrer le nom de la personne. Vous devriez obtenir cette fenetre : Les commandes git de bases (wikipedia) # git init : cr\u00e9e un nouveau d\u00e9p\u00f4t ; git clone : clone un d\u00e9p\u00f4t distant ; git add : ajoute de nouveaux objets blobs dans la base des objets pour chaque fichier modifi\u00e9 depuis le dernier commit. Les objets pr\u00e9c\u00e9dents restent inchang\u00e9s ; git commit : int\u00e8gre la somme de contr\u00f4le SHA*1 d\u2019un objet tree et les sommes de contr\u00f4le des objets commits parents pour cr\u00e9er un nouvel objet commit ; git branch : liste les branches ; git merge : fusionne une branche dans une autre ; git rebase d\u00e9place les commits de la branche courante devant les nouveaux commits d\u2019une autre branche ; git log : affiche la liste des commits effectu\u00e9s sur une branche ; git push : publie les nouvelles r\u00e9visions sur le remote. (La commande prend diff\u00e9rents param\u00e8tres) ; git pull : r\u00e9cup\u00e8re les derni\u00e8res modifications distantes du projet (depuis le Remote) et les fusionne dans la branche courante ; git stash : stocke de c\u00f4t\u00e9 un \u00e9tat non commit\u00e9 afin d\u2019effectuer d\u2019autres t\u00e2ches","title":"git"},{"location":"Logiciels/git_github/#les-outils-git-et-github","text":"","title":"Les outils git et github"},{"location":"Logiciels/git_github/#introduction-wikipedia","text":"Git est un logiciel de gestion de versions d\u00e9centralis\u00e9. C\u2019est un logiciel libre cr\u00e9\u00e9 par Linus Torvalds, auteur du noyau Linux, et distribu\u00e9 selon les termes de la licence publique g\u00e9n\u00e9rale GNU version 2. En 2016, il s\u2019agit du logiciel de gestion de versions le plus populaire. GitHub exploit\u00e9 sous le nom de GitHub, Inc.) est un service web d\u2019h\u00e9bergement et de gestion de d\u00e9veloppement de logiciels, utilisant le logiciel de gestion de versions Git. Ce site est d\u00e9velopp\u00e9 en Ruby on Rails et Erlang par Chris Wanstrath, PJ Hyett et Tom Preston-Werner. GitHub propose des comptes professionnels payants, ainsi que des comptes gratuits pour les projets de logiciels libres. Le site assure \u00e9galement un contr\u00f4le d\u2019acc\u00e8s et des fonctionnalit\u00e9s destin\u00e9es \u00e0 la collaboration comme le suivi des bugs, les demandes de fonctionnalit\u00e9s, la gestion de t\u00e2ches et un wiki pour chaque projet. En avril 2016, GitHub a annonc\u00e9 avoir d\u00e9pass\u00e9 les 14 millions d\u2019utilisateurs et plus de 35 millions de d\u00e9p\u00f4ts de projets le pla\u00e7ant comme le plus grand h\u00e9bergeur de code source au monde.","title":"Introduction (wikipedia)"},{"location":"Logiciels/git_github/#sur-votre-ordinateur-git","text":"","title":"Sur votre ordinateur : git"},{"location":"Logiciels/git_github/#telechargement-installation-et-configuration","text":"Se rendre sur le site : https://git-scm.com/downloads T\u00e9l\u00e9charger le logiciel pour le syst\u00e8me d\u2019exploitation que vous avez ; Se rendre dans la console et taper : git --version pour vous assurer que cela a bien fonctionner.","title":"T\u00e9l\u00e9chargement, installation et configuration"},{"location":"Logiciels/git_github/#configurer-git","text":"git config --global user.email \"you@example.com \" git config --global user.name \"your Name\"","title":"Configurer git :"},{"location":"Logiciels/git_github/#utilisation","text":"On cr\u00e9e un dossier. Par exemple : Hello ; Dans ce dossier, on cr\u00e9e la page hello.html suivante : 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html > < head > < meta charset = \"utf8\" > < title > essai git et github </ title > </ head > < body > < h1 > Bonjour tout le monde </ h1 > </ body > </ html > On l\u2019enregistre ; Avec la console, se rendre dans le dossier Hello en ligne de commande ; Dans le dossier Hello, taper : git init pour commencer \u00e0 versionner le projet ; Pour faire une \"photo\" de votre projet \u00e0 un instant t, il faut en faire un commit. Cela se d\u00e9roule en deux \u00e9tapes : V\u00e9rifier que tout est en ordre. Pour cela taper : git add . Faire la \"photo\". Taper : git commit -m \"Premier commit\" pour \"pousser\" votre projet sur le serveur. Exercice 1 : Faire un modification du fichier hello.html puis en faire un commit.","title":"Utilisation"},{"location":"Logiciels/git_github/#sur-internet-github","text":"","title":"Sur internet : GitHub"},{"location":"Logiciels/git_github/#prealable","text":"Se rendre sur github : https://github.com/ ; S\u2019inscrire ;","title":"Pr\u00e9alable"},{"location":"Logiciels/git_github/#pour-le-projet-hello","text":"Aller sur new repository ; Taper le nom : Hello ; Github vous donne ensuite la d\u00e9marche \u00e0 suivre. Dans notre cas, il faut recopier les lignes suivantes dans la console pour indiquer \u00e0 votre ordinateur le serveur git qui va recevoir votre projet ; git remote add origin https://github.com/yourLogin/hello.git git push -u origin master","title":"Pour le projet Hello"},{"location":"Logiciels/git_github/#pour-obtenir-lhebergement-de-sa-page-html","text":"1 Une fois dans votre projet, se rendre sur settings. 2 Descendre, jusqu\u2019\u00e0 : 3 Cliquer dans source sur None et choisir Master . 4 Vous devriez obtenir un \u00e9cran du type : 5 Au prochain \"push\", votre site sera visible \u00e0 l\u2019adresse indiqu\u00e9e.","title":"Pour obtenir l\u2019h\u00e9bergement de sa page html"},{"location":"Logiciels/git_github/#inviter-des-personnes","text":"Dans votre projet, se rendre sur settings ; Aller dans manage access et rentrer le nom de la personne. Vous devriez obtenir cette fenetre :","title":"Inviter des personnes"},{"location":"Logiciels/git_github/#les-commandes-git-de-bases-wikipedia","text":"git init : cr\u00e9e un nouveau d\u00e9p\u00f4t ; git clone : clone un d\u00e9p\u00f4t distant ; git add : ajoute de nouveaux objets blobs dans la base des objets pour chaque fichier modifi\u00e9 depuis le dernier commit. Les objets pr\u00e9c\u00e9dents restent inchang\u00e9s ; git commit : int\u00e8gre la somme de contr\u00f4le SHA*1 d\u2019un objet tree et les sommes de contr\u00f4le des objets commits parents pour cr\u00e9er un nouvel objet commit ; git branch : liste les branches ; git merge : fusionne une branche dans une autre ; git rebase d\u00e9place les commits de la branche courante devant les nouveaux commits d\u2019une autre branche ; git log : affiche la liste des commits effectu\u00e9s sur une branche ; git push : publie les nouvelles r\u00e9visions sur le remote. (La commande prend diff\u00e9rents param\u00e8tres) ; git pull : r\u00e9cup\u00e8re les derni\u00e8res modifications distantes du projet (depuis le Remote) et les fusionne dans la branche courante ; git stash : stocke de c\u00f4t\u00e9 un \u00e9tat non commit\u00e9 afin d\u2019effectuer d\u2019autres t\u00e2ches","title":"Les commandes git de bases (wikipedia)"},{"location":"Premiere/IHM/formulaires/","text":"Formulaires #","title":"Formulaire"},{"location":"Premiere/IHM/formulaires/#formulaires","text":"","title":"Formulaires"},{"location":"Premiere/IHM/frameworks/","text":"Frameworks # Rappel # Toute page internet s\u2019\u00e9crit ainsi : 1 2 3 4 5 6 7 8 9 10 11 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1\" > < title > Bootstrap demo </ title > </ head > < body > < h1 > Hello, world! </ h1 > </ body > </ html > Frameworks CSS # Un framework CSS est un ensemble d'outils (fichiers CSS et JavaScript) permettant de simplifier la conception d'un document Web en proposant une grille de mise en page, une stylisation des \u00e9l\u00e9ments HTML et des composants suppl\u00e9mentaires (caroussel, menu, fen\u00eatre modale, etc). Un framework est, en r\u00e8gle g\u00e9n\u00e9rale : Cross-browser Le document est pr\u00e9sent\u00e9 de la m\u00eame mani\u00e8re quelque que soit le navigateur utilis\u00e9 Responsive La mise en page du document Web s'adapte aux dimensions du support utilis\u00e9 pour le consulter Mobile First Le document Web est pens\u00e9 en priorit\u00e9 pour \u00eatre consult\u00e9 sur des p\u00e9riph\u00e9riques mobiles (smartphones, tablettes) Parmi la multitude des frameworks existants (Bootstrap , Semantic UI, Skeleton, Foundation, etc...), on a choisi d'aborder le suivant : Bootstrap 5. Ce frameworks est d\u00e9velopp\u00e9 par la soci\u00e9t\u00e9 Twitter afin d'uniformiser les interfaces de ses applications internes. Ce framework est d\u00e9sormais open-source depuis ao\u00fbt 2011. Il est disponible \u00e0 l\u2019adresse suivante : http://getbootstrap.com/ Configuration du CDN # Dans la mesure o\u00f9 un front-end framework se r\u00e9sume \u00e0 une collection de fichiers CSS et JavaScript, il suffit d'incorporer ces fichiers dans un document Web en tant que ressources embarqu\u00e9es pour l'utiliser. Pour des consid\u00e9rations de performance (vitesse de t\u00e9l\u00e9chargement) et de robustesse (utilisation des fichiers les plus r\u00e9cents), il est pr\u00e9f\u00e9rable de s'appuyer sur un CDN (Content Delivery Network), un r\u00e9seau de serveurs distribu\u00e9s sur internet qui mettent \u00e0 disposition du contenu. Dans la page http://getbootstrap.com/ , dans la section CDN links , il faut copier/coller la ligne sous CSS only dans l\u2019en-t\u00eate de la page web (entre les balises <head> et </head> ) et copier/coller les lignes sous JS, Popper.js, and jQuery \u00e0 la fin du corps de la page web juste avant </body> . Ci-dessous, en reprenant l'exemple donn\u00e9 ci-dessus, cela donne : 1 2 3 4 5 6 7 8 9 10 11 12 13 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1\" > < title > Bootstrap demo </ title > < link href = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel = \"stylesheet\" integrity = \"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin = \"anonymous\" > </ head > < body > < h1 > Hello, world! </ h1 > < script src = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity = \"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin = \"anonymous\" ></ script > </ body > </ html > Syst\u00e8me de grille # L'avantage principal d'un framework CSS r\u00e9side dans l'utilisation de son syst\u00e8me de grille qui facilite la mise en place des \u00e9l\u00e9ments HTML dans une d\u00e9marche de Responsive Web Design. La grille est compos\u00e9e de lignes, chaque ligne pouvant contenir jusqu'\u00e0 12 colonnes. Lors de l'ajout d'un nouvel \u00e9l\u00e9ment au sein d'une ligne, il convient de pr\u00e9ciser le nombre de colonnes qu'il occupe. Par cons\u00e9quent, inutile de pr\u00e9ciser manuellement la hauteur et la largeur de l'\u00e9l\u00e9ment qui sera automatiquement dimensionn\u00e9 par le syst\u00e8me de grille. Conform\u00e9ment \u00e0 la d\u00e9marche de Responsive Web Design, le syst\u00e8me de grille est capable de s'adapter en fonction de la largeur du media. Ceci explique pourquoi il est n\u00e9cessaire d'ajouter un pr\u00e9fixe \u00e0 la classe CSS pr\u00e9cisant le nombre de colonnes occup\u00e9es par l'\u00e9l\u00e9ment HTML. Le tableau ci-dessous recense l'ensemble des pr\u00e9fixes pour le frameworks. Taille \u00e9cran xs (<576px) sm (\u2265576px) md (\u2265768px) lg (\u2265992px) xl (\u22651200px) xxl (\u22651400px) Largeur max du container Aucun (auto) 540px 720px 960px 1140px 1320px Pr\u00e9fixe de classe .col- .col-sm- .col-md- .col-lg- .col-xl- .col-xxl- Nombre de colonnes 12 12 12 12 12 12 Gr\u00e2ce \u00e0 cette classification des largeurs d'\u00e9cran, il est possible d'imaginer une mise en page pour chaque classe de support (smartphone, tablette, ordinateur). L'exemple suivant illustre cette d\u00e9marche en d\u00e9finissant une mise en page en quatre colonnes pour les grands \u00e9crans, en deux colonnes pour les \u00e9crans moyens et enfin en une seule colonne pour les petits. On peut y placer des paragraphes, des images, etc... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 < div class = \"container\" > < div class = \"row\" > < div class = \"col-lg-3 col-md-6 col-xs-12\" > <!-- contenu de la colonne --> ` </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > <!-- contenu de la colonne --> ` </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > <!-- contenu de la colonne --> ` </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > <!-- contenu de la colonne --> ` </ div > </ div > </ div > Exemple # Cr\u00e9er un dossier intitul\u00e9 exemple_Framworks ; Cr\u00e9er un sous-dossier intitul\u00e9 img ; Enregistrer dans le sous-dossier img , les trois photos de motos suivantes : moto1.png ( lien pour la t\u00e9l\u00e9charger ); moto2.png( lien pour la t\u00e9l\u00e9charger ); moto3.png ( lien pour la t\u00e9l\u00e9charger ). Ouvrir Visual Studio Code et cr\u00e9er un fichier que vous nommerez bootstrap.html et copier/coller le code ci-dessous. Enregistrer et quitter puis ouvrir bootstrap.html avec votre navigateur et faire varier la largeur de la fen\u00eatre. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1, shrink-to-fit=no\" > < meta name = \"description\" content = \"Page d\u2019exemple> <meta name=\" keywords \" content = \"HTML5, CSS3\" > < meta name = \"author\" content = \"Eric Galand\" > <!-- Bootstrap CSS --> < link rel = \"stylesheet\" href = \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity = \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin = \"anonymous\" > < title > Exemple </ title > < link rel = \"stylesheet\" media = \"screen\" href = \"style.css\" > </ head > < body > < div class = \"container\" > < p > Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eros turpis, faucibus vel nunc et, faucibus pellentesque leo. Aenean dignissim consectetur tellus, sit amet tincidunt sapien molestie nec. In lobortis a neque ut tempor. < p > < div class = \"row\" > < div class = \"col-lg-6 col-md-6 col-xs-12\" > < p > Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eros turpis, faucibus vel nunc et, faucibus pellentesque leo. Aenean dignissim consectetur tellus, sit amet tincidunt sapien molestie nec. In lobortis a neque ut tempor. </ p > </ div > < div class = \"col-lg-6 col-md-6 col-xs-12\" > < p > Nulla viverra tristique aliquet. Vivamus ornare elit ligula, quis aliquam libero malesuada id. Nam tempus in lectus vel sodales. Phasellus eleifend fermentum libero, at varius est feugiat vitae. </ p > </ div > < div class = \"row\" > < div class = \" col-lg-4 col-md-4 col-xs-12\" > < img src = \"img/moto1.png\" class = \"img-fluid\" alt = \"moto1\" > </ div > < div class = \" col-lg-4 col-md-4 col-xs-12\" > < img src = \"img/moto2.png\" class = \"img-fluid\" alt = \"moto1\" > </ div > < div class = \" col-lg-4 col-md-4 col-xs-12\" > < img src = \"img/moto3.png\" class = \"img-fluid\" alt = \"moto1\" > </ div > </ div > <!-- Optional JavaScript --> <!-- jQuery first, then Popper.js, then Bootstrap JS --> < script src = \"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity = \"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin = \"anonymous\" ></ script > < script src = \"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity = \"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin = \"anonymous\" ></ script > < script src = \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity = \"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin = \"anonymous\" ></ script > </ body > </ html > Et plus encore... # Gr\u00e2ce gr\u00e2ce \u00e0 la documentation officielle, onp peut inclure aussi des caroussels, des images dont la taille s'adapte \u00e0 l'\u00e9cran, etc ... http://getbootstrap.com/","title":"Frameworks"},{"location":"Premiere/IHM/frameworks/#frameworks","text":"","title":"Frameworks"},{"location":"Premiere/IHM/frameworks/#rappel","text":"Toute page internet s\u2019\u00e9crit ainsi : 1 2 3 4 5 6 7 8 9 10 11 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1\" > < title > Bootstrap demo </ title > </ head > < body > < h1 > Hello, world! </ h1 > </ body > </ html >","title":"Rappel"},{"location":"Premiere/IHM/frameworks/#frameworks-css","text":"Un framework CSS est un ensemble d'outils (fichiers CSS et JavaScript) permettant de simplifier la conception d'un document Web en proposant une grille de mise en page, une stylisation des \u00e9l\u00e9ments HTML et des composants suppl\u00e9mentaires (caroussel, menu, fen\u00eatre modale, etc). Un framework est, en r\u00e8gle g\u00e9n\u00e9rale : Cross-browser Le document est pr\u00e9sent\u00e9 de la m\u00eame mani\u00e8re quelque que soit le navigateur utilis\u00e9 Responsive La mise en page du document Web s'adapte aux dimensions du support utilis\u00e9 pour le consulter Mobile First Le document Web est pens\u00e9 en priorit\u00e9 pour \u00eatre consult\u00e9 sur des p\u00e9riph\u00e9riques mobiles (smartphones, tablettes) Parmi la multitude des frameworks existants (Bootstrap , Semantic UI, Skeleton, Foundation, etc...), on a choisi d'aborder le suivant : Bootstrap 5. Ce frameworks est d\u00e9velopp\u00e9 par la soci\u00e9t\u00e9 Twitter afin d'uniformiser les interfaces de ses applications internes. Ce framework est d\u00e9sormais open-source depuis ao\u00fbt 2011. Il est disponible \u00e0 l\u2019adresse suivante : http://getbootstrap.com/","title":"Frameworks CSS"},{"location":"Premiere/IHM/frameworks/#configuration-du-cdn","text":"Dans la mesure o\u00f9 un front-end framework se r\u00e9sume \u00e0 une collection de fichiers CSS et JavaScript, il suffit d'incorporer ces fichiers dans un document Web en tant que ressources embarqu\u00e9es pour l'utiliser. Pour des consid\u00e9rations de performance (vitesse de t\u00e9l\u00e9chargement) et de robustesse (utilisation des fichiers les plus r\u00e9cents), il est pr\u00e9f\u00e9rable de s'appuyer sur un CDN (Content Delivery Network), un r\u00e9seau de serveurs distribu\u00e9s sur internet qui mettent \u00e0 disposition du contenu. Dans la page http://getbootstrap.com/ , dans la section CDN links , il faut copier/coller la ligne sous CSS only dans l\u2019en-t\u00eate de la page web (entre les balises <head> et </head> ) et copier/coller les lignes sous JS, Popper.js, and jQuery \u00e0 la fin du corps de la page web juste avant </body> . Ci-dessous, en reprenant l'exemple donn\u00e9 ci-dessus, cela donne : 1 2 3 4 5 6 7 8 9 10 11 12 13 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1\" > < title > Bootstrap demo </ title > < link href = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel = \"stylesheet\" integrity = \"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin = \"anonymous\" > </ head > < body > < h1 > Hello, world! </ h1 > < script src = \"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity = \"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin = \"anonymous\" ></ script > </ body > </ html >","title":"Configuration du CDN"},{"location":"Premiere/IHM/frameworks/#systeme-de-grille","text":"L'avantage principal d'un framework CSS r\u00e9side dans l'utilisation de son syst\u00e8me de grille qui facilite la mise en place des \u00e9l\u00e9ments HTML dans une d\u00e9marche de Responsive Web Design. La grille est compos\u00e9e de lignes, chaque ligne pouvant contenir jusqu'\u00e0 12 colonnes. Lors de l'ajout d'un nouvel \u00e9l\u00e9ment au sein d'une ligne, il convient de pr\u00e9ciser le nombre de colonnes qu'il occupe. Par cons\u00e9quent, inutile de pr\u00e9ciser manuellement la hauteur et la largeur de l'\u00e9l\u00e9ment qui sera automatiquement dimensionn\u00e9 par le syst\u00e8me de grille. Conform\u00e9ment \u00e0 la d\u00e9marche de Responsive Web Design, le syst\u00e8me de grille est capable de s'adapter en fonction de la largeur du media. Ceci explique pourquoi il est n\u00e9cessaire d'ajouter un pr\u00e9fixe \u00e0 la classe CSS pr\u00e9cisant le nombre de colonnes occup\u00e9es par l'\u00e9l\u00e9ment HTML. Le tableau ci-dessous recense l'ensemble des pr\u00e9fixes pour le frameworks. Taille \u00e9cran xs (<576px) sm (\u2265576px) md (\u2265768px) lg (\u2265992px) xl (\u22651200px) xxl (\u22651400px) Largeur max du container Aucun (auto) 540px 720px 960px 1140px 1320px Pr\u00e9fixe de classe .col- .col-sm- .col-md- .col-lg- .col-xl- .col-xxl- Nombre de colonnes 12 12 12 12 12 12 Gr\u00e2ce \u00e0 cette classification des largeurs d'\u00e9cran, il est possible d'imaginer une mise en page pour chaque classe de support (smartphone, tablette, ordinateur). L'exemple suivant illustre cette d\u00e9marche en d\u00e9finissant une mise en page en quatre colonnes pour les grands \u00e9crans, en deux colonnes pour les \u00e9crans moyens et enfin en une seule colonne pour les petits. On peut y placer des paragraphes, des images, etc... 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 < div class = \"container\" > < div class = \"row\" > < div class = \"col-lg-3 col-md-6 col-xs-12\" > <!-- contenu de la colonne --> ` </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > <!-- contenu de la colonne --> ` </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > <!-- contenu de la colonne --> ` </ div > < div class = \"col-lg-3 col-md-6 col-xs-12\" > <!-- contenu de la colonne --> ` </ div > </ div > </ div >","title":"Syst\u00e8me de grille"},{"location":"Premiere/IHM/frameworks/#exemple","text":"Cr\u00e9er un dossier intitul\u00e9 exemple_Framworks ; Cr\u00e9er un sous-dossier intitul\u00e9 img ; Enregistrer dans le sous-dossier img , les trois photos de motos suivantes : moto1.png ( lien pour la t\u00e9l\u00e9charger ); moto2.png( lien pour la t\u00e9l\u00e9charger ); moto3.png ( lien pour la t\u00e9l\u00e9charger ). Ouvrir Visual Studio Code et cr\u00e9er un fichier que vous nommerez bootstrap.html et copier/coller le code ci-dessous. Enregistrer et quitter puis ouvrir bootstrap.html avec votre navigateur et faire varier la largeur de la fen\u00eatre. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"utf-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1, shrink-to-fit=no\" > < meta name = \"description\" content = \"Page d\u2019exemple> <meta name=\" keywords \" content = \"HTML5, CSS3\" > < meta name = \"author\" content = \"Eric Galand\" > <!-- Bootstrap CSS --> < link rel = \"stylesheet\" href = \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity = \"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin = \"anonymous\" > < title > Exemple </ title > < link rel = \"stylesheet\" media = \"screen\" href = \"style.css\" > </ head > < body > < div class = \"container\" > < p > Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eros turpis, faucibus vel nunc et, faucibus pellentesque leo. Aenean dignissim consectetur tellus, sit amet tincidunt sapien molestie nec. In lobortis a neque ut tempor. < p > < div class = \"row\" > < div class = \"col-lg-6 col-md-6 col-xs-12\" > < p > Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eros turpis, faucibus vel nunc et, faucibus pellentesque leo. Aenean dignissim consectetur tellus, sit amet tincidunt sapien molestie nec. In lobortis a neque ut tempor. </ p > </ div > < div class = \"col-lg-6 col-md-6 col-xs-12\" > < p > Nulla viverra tristique aliquet. Vivamus ornare elit ligula, quis aliquam libero malesuada id. Nam tempus in lectus vel sodales. Phasellus eleifend fermentum libero, at varius est feugiat vitae. </ p > </ div > < div class = \"row\" > < div class = \" col-lg-4 col-md-4 col-xs-12\" > < img src = \"img/moto1.png\" class = \"img-fluid\" alt = \"moto1\" > </ div > < div class = \" col-lg-4 col-md-4 col-xs-12\" > < img src = \"img/moto2.png\" class = \"img-fluid\" alt = \"moto1\" > </ div > < div class = \" col-lg-4 col-md-4 col-xs-12\" > < img src = \"img/moto3.png\" class = \"img-fluid\" alt = \"moto1\" > </ div > </ div > <!-- Optional JavaScript --> <!-- jQuery first, then Popper.js, then Bootstrap JS --> < script src = \"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity = \"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin = \"anonymous\" ></ script > < script src = \"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity = \"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin = \"anonymous\" ></ script > < script src = \"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity = \"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin = \"anonymous\" ></ script > </ body > </ html >","title":"Exemple"},{"location":"Premiere/IHM/frameworks/#et-plus-encore","text":"Gr\u00e2ce gr\u00e2ce \u00e0 la documentation officielle, onp peut inclure aussi des caroussels, des images dont la taille s'adapte \u00e0 l'\u00e9cran, etc ... http://getbootstrap.com/","title":"Et plus encore..."},{"location":"Premiere/IHM/html_css/","text":"Cr\u00e9er ses propres pages web # Introduction # Nous consultons tous les jours des sites Web. Pour les sites les plus connus, on peut s\u2019apercevoir que l\u2019affichage et les fonctionnalit\u00e9s sont identiques quel que soit le navigateur utilis\u00e9 (ce n\u2019est pas toujours le cas pour des sites moins connus) \u00e0 quelques d\u00e9tails pr\u00e8s. Les pages Web sont cr\u00e9\u00e9es \u00e0 l\u2019aide de langages informatiques. Le respect des r\u00e8gles d\u00e9finies pour ces langages permet de cr\u00e9er des pages WEB qui pourront \u00eatre lues correctement quel que soit le navigateur. Pour cr\u00e9er la page Web visualis\u00e9e, ont \u00e9t\u00e9 utilis\u00e9s les langages HTML et CSS. Le langage HTML a \u00e9t\u00e9 cr\u00e9\u00e9 en 1991 par Tim Berners-Lee. Ce dernier a aussi cr\u00e9\u00e9 le World Wide WebConsortium (W3C) qui d\u00e9finit les nouvelles versions et les standards des langages li\u00e9s au Web. Ma premi\u00e8re page # HTML et \u00e9diteurs # Pour cr\u00e9er des pages Web, on peut utiliser: Des logiciels WYSIWYG (What You See Is What You Get); ce sont des programmes(Mozilla Composer, Dreamweaver et m\u00eame les traitements de texte) qui permettent de cr\u00e9er des sites sans apprendre de langage particulier. Les pages web sont g\u00e9n\u00e9r\u00e9s automatiquement. Permettant une cr\u00e9ation plus rapide au d\u00e9marrage, ils pr\u00e9sentent cependant l\u2019inconv\u00e9nient de modifications plus laborieuses (le codage n\u2019est pas optimis\u00e9,rendant toute modification probl\u00e9matique) Des \u00e9diteurs de texte, ce sont des programmes d\u00e9di\u00e9s \u00e0 l'\u00e9criture de code (pas seulement HTML ou CSS) plus ou moins \u00e9volu\u00e9s (les fonctionnalit\u00e9s de certains facilitent l'\u00e9criture du code). Nous utiliserons l'\u00e9diteur de texte Visual Studio Code Pour t\u00e9l\u00e9charger ce logiciel, il faut se rendre \u00e0 l\u2019adresse suivante : https://code.visualstudio.com Code # Dans vos documents, cr\u00e9er un dossier nomm\u00e9 site_essai . Puis dans ce dossier, cr\u00e9er \u00e0 nouveau un dossier nomm\u00e9 img pour les images. Ouvrir Visual Studio Code et cr\u00e9er un nouveau document. Pour cela, il faut cliquer sur Fichier dans la barre d\u2019outil puis Nouveau Fichier texte ou CTRL+N . Cliquez Selectionnez un langage et choisir html . Faire Fichier puis Enregistrer et choisir site1.html . Maintenant, vous pouvez \u00e9crire votre propre page web. Dans l'\u00e9diteur taper ! suivi de TAB. Vscode cr\u00e9\u00e9 alors automatiquement la structure minimaliste suivante d'une page Web. 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Document </ title > </ head > < body > </ body > </ html > Entre les balises <body> et </body> ins\u00e9rer la ligne de code html suivante : 1 < p > Bonjour tout le monde </ p > Mettre en forme votre code en effectuant un clic droit sur votre code puis Mettre le document en forme . A ce stade, vous devriez obtenir le code suivant : Code 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Document </ title > </ head > < body > < body > < p > Bonjour tout le monde </ p > </ body > </ body > </ html > Pour visualiser votre page web, plusieurs solutions : soit retourner dans votre dossier site_essai , puis puis ouvrez votre page web dans votre navigateur par d\u00e9faut en double-cliquant sur le fichier site1.html . soit installer une nouvelle extension Open in Browser . Une fois redemarr\u00e9 VSCODE , il suffit de cliquer droit sur votre \u00e9diteur puis s\u00e9lectrionner Open In D\u00e9fault Browser . soit installer une autre extension Live Preview . Une fois redemarr\u00e9 VSCODE , il suffit de cliquer sur cette ic\u00f4ne en haut \u00e0 droite de l'\u00e9diteur ou afficher l'aper\u00e7u apr\u00e8s un clic droit. Le langage HTML # Pr\u00e9sentation # Le langage HTML (HyperText Markup Language) permet de structurer les \u00e9l\u00e9ments d\u2019une page Web. Comme son nom l'indique il permet de cr\u00e9er des liens hypertextes (liens internes \u00e0 la page ou liens vers d'autres pages web). Il permet \u00e9galement d'inclure dans les pages web des ressources multim\u00e9dias (images, vid\u00e9o\u2026), des formulaires de saisie ... HTML n'est pas un langage de programmation (comme Python par exemple), c'est un langage de description qui utilise des balises s\u00e9mantiques. Les balises s\u00e9mantiques # En observant attentivement le code ci-dessus, vous remarquerez que les \u00e9l\u00e9ments HTML sont pour la plupart compos\u00e9s de balises s\u00e9mantiques. Elles sont de 2 types : Les balises en paire, comprenant une balise ouvrante ( <nom_de_la_balise> ) et une balise fermante ( </nom_de_la_balise> ) entre lesquelles on ins\u00e8re un contenu. Exercice 1 : Identifiez les balises en paire dans le Code 1 ci-dessus. Les balises orphelines, encore appel\u00e9es autos fermantes. Exercice 2 : Identifiez les balises orphelines dans le Code 1 ci-dessus. Vous remarquerez que pour les balises en paire, la balise ouvrante et la balise fermante peuvent \u00eatre sur la m\u00eame ligne ou pas. Par contre, les balises doivent \u00eatre imbriqu\u00e9es les unes dans les autres. Les indentations ne sont pas obligatoires mais vivement recommand\u00e9es pour mieux visualiser et v\u00e9rifier l'imbrication des balises. Exercice 3 : Parmi les 2 structures suivantes, laquelle est correcte et laquelle ne l\u2019est pas ? structure 1 structure 2 1 2 3 4 < balise1 > < balise2 > </ balise2 > </ balise1 > 1 2 3 4 < balise1 > < balise2 > </ balise1 > </ balise2 > Certains balises HTML disposent d' attributs caract\u00e9ris\u00e9 par un nom et une valeur. Exemple : <html lang=\"fr\"> Pour indiquer que la langue utilis\u00e9e dans la page est en fran\u00e7ais, dans la balise html on peut utiliser l' attribut lang auquel on affecte la valeur fr (pour fran\u00e7ais). Balises fondamentales # Il y a la balise <!DOCTYPE html> . Le doctype (pour Document Type Declaration) permet de renseigner le navigateur Web sur la version de HTML utilis\u00e9e par le document Web. Le doctype utilis\u00e9 dans l'exemple fait r\u00e9f\u00e9rence \u00e0 HTML5. Un fichier HTML est compos\u00e9 de deux parties. <head> et </head> : les \u00e9l\u00e9ments contenus dans l'ent\u00eate n'ont pas vocation \u00e0 \u00eatre affich\u00e9s sauf l'\u00e9l\u00e9ment title dont le contenu appara\u00eet dans l'onglet du navigateur Web. Les informations contenues dans l'ent\u00eate renseignent sur l'auteur et le contenu du document. <body> et </body> : l'ensemble des informations contenues entre ces balises sont affich\u00e9es dans la fen\u00eatre du navigateur Web. Les titres importants, de niveau 1, sont ins\u00e9r\u00e9s entre les balises <h1> et </h1> . Les titres moins importants, de niveau 2, ins\u00e9r\u00e9s entre les balises <h2> et </h2> . (On peut aller jusqu'\u00e0 des titres de nveau 7). L'\u00e9l\u00e9ment p , que nous avons utilis\u00e9 d\u00e9limite un paragraphe de texte, a pour balise ouvrante <p> et pour balise fermante </p> . Exercice 4 Placer dans le Code 1 un titre et un sous-titre et y placer un second paragraphe. Commentaires # \u00c9ventuellement des commentaires qui peuvent \u00eatre ins\u00e9r\u00e9s n'importe o\u00f9 dans une page web \u00e0 l'int\u00e9rieur de la balise orpheline <!-- commentaires --> . Les commentaires ne sont pas interpr\u00e9t\u00e9s par le navigateur et donc pas affich\u00e9s \u00e0 l'\u00e9cran. Exercice 5 Placez deux commentaires dans la page web correspondant au Code1 Balises de mise en forme du texte # Bien qu'il existe un langage de mise en forme (le CSS), il peut \u00eatre utile de conna\u00eetre certaines balises de mise en forme du texte. Balises R\u00f4le <b> et </b> Mise en gras <i> et </i> Mise en italique <u> et </u> Soulignement <sub> et </sub> Mise en indice <sup> et </sup> Mise en exposant <code> et </code> Code <mark> et </mark> Texte surlign\u00e9 Exercice 6 : \u00c9crivez une page web nomm\u00e9e site2.html et compos\u00e9e d'un titre, d'un sous titre et de deux paragraphes o\u00f9 vous utiliserez toutes les balises de mise en forme du texte. Ces deux paragraphes pourront \u00eatre du Lorem Ipsum. Pour utiliser cette fonctionnalit\u00e9, tapez Lorem puis la touche tabulation. Insertion de liens # HTML (Hyper Text Markup Language) est un langage hypertexte, cela signifie qu'il vous permet en cliquant sur un mot, g\u00e9n\u00e9ralement soulign\u00e9 (ou une image) de vous rendre : sur un autre endroit de la page ; sur un autre fichier HTML situ\u00e9 sur votre ordinateur. sur un autre ordinateur en r\u00e9seau, y compris sur le Web. Pour \u00e9crire un lien sur une page web, il faut adopter la syntaxe suivante: 1 < a href = \"lien\" > texte < \\a>` avec: texte: mot ou expression qui appara\u00eet en bleu soulign\u00e9 dans la page lien : adresse d'un site (Exemple : https://fr.wikipedia.org/wiki/Informatique) adresse d'une autre page html situ\u00e9e dans notre dossier site_essai (exemple: site.html \u00e0 cr\u00e9er ult\u00e9rieurement) ou bien un mot dans la m\u00eame page web. Pour ce faire, il faut d\u00e9finir un mot cible gr\u00e2ce \u00e0 la balise span ou div en en fonction du fait que l'on veuille une balise de type en ligne ou en bloc. Exemple : <div id=\"mon_ancre\">mot_cible<div> ou <span id=\"cible\">mot_cible<span> . On l'appelle par la balise <a href=\"#mon_ancre\">Aller vers l'ancre</a> Exercice 7 \u00c9crire une troisi\u00e8me page web appel\u00e9e site3.html . Y placer un titre et 5 paragraphes. Ces deux paragraphes comprendront les trois types de liens : un vers une page wikip\u00e9dia un autre vers site2.html enfin un lien qui sera ins\u00e9r\u00e9 dans le premier paragraphe 1 vers un mot du cinqui\u00e8me paragraphe. Insertion d\u2019images # On peut ins\u00e9rer une image (au format png, jpeg ou gif) qui se trouve sans le dossier img du dossier site_essai gr\u00e2ce \u00e0 la balise <img> . Pour ins\u00e9rer une image nomm\u00e9e smiley.png pr\u00e9alablement enregistr\u00e9e dans le sous-dossier \u00ecmg`, on peut proc\u00e9der de la mani\u00e8re suivante : 1 < img src = \"img/smiley.png\" alt = \"Smiley face\" width = \"42\" height = \"42\" > D\u00e9taillons cette ligne : src=\"img/smiley.png\" Cet attribut obligatoire. L'attribut src a comme valeur le chemin de l'image que vous voulez afficher. Il est conseill\u00e9 de mettre un chemin relatif. alt=\"Smiley face\" sp\u00e9cifie un texte alternatif si l\u2019image ne s\u2019affiche pas (Smiley face). Cet attribut est recommand\u00e9. width=\"42\" height=\"42\" sp\u00e9cifie la largeur (42 pixels) et la hauteur (42 pixels). Ces attributs sont facultatifs. Il est d'usage plut\u00f4t d'utiliser le css pour sp\u00e9cifier la hauteur et la largeur d'une image. Exemple : avec une image issue du web. See the Pen img by eric ( @ga78523 ) on CodePen . Les listes # On peut organiser le texte en liste. Il existe 2 types de listes : Les listes \u00e9num\u00e9r\u00e9es. Elles sont contenues dans un \u00e9l\u00e9ment ol (abr\u00e9viation de l\u2019anglais ordered list) ; Les listes non-\u00e9num\u00e9r\u00e9e. Elles sont contenues dans un \u00e9l\u00e9ment ul (abr\u00e9viation de l\u2019anglais unordered list). Quelque soit le type de liste, chaque entr\u00e9e de liste est contenue dans un \u00e9l\u00e9ment li . Les listes peuvent \u00e9videmment \u00eatre imbriqu\u00e9es. Exemple : See the Pen liste by eric ( @ga78523 ) on CodePen . Les tableaux # On peut enfin organiser du texte dans des tableaux au moyen de l\u2019\u00e9l\u00e9ment table , qui contient l\u2019ensemble des lignes du tableau, chacune d\u2019elle consistant en un \u00e9l\u00e9ment tr (abr\u00e9viation de l\u2019anglais table row = ligne de tableau). Enfin chaque ligne d\u00e9crit les cases qu\u2019elle contient au moyen de l\u2019\u00e9l\u00e9ment td . See the Pen Untitled by eric ( @ga78523 ) on CodePen . Pour en savoir plus... # Pour conna\u00eetre d\u2019autres balises et d\u2019autres attributs, consulter le site MDN . Le langage CSS (Cascading Style Sheet) # Introduction # Si nous voulons donner une unit\u00e9 au site, il est recommand\u00e9, pour chaque page, de d\u00e9finir un m\u00eame fond d'\u00e9cran, une m\u00eame police de caract\u00e8res, une m\u00eame couleur pour les caract\u00e8res... Il est possible, dans chacune des pages web, de le faire directement depuis le code html. Par exemple, Dans l'\u00e9l\u00e9ment body, on peut placer l\u2019attribut bgcolor=\"# 33CCFF\". Celui-ci permet de colorer le fond d\u2019\u00e9cran en bleu clair (La couleur est \u00e9crite en hexad\u00e9cimal). Exemple : 1 2 3 < body bgcolor = \"#E6E6FA\" > < p > Et voici un fond d'\u00e9cran bleu clair </ p > </ body > Or, nous pouvons aussi utiliser une page de style \u00e9crite dans un autre langage : le CSS. Le Langage CSS, apparu en 1996, est compl\u00e9mentaire du langage HTML et permet de g\u00e9rer la mise en forme (l'apparence) des diff\u00e9rentes pages d\u2019un site Web (couleur du texte, police, taille du texte, bordures, fond ...) Ainsi, dans l\u2019exemple pr\u00e9c\u00e9dent, il suffit de cr\u00e9er une page de style CSS (avec Visual Studio Code par exemple) dans le dossier site_essai dans laquelle il est \u00e9crit que les fonds d'\u00e9cran sont en bleu. Toutes les pages html cr\u00e9\u00e9es appelleront la feuille de style nomm\u00e9e ici style.css dans l\u2019en-t\u00eate (head) de la page gr\u00e2ce \u00e0 l\u2019instruction : 1 < link href = \"style.css\" rel = \"Stylesheet\" type = \"text/css\" > Exemple de fichier CSS # 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 body { background-color : azure ; } h1 { color : red ; margin : auto ; } h2 { color : green ; } h3 { color : blueviolet ; } p { color : black ; text-align : justify ; font-style : italic ; } Ici, on indique que l\u2019\u00e9l\u00e9ment p (paragraphe) contient du texte align\u00e9 des deux c\u00f4t\u00e9s (justifi\u00e9), en italique et de couleur noire. On indique \u00e9galement que l\u2019\u00e9l\u00e9ment body (corps de la page HTML) aura un fond d\u2019\u00e9cran couleur gainsboro c\u2019est-\u00e0-dire bleu tr\u00e8s clair, que les titres de niveau 1 seront en rouge, ceux de niveau 2 en vet ... En CSS : Body et p sont nomm\u00e9s selecteur ; color , text-align , background-color sont nomm\u00e9s propri\u00e9t\u00e9s CSS ; gainsboro , blue , justify sont nomm\u00e9s valeurs . La notion de boite # Dans le mod\u00e8le des feuilles de style, tous les \u00e9l\u00e9ments d\u2019une page HTML se coulent dans des blocs (ou \u00ab boites \u00bb) rectangulaires. Un bloc typique est repr\u00e9sent\u00e9 ci-dessous : A partir de l\u2019ext\u00e9rieur, on rencontre successivement 4 zones : Une marge externe ( margin ), toujours transparente, avec des \u00e9paisseurs r\u00e9glables c\u00f4t\u00e9 par c\u00f4t\u00e9 ; Une bordure ( border ) dont on peut r\u00e9gler l\u2019\u00e9paisseur, la couleur et le style c\u00f4t\u00e9 par c\u00f4t\u00e9 ; Une marge intern e ( padding ), ou \u00ab espacement \u00bb, d\u2019\u00e9paisseur r\u00e9glable c\u00f4t\u00e9 par c\u00f4t\u00e9 ; L\u2019espace d\u00e9volu au bloc. Il existe en HTML deux cat\u00e9gories d\u2019\u00e9l\u00e9ments textuels : les \u00e9l\u00e9ments block (les \u00e9l\u00e9ments p, ul sont par d\u00e9faut des \u00e9l\u00e9ments block) qui cr\u00e9ent une boite et forcent un retour \u00e0 la ligne et les \u00e9l\u00e9ments de type inline (les \u00e9l\u00e9ments a, b, i sont par d\u00e9faut des \u00e9l\u00e9ments inline) qui placent leur contenu dans le flot du texte. Il est possible faire passer des \u00e9l\u00e9ments inline en \u00e9l\u00e9ments block (et inversement \u00e0 l\u2019aide de la propri\u00e9t\u00e9 display). Quelques propri\u00e9t\u00e9s CSS # De nombreuses propri\u00e9t\u00e9s CSS indiquent des longueurs (taille d\u2019une bordure, d\u2019un ajustement, taille des polices). Leur valeur est toujours un nombre suivi d\u2019une unit\u00e9. Parmi les unit\u00e9s l\u00e9gales en CSS, on retrouve notamment le pixel (px) et le point (pt). Nous donnons ci-dessous quelques propri\u00e9t\u00e9s CSS. Propri\u00e9t\u00e9 Valeur Description display None, block ou inline mode d\u2019affichage de la bo\u00eete Background couleur couleur de fond de la bo\u00eete color couleur couleur de texte border taille motif couleur ou none Si none, la bordure est masqu\u00e9e. Sinon, on donne la taille, le motif (solid, dotted oudashed) et la couleur s\u00e9par\u00e9s par des espaces. margin longueur taille des marges padding longueur taille des ajustements text-decoration none, underline, overline, ouline-through d\u00e9coration du texte text-align left, right, ou justify justification du texte font-family fixed, serif, ou sans serif justification du texte font-weight normal, light, bold, ou bolder graisse de la police font-style normal ou italic style de la police font-size Longueur ou xx-small, x-small,small, normal, large, x-large,xx-large taille de la police Les balises div et span et les class # Les \u00e9l\u00e9ments div sont des balises de type blo c tandis que les \u00e9l\u00e9ments span sont des balises de types inline . Elles sont surtout utiles pour \"d\u00e9connecter\" certains morceaux de paragraphe ou plusieurs paragraphes de cette logique d'\u00e9criture avec des feuilles de style. Elles cr\u00e9ent ainsi des petits blocs particuliers dans le document sans devoir repasser par les \u00e9l\u00e9ments structurels du HTML classique. Les attributs class et id sont des attributs universels ce qui signifie qu\u2019on va pouvoir les utiliser avec n\u2019importe quel \u00e9l\u00e9ment HTML, et notamment avec les \u00e9l\u00e9ments div et span . En pratique, il va \u00eatre tr\u00e8s courant de pr\u00e9ciser des attributs class et id pour nos \u00e9l\u00e9ments div et span pour pouvoir appliquer des styles \u00e0 un div (ou span ) ou \u00e0 un groupe d\u2019\u00e9l\u00e9ments ( div ou span ) d\u00e9finis. HTML CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" /> < title > Premier essai </ title > </ head > < body > < h1 > Un titre de niveau 1 </ h1 > < div class = \"conteneur\" id = \"cp\" > < p > Un premier paragraphe </ p > < p > Un autre paragraphe </ p > < ul > < li > Un \u00e9l\u00e9ment de liste </ li > < li > Un < span class = \"gras\" > autre \u00e9l\u00e9ment </ span > de liste </ li > </ ul > </ div > < p > Un < span class = \"gras fondjaune\" > troisi\u00e8me </ span > paragraphe </ p > < div > < p class = \"gras\" > Un dernier paragraphe </ p > </ div > </ body > </ html > 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /*Couleur de fond du body (donc de la partie visible de la page) : bleu clair*/ body { background-color : lightBlue ; } div { background-color : purple ; /*Les div auront un fond violet*/ color : white ; /*Textes des \u00e9l\u00e9ments dans les div blancs par h\u00e9ritage*/ } . conteneur { width : 80 % ; /*La largeur de l'\u00e9l\u00e9ment sera \u00e9gale \u00e0 80% de son parent*/ } # cp { margin : 0 auto ; /*Permet de centrer le div dans son \u00e9l\u00e9ment parent (body ici)*/ } . gras { font-weight : bold ; /*Les textes seront en gras*/ } . fondjaune { background-color : yellow ; /*Fond des span jaune*/ } See the Pen Untitled by eric ( @ga78523 ) on CodePen . Pour en savoir plus... # Vous pouvez aller sur : le site MDN ( site ) : la r\u00e9f\u00e9rence ; le site W3S o\u00f9 il existe un validateur HTML5 ( site ); le site de Pierre Giraud ( site ).","title":"web"},{"location":"Premiere/IHM/html_css/#creer-ses-propres-pages-web","text":"","title":"Cr\u00e9er ses propres pages web"},{"location":"Premiere/IHM/html_css/#introduction","text":"Nous consultons tous les jours des sites Web. Pour les sites les plus connus, on peut s\u2019apercevoir que l\u2019affichage et les fonctionnalit\u00e9s sont identiques quel que soit le navigateur utilis\u00e9 (ce n\u2019est pas toujours le cas pour des sites moins connus) \u00e0 quelques d\u00e9tails pr\u00e8s. Les pages Web sont cr\u00e9\u00e9es \u00e0 l\u2019aide de langages informatiques. Le respect des r\u00e8gles d\u00e9finies pour ces langages permet de cr\u00e9er des pages WEB qui pourront \u00eatre lues correctement quel que soit le navigateur. Pour cr\u00e9er la page Web visualis\u00e9e, ont \u00e9t\u00e9 utilis\u00e9s les langages HTML et CSS. Le langage HTML a \u00e9t\u00e9 cr\u00e9\u00e9 en 1991 par Tim Berners-Lee. Ce dernier a aussi cr\u00e9\u00e9 le World Wide WebConsortium (W3C) qui d\u00e9finit les nouvelles versions et les standards des langages li\u00e9s au Web.","title":"Introduction"},{"location":"Premiere/IHM/html_css/#ma-premiere-page","text":"","title":"Ma premi\u00e8re page"},{"location":"Premiere/IHM/html_css/#html-et-editeurs","text":"Pour cr\u00e9er des pages Web, on peut utiliser: Des logiciels WYSIWYG (What You See Is What You Get); ce sont des programmes(Mozilla Composer, Dreamweaver et m\u00eame les traitements de texte) qui permettent de cr\u00e9er des sites sans apprendre de langage particulier. Les pages web sont g\u00e9n\u00e9r\u00e9s automatiquement. Permettant une cr\u00e9ation plus rapide au d\u00e9marrage, ils pr\u00e9sentent cependant l\u2019inconv\u00e9nient de modifications plus laborieuses (le codage n\u2019est pas optimis\u00e9,rendant toute modification probl\u00e9matique) Des \u00e9diteurs de texte, ce sont des programmes d\u00e9di\u00e9s \u00e0 l'\u00e9criture de code (pas seulement HTML ou CSS) plus ou moins \u00e9volu\u00e9s (les fonctionnalit\u00e9s de certains facilitent l'\u00e9criture du code). Nous utiliserons l'\u00e9diteur de texte Visual Studio Code Pour t\u00e9l\u00e9charger ce logiciel, il faut se rendre \u00e0 l\u2019adresse suivante : https://code.visualstudio.com","title":"HTML et \u00e9diteurs"},{"location":"Premiere/IHM/html_css/#code","text":"Dans vos documents, cr\u00e9er un dossier nomm\u00e9 site_essai . Puis dans ce dossier, cr\u00e9er \u00e0 nouveau un dossier nomm\u00e9 img pour les images. Ouvrir Visual Studio Code et cr\u00e9er un nouveau document. Pour cela, il faut cliquer sur Fichier dans la barre d\u2019outil puis Nouveau Fichier texte ou CTRL+N . Cliquez Selectionnez un langage et choisir html . Faire Fichier puis Enregistrer et choisir site1.html . Maintenant, vous pouvez \u00e9crire votre propre page web. Dans l'\u00e9diteur taper ! suivi de TAB. Vscode cr\u00e9\u00e9 alors automatiquement la structure minimaliste suivante d'une page Web. 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Document </ title > </ head > < body > </ body > </ html > Entre les balises <body> et </body> ins\u00e9rer la ligne de code html suivante : 1 < p > Bonjour tout le monde </ p > Mettre en forme votre code en effectuant un clic droit sur votre code puis Mettre le document en forme . A ce stade, vous devriez obtenir le code suivant : Code 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < meta name = \"viewport\" content = \"width=device-width, initial-scale=1.0\" > < title > Document </ title > </ head > < body > < body > < p > Bonjour tout le monde </ p > </ body > </ body > </ html > Pour visualiser votre page web, plusieurs solutions : soit retourner dans votre dossier site_essai , puis puis ouvrez votre page web dans votre navigateur par d\u00e9faut en double-cliquant sur le fichier site1.html . soit installer une nouvelle extension Open in Browser . Une fois redemarr\u00e9 VSCODE , il suffit de cliquer droit sur votre \u00e9diteur puis s\u00e9lectrionner Open In D\u00e9fault Browser . soit installer une autre extension Live Preview . Une fois redemarr\u00e9 VSCODE , il suffit de cliquer sur cette ic\u00f4ne en haut \u00e0 droite de l'\u00e9diteur ou afficher l'aper\u00e7u apr\u00e8s un clic droit.","title":"Code"},{"location":"Premiere/IHM/html_css/#le-langage-html","text":"","title":"Le langage HTML"},{"location":"Premiere/IHM/html_css/#presentation","text":"Le langage HTML (HyperText Markup Language) permet de structurer les \u00e9l\u00e9ments d\u2019une page Web. Comme son nom l'indique il permet de cr\u00e9er des liens hypertextes (liens internes \u00e0 la page ou liens vers d'autres pages web). Il permet \u00e9galement d'inclure dans les pages web des ressources multim\u00e9dias (images, vid\u00e9o\u2026), des formulaires de saisie ... HTML n'est pas un langage de programmation (comme Python par exemple), c'est un langage de description qui utilise des balises s\u00e9mantiques.","title":"Pr\u00e9sentation"},{"location":"Premiere/IHM/html_css/#les-balises-semantiques","text":"En observant attentivement le code ci-dessus, vous remarquerez que les \u00e9l\u00e9ments HTML sont pour la plupart compos\u00e9s de balises s\u00e9mantiques. Elles sont de 2 types : Les balises en paire, comprenant une balise ouvrante ( <nom_de_la_balise> ) et une balise fermante ( </nom_de_la_balise> ) entre lesquelles on ins\u00e8re un contenu. Exercice 1 : Identifiez les balises en paire dans le Code 1 ci-dessus. Les balises orphelines, encore appel\u00e9es autos fermantes. Exercice 2 : Identifiez les balises orphelines dans le Code 1 ci-dessus. Vous remarquerez que pour les balises en paire, la balise ouvrante et la balise fermante peuvent \u00eatre sur la m\u00eame ligne ou pas. Par contre, les balises doivent \u00eatre imbriqu\u00e9es les unes dans les autres. Les indentations ne sont pas obligatoires mais vivement recommand\u00e9es pour mieux visualiser et v\u00e9rifier l'imbrication des balises. Exercice 3 : Parmi les 2 structures suivantes, laquelle est correcte et laquelle ne l\u2019est pas ? structure 1 structure 2 1 2 3 4 < balise1 > < balise2 > </ balise2 > </ balise1 > 1 2 3 4 < balise1 > < balise2 > </ balise1 > </ balise2 > Certains balises HTML disposent d' attributs caract\u00e9ris\u00e9 par un nom et une valeur. Exemple : <html lang=\"fr\"> Pour indiquer que la langue utilis\u00e9e dans la page est en fran\u00e7ais, dans la balise html on peut utiliser l' attribut lang auquel on affecte la valeur fr (pour fran\u00e7ais).","title":"Les balises s\u00e9mantiques"},{"location":"Premiere/IHM/html_css/#balises-fondamentales","text":"Il y a la balise <!DOCTYPE html> . Le doctype (pour Document Type Declaration) permet de renseigner le navigateur Web sur la version de HTML utilis\u00e9e par le document Web. Le doctype utilis\u00e9 dans l'exemple fait r\u00e9f\u00e9rence \u00e0 HTML5. Un fichier HTML est compos\u00e9 de deux parties. <head> et </head> : les \u00e9l\u00e9ments contenus dans l'ent\u00eate n'ont pas vocation \u00e0 \u00eatre affich\u00e9s sauf l'\u00e9l\u00e9ment title dont le contenu appara\u00eet dans l'onglet du navigateur Web. Les informations contenues dans l'ent\u00eate renseignent sur l'auteur et le contenu du document. <body> et </body> : l'ensemble des informations contenues entre ces balises sont affich\u00e9es dans la fen\u00eatre du navigateur Web. Les titres importants, de niveau 1, sont ins\u00e9r\u00e9s entre les balises <h1> et </h1> . Les titres moins importants, de niveau 2, ins\u00e9r\u00e9s entre les balises <h2> et </h2> . (On peut aller jusqu'\u00e0 des titres de nveau 7). L'\u00e9l\u00e9ment p , que nous avons utilis\u00e9 d\u00e9limite un paragraphe de texte, a pour balise ouvrante <p> et pour balise fermante </p> . Exercice 4 Placer dans le Code 1 un titre et un sous-titre et y placer un second paragraphe.","title":"Balises fondamentales"},{"location":"Premiere/IHM/html_css/#commentaires","text":"\u00c9ventuellement des commentaires qui peuvent \u00eatre ins\u00e9r\u00e9s n'importe o\u00f9 dans une page web \u00e0 l'int\u00e9rieur de la balise orpheline <!-- commentaires --> . Les commentaires ne sont pas interpr\u00e9t\u00e9s par le navigateur et donc pas affich\u00e9s \u00e0 l'\u00e9cran. Exercice 5 Placez deux commentaires dans la page web correspondant au Code1","title":"Commentaires"},{"location":"Premiere/IHM/html_css/#balises-de-mise-en-forme-du-texte","text":"Bien qu'il existe un langage de mise en forme (le CSS), il peut \u00eatre utile de conna\u00eetre certaines balises de mise en forme du texte. Balises R\u00f4le <b> et </b> Mise en gras <i> et </i> Mise en italique <u> et </u> Soulignement <sub> et </sub> Mise en indice <sup> et </sup> Mise en exposant <code> et </code> Code <mark> et </mark> Texte surlign\u00e9 Exercice 6 : \u00c9crivez une page web nomm\u00e9e site2.html et compos\u00e9e d'un titre, d'un sous titre et de deux paragraphes o\u00f9 vous utiliserez toutes les balises de mise en forme du texte. Ces deux paragraphes pourront \u00eatre du Lorem Ipsum. Pour utiliser cette fonctionnalit\u00e9, tapez Lorem puis la touche tabulation.","title":"Balises de mise en forme du texte"},{"location":"Premiere/IHM/html_css/#insertion-de-liens","text":"HTML (Hyper Text Markup Language) est un langage hypertexte, cela signifie qu'il vous permet en cliquant sur un mot, g\u00e9n\u00e9ralement soulign\u00e9 (ou une image) de vous rendre : sur un autre endroit de la page ; sur un autre fichier HTML situ\u00e9 sur votre ordinateur. sur un autre ordinateur en r\u00e9seau, y compris sur le Web. Pour \u00e9crire un lien sur une page web, il faut adopter la syntaxe suivante: 1 < a href = \"lien\" > texte < \\a>` avec: texte: mot ou expression qui appara\u00eet en bleu soulign\u00e9 dans la page lien : adresse d'un site (Exemple : https://fr.wikipedia.org/wiki/Informatique) adresse d'une autre page html situ\u00e9e dans notre dossier site_essai (exemple: site.html \u00e0 cr\u00e9er ult\u00e9rieurement) ou bien un mot dans la m\u00eame page web. Pour ce faire, il faut d\u00e9finir un mot cible gr\u00e2ce \u00e0 la balise span ou div en en fonction du fait que l'on veuille une balise de type en ligne ou en bloc. Exemple : <div id=\"mon_ancre\">mot_cible<div> ou <span id=\"cible\">mot_cible<span> . On l'appelle par la balise <a href=\"#mon_ancre\">Aller vers l'ancre</a> Exercice 7 \u00c9crire une troisi\u00e8me page web appel\u00e9e site3.html . Y placer un titre et 5 paragraphes. Ces deux paragraphes comprendront les trois types de liens : un vers une page wikip\u00e9dia un autre vers site2.html enfin un lien qui sera ins\u00e9r\u00e9 dans le premier paragraphe 1 vers un mot du cinqui\u00e8me paragraphe.","title":"Insertion de liens"},{"location":"Premiere/IHM/html_css/#insertion-dimages","text":"On peut ins\u00e9rer une image (au format png, jpeg ou gif) qui se trouve sans le dossier img du dossier site_essai gr\u00e2ce \u00e0 la balise <img> . Pour ins\u00e9rer une image nomm\u00e9e smiley.png pr\u00e9alablement enregistr\u00e9e dans le sous-dossier \u00ecmg`, on peut proc\u00e9der de la mani\u00e8re suivante : 1 < img src = \"img/smiley.png\" alt = \"Smiley face\" width = \"42\" height = \"42\" > D\u00e9taillons cette ligne : src=\"img/smiley.png\" Cet attribut obligatoire. L'attribut src a comme valeur le chemin de l'image que vous voulez afficher. Il est conseill\u00e9 de mettre un chemin relatif. alt=\"Smiley face\" sp\u00e9cifie un texte alternatif si l\u2019image ne s\u2019affiche pas (Smiley face). Cet attribut est recommand\u00e9. width=\"42\" height=\"42\" sp\u00e9cifie la largeur (42 pixels) et la hauteur (42 pixels). Ces attributs sont facultatifs. Il est d'usage plut\u00f4t d'utiliser le css pour sp\u00e9cifier la hauteur et la largeur d'une image. Exemple : avec une image issue du web. See the Pen img by eric ( @ga78523 ) on CodePen .","title":"Insertion d\u2019images"},{"location":"Premiere/IHM/html_css/#les-listes","text":"On peut organiser le texte en liste. Il existe 2 types de listes : Les listes \u00e9num\u00e9r\u00e9es. Elles sont contenues dans un \u00e9l\u00e9ment ol (abr\u00e9viation de l\u2019anglais ordered list) ; Les listes non-\u00e9num\u00e9r\u00e9e. Elles sont contenues dans un \u00e9l\u00e9ment ul (abr\u00e9viation de l\u2019anglais unordered list). Quelque soit le type de liste, chaque entr\u00e9e de liste est contenue dans un \u00e9l\u00e9ment li . Les listes peuvent \u00e9videmment \u00eatre imbriqu\u00e9es. Exemple : See the Pen liste by eric ( @ga78523 ) on CodePen .","title":"Les listes"},{"location":"Premiere/IHM/html_css/#les-tableaux","text":"On peut enfin organiser du texte dans des tableaux au moyen de l\u2019\u00e9l\u00e9ment table , qui contient l\u2019ensemble des lignes du tableau, chacune d\u2019elle consistant en un \u00e9l\u00e9ment tr (abr\u00e9viation de l\u2019anglais table row = ligne de tableau). Enfin chaque ligne d\u00e9crit les cases qu\u2019elle contient au moyen de l\u2019\u00e9l\u00e9ment td . See the Pen Untitled by eric ( @ga78523 ) on CodePen .","title":"Les tableaux"},{"location":"Premiere/IHM/html_css/#pour-en-savoir-plus","text":"Pour conna\u00eetre d\u2019autres balises et d\u2019autres attributs, consulter le site MDN .","title":"Pour en savoir plus..."},{"location":"Premiere/IHM/html_css/#le-langage-css-cascading-style-sheet","text":"","title":"Le langage CSS (Cascading Style Sheet)"},{"location":"Premiere/IHM/html_css/#introduction_1","text":"Si nous voulons donner une unit\u00e9 au site, il est recommand\u00e9, pour chaque page, de d\u00e9finir un m\u00eame fond d'\u00e9cran, une m\u00eame police de caract\u00e8res, une m\u00eame couleur pour les caract\u00e8res... Il est possible, dans chacune des pages web, de le faire directement depuis le code html. Par exemple, Dans l'\u00e9l\u00e9ment body, on peut placer l\u2019attribut bgcolor=\"# 33CCFF\". Celui-ci permet de colorer le fond d\u2019\u00e9cran en bleu clair (La couleur est \u00e9crite en hexad\u00e9cimal). Exemple : 1 2 3 < body bgcolor = \"#E6E6FA\" > < p > Et voici un fond d'\u00e9cran bleu clair </ p > </ body > Or, nous pouvons aussi utiliser une page de style \u00e9crite dans un autre langage : le CSS. Le Langage CSS, apparu en 1996, est compl\u00e9mentaire du langage HTML et permet de g\u00e9rer la mise en forme (l'apparence) des diff\u00e9rentes pages d\u2019un site Web (couleur du texte, police, taille du texte, bordures, fond ...) Ainsi, dans l\u2019exemple pr\u00e9c\u00e9dent, il suffit de cr\u00e9er une page de style CSS (avec Visual Studio Code par exemple) dans le dossier site_essai dans laquelle il est \u00e9crit que les fonds d'\u00e9cran sont en bleu. Toutes les pages html cr\u00e9\u00e9es appelleront la feuille de style nomm\u00e9e ici style.css dans l\u2019en-t\u00eate (head) de la page gr\u00e2ce \u00e0 l\u2019instruction : 1 < link href = \"style.css\" rel = \"Stylesheet\" type = \"text/css\" >","title":"Introduction"},{"location":"Premiere/IHM/html_css/#exemple-de-fichier-css","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 body { background-color : azure ; } h1 { color : red ; margin : auto ; } h2 { color : green ; } h3 { color : blueviolet ; } p { color : black ; text-align : justify ; font-style : italic ; } Ici, on indique que l\u2019\u00e9l\u00e9ment p (paragraphe) contient du texte align\u00e9 des deux c\u00f4t\u00e9s (justifi\u00e9), en italique et de couleur noire. On indique \u00e9galement que l\u2019\u00e9l\u00e9ment body (corps de la page HTML) aura un fond d\u2019\u00e9cran couleur gainsboro c\u2019est-\u00e0-dire bleu tr\u00e8s clair, que les titres de niveau 1 seront en rouge, ceux de niveau 2 en vet ... En CSS : Body et p sont nomm\u00e9s selecteur ; color , text-align , background-color sont nomm\u00e9s propri\u00e9t\u00e9s CSS ; gainsboro , blue , justify sont nomm\u00e9s valeurs .","title":"Exemple de fichier CSS"},{"location":"Premiere/IHM/html_css/#la-notion-de-boite","text":"Dans le mod\u00e8le des feuilles de style, tous les \u00e9l\u00e9ments d\u2019une page HTML se coulent dans des blocs (ou \u00ab boites \u00bb) rectangulaires. Un bloc typique est repr\u00e9sent\u00e9 ci-dessous : A partir de l\u2019ext\u00e9rieur, on rencontre successivement 4 zones : Une marge externe ( margin ), toujours transparente, avec des \u00e9paisseurs r\u00e9glables c\u00f4t\u00e9 par c\u00f4t\u00e9 ; Une bordure ( border ) dont on peut r\u00e9gler l\u2019\u00e9paisseur, la couleur et le style c\u00f4t\u00e9 par c\u00f4t\u00e9 ; Une marge intern e ( padding ), ou \u00ab espacement \u00bb, d\u2019\u00e9paisseur r\u00e9glable c\u00f4t\u00e9 par c\u00f4t\u00e9 ; L\u2019espace d\u00e9volu au bloc. Il existe en HTML deux cat\u00e9gories d\u2019\u00e9l\u00e9ments textuels : les \u00e9l\u00e9ments block (les \u00e9l\u00e9ments p, ul sont par d\u00e9faut des \u00e9l\u00e9ments block) qui cr\u00e9ent une boite et forcent un retour \u00e0 la ligne et les \u00e9l\u00e9ments de type inline (les \u00e9l\u00e9ments a, b, i sont par d\u00e9faut des \u00e9l\u00e9ments inline) qui placent leur contenu dans le flot du texte. Il est possible faire passer des \u00e9l\u00e9ments inline en \u00e9l\u00e9ments block (et inversement \u00e0 l\u2019aide de la propri\u00e9t\u00e9 display).","title":"La notion de boite"},{"location":"Premiere/IHM/html_css/#quelques-proprietes-css","text":"De nombreuses propri\u00e9t\u00e9s CSS indiquent des longueurs (taille d\u2019une bordure, d\u2019un ajustement, taille des polices). Leur valeur est toujours un nombre suivi d\u2019une unit\u00e9. Parmi les unit\u00e9s l\u00e9gales en CSS, on retrouve notamment le pixel (px) et le point (pt). Nous donnons ci-dessous quelques propri\u00e9t\u00e9s CSS. Propri\u00e9t\u00e9 Valeur Description display None, block ou inline mode d\u2019affichage de la bo\u00eete Background couleur couleur de fond de la bo\u00eete color couleur couleur de texte border taille motif couleur ou none Si none, la bordure est masqu\u00e9e. Sinon, on donne la taille, le motif (solid, dotted oudashed) et la couleur s\u00e9par\u00e9s par des espaces. margin longueur taille des marges padding longueur taille des ajustements text-decoration none, underline, overline, ouline-through d\u00e9coration du texte text-align left, right, ou justify justification du texte font-family fixed, serif, ou sans serif justification du texte font-weight normal, light, bold, ou bolder graisse de la police font-style normal ou italic style de la police font-size Longueur ou xx-small, x-small,small, normal, large, x-large,xx-large taille de la police","title":"Quelques propri\u00e9t\u00e9s CSS"},{"location":"Premiere/IHM/html_css/#les-balises-div-et-span-et-les-class","text":"Les \u00e9l\u00e9ments div sont des balises de type blo c tandis que les \u00e9l\u00e9ments span sont des balises de types inline . Elles sont surtout utiles pour \"d\u00e9connecter\" certains morceaux de paragraphe ou plusieurs paragraphes de cette logique d'\u00e9criture avec des feuilles de style. Elles cr\u00e9ent ainsi des petits blocs particuliers dans le document sans devoir repasser par les \u00e9l\u00e9ments structurels du HTML classique. Les attributs class et id sont des attributs universels ce qui signifie qu\u2019on va pouvoir les utiliser avec n\u2019importe quel \u00e9l\u00e9ment HTML, et notamment avec les \u00e9l\u00e9ments div et span . En pratique, il va \u00eatre tr\u00e8s courant de pr\u00e9ciser des attributs class et id pour nos \u00e9l\u00e9ments div et span pour pouvoir appliquer des styles \u00e0 un div (ou span ) ou \u00e0 un groupe d\u2019\u00e9l\u00e9ments ( div ou span ) d\u00e9finis. HTML CSS 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" /> < title > Premier essai </ title > </ head > < body > < h1 > Un titre de niveau 1 </ h1 > < div class = \"conteneur\" id = \"cp\" > < p > Un premier paragraphe </ p > < p > Un autre paragraphe </ p > < ul > < li > Un \u00e9l\u00e9ment de liste </ li > < li > Un < span class = \"gras\" > autre \u00e9l\u00e9ment </ span > de liste </ li > </ ul > </ div > < p > Un < span class = \"gras fondjaune\" > troisi\u00e8me </ span > paragraphe </ p > < div > < p class = \"gras\" > Un dernier paragraphe </ p > </ div > </ body > </ html > 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /*Couleur de fond du body (donc de la partie visible de la page) : bleu clair*/ body { background-color : lightBlue ; } div { background-color : purple ; /*Les div auront un fond violet*/ color : white ; /*Textes des \u00e9l\u00e9ments dans les div blancs par h\u00e9ritage*/ } . conteneur { width : 80 % ; /*La largeur de l'\u00e9l\u00e9ment sera \u00e9gale \u00e0 80% de son parent*/ } # cp { margin : 0 auto ; /*Permet de centrer le div dans son \u00e9l\u00e9ment parent (body ici)*/ } . gras { font-weight : bold ; /*Les textes seront en gras*/ } . fondjaune { background-color : yellow ; /*Fond des span jaune*/ } See the Pen Untitled by eric ( @ga78523 ) on CodePen .","title":"Les balises div et span et les class"},{"location":"Premiere/IHM/html_css/#pour-en-savoir-plus_1","text":"Vous pouvez aller sur : le site MDN ( site ) : la r\u00e9f\u00e9rence ; le site W3S o\u00f9 il existe un validateur HTML5 ( site ); le site de Pierre Giraud ( site ).","title":"Pour en savoir plus..."},{"location":"Premiere/IHM/js/","text":"Les bases en Javascript # Javascript # Le langage HTML (ou Hypertext Markup Language) permet de cr\u00e9er la structure d\u2019une page internet. Gr\u00e2ce \u00e0 un jeu de balises, il permet de d\u00e9composer la page comme un traitement de texte : titre, sous-titre, section,... Le CSS (ou Cascade Style Sheets) permet la mise en forme des diff\u00e9rents \u00e9l\u00e9ments HTML. On peut ainsi modifier la couleur ou la police des \u00e9l\u00e9ments pr\u00e9c\u00e9dents. Les pages ainsi cr\u00e9\u00e9es sont statiques c\u2019est-\u00e0-dire que l\u2019interaction avec l\u2019utilisateur est r\u00e9duite \u00e0 la possibilit\u00e9 de cliquer sur un lien hypertexte pr\u00e9sent dans la page. On peut dynamiser la page internet de deux mani\u00e8res : soit du c\u00f4t\u00e9 serveur avec PHP (ou Hypertext Preprocessor) qui peut, par exemple, ajouter le r\u00e9sultat d\u2019une requ\u00eate \u00e0 une base de donn\u00e9es dans la page qui sera fournie au navigateur ; soit du c\u00f4t\u00e9 client avec JavaScript qui peut, par exemple, faire appara\u00eetre des info-bulles contextuelles ou r\u00e9aliser des animations. JavaScript est un langage qui a \u00e9t\u00e9 cr\u00e9\u00e9 en 1995 par Brendan Eich. Ce dernier a travaill\u00e9 chez Netscape Communication Corporation principal concurrent \u00e0 l\u2019\u00e9poque d\u2019Internet Explorer. Premier Programme # Code # Ne d\u00e9rogeons pas \u00e0 la r\u00e8gle traditionnelle qui veut que tous les tutoriels de programmation commencent par afficher le texte \u00ab Hello World ! \u00bb Voici un code HTML simple contenant une instruction (nous allons y revenir) JavaScript, plac\u00e9e au sein d\u2019un \u00e9l\u00e9ment <script> : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" /> < title > Hello World! </ title > </ head > < body > < script > alert ( 'Hello world!' ); // affichage </ script > </ body > Observations et changements par rapport \u00e0 Python # Un \u00e9l\u00e9ment <script> est pr\u00e9sent dans la page HTML : c\u2019est cet \u00e9l\u00e9ment qui contient le code Javascript ; Le code Javascript ne contient qu\u2019une seule instruction : l\u2019instruction alert() . Cette instruction permet d\u2019afficher une bo\u00eete de dialogue contenant un message. Le message en question est plac\u00e9 entre apostrophes. La sortie avec la fonction alert() peut \u00eatre remplac\u00e9 par une sortie sur la console gr\u00e2ce \u00e0 l\u2019instruction console.log('Hello world!') . Il faut se rendre sur la console du navigateur (en g\u00e9n\u00e9ral : menu puis d\u00e9veloppement web puis console web) ou encore sur le corps de la page web avec l\u2019instruction document.write('Hello world!') Chaque instruction doit se terminer par un point virgule ; Le Javascript, contrairement au Python n\u2019est sensible ni \u00e0 l\u2019indentation, ni aux espaces ; Les commentaires monolignes commencent par deux slashs // (tandis qu\u2019en Python ils commencent par #) et les commentaires multilignes se font par /* et se termine par */ . Remarque : on peut aussi placer un commentaire multiligne sur une seule ligne Exemple : 1 2 3 4 5 6 7 8 9 /* Ce script comporte 3 instructions : - Instruction 1 qui fait telle chose - Instruction 2 qui fait autre chose - Instruction 3 qui termine le script */ instruction_1; instruction_2; /*Commentaire */ instruction_3; // Fin du script Exercice 1 : Afficher son pr\u00e9nom sur une boite de dialogue puis dans la console. Puis y placer un commentaire monoligne et un commentaire multiligne. O\u00f9 \u00e9crire son code # Il est possible, et m\u00eame conseill\u00e9, d\u2019\u00e9crire le code JavaScript dans un fichier externe, portant l\u2019extension .js. Ce fichier est ensuite appel\u00e9 depuis la page Web au moyen de l\u2019\u00e9l\u00e9ment <script> et de son attribut src qui contient l\u2019URL du fichier.js. Ce code fichier.js s\u2019ins\u00e8re dans l\u2019HTML de la mani\u00e8re suivante : 1 < script src = \"fichier.js\" ></ script > Dans votre \u00e9diteur web, taper le code suivant : 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html > < body > < h1 > Mon premier script JavaScript </ h1 > < button type = \"button\" onclick = \"document.getElementById('demo').innerHTML = 'Bonjour le monde !'\" > Clic moi.... </ button > < p id = \"demo\" ></ p > </ body > </ html > Exercice 1 Identifier le script et modifier le texte \u00e0 afficher Comment le script indentifie-t-il l\u2019\u00e9l\u00e9ment html \u00e0 modifier ? Modifier le script pour changer le titre.","title":"Javascript"},{"location":"Premiere/IHM/js/#les-bases-en-javascript","text":"","title":"Les bases en Javascript"},{"location":"Premiere/IHM/js/#javascript","text":"Le langage HTML (ou Hypertext Markup Language) permet de cr\u00e9er la structure d\u2019une page internet. Gr\u00e2ce \u00e0 un jeu de balises, il permet de d\u00e9composer la page comme un traitement de texte : titre, sous-titre, section,... Le CSS (ou Cascade Style Sheets) permet la mise en forme des diff\u00e9rents \u00e9l\u00e9ments HTML. On peut ainsi modifier la couleur ou la police des \u00e9l\u00e9ments pr\u00e9c\u00e9dents. Les pages ainsi cr\u00e9\u00e9es sont statiques c\u2019est-\u00e0-dire que l\u2019interaction avec l\u2019utilisateur est r\u00e9duite \u00e0 la possibilit\u00e9 de cliquer sur un lien hypertexte pr\u00e9sent dans la page. On peut dynamiser la page internet de deux mani\u00e8res : soit du c\u00f4t\u00e9 serveur avec PHP (ou Hypertext Preprocessor) qui peut, par exemple, ajouter le r\u00e9sultat d\u2019une requ\u00eate \u00e0 une base de donn\u00e9es dans la page qui sera fournie au navigateur ; soit du c\u00f4t\u00e9 client avec JavaScript qui peut, par exemple, faire appara\u00eetre des info-bulles contextuelles ou r\u00e9aliser des animations. JavaScript est un langage qui a \u00e9t\u00e9 cr\u00e9\u00e9 en 1995 par Brendan Eich. Ce dernier a travaill\u00e9 chez Netscape Communication Corporation principal concurrent \u00e0 l\u2019\u00e9poque d\u2019Internet Explorer.","title":"Javascript"},{"location":"Premiere/IHM/js/#premier-programme","text":"","title":"Premier Programme"},{"location":"Premiere/IHM/js/#code","text":"Ne d\u00e9rogeons pas \u00e0 la r\u00e8gle traditionnelle qui veut que tous les tutoriels de programmation commencent par afficher le texte \u00ab Hello World ! \u00bb Voici un code HTML simple contenant une instruction (nous allons y revenir) JavaScript, plac\u00e9e au sein d\u2019un \u00e9l\u00e9ment <script> : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" /> < title > Hello World! </ title > </ head > < body > < script > alert ( 'Hello world!' ); // affichage </ script > </ body >","title":"Code"},{"location":"Premiere/IHM/js/#observations-et-changements-par-rapport-a-python","text":"Un \u00e9l\u00e9ment <script> est pr\u00e9sent dans la page HTML : c\u2019est cet \u00e9l\u00e9ment qui contient le code Javascript ; Le code Javascript ne contient qu\u2019une seule instruction : l\u2019instruction alert() . Cette instruction permet d\u2019afficher une bo\u00eete de dialogue contenant un message. Le message en question est plac\u00e9 entre apostrophes. La sortie avec la fonction alert() peut \u00eatre remplac\u00e9 par une sortie sur la console gr\u00e2ce \u00e0 l\u2019instruction console.log('Hello world!') . Il faut se rendre sur la console du navigateur (en g\u00e9n\u00e9ral : menu puis d\u00e9veloppement web puis console web) ou encore sur le corps de la page web avec l\u2019instruction document.write('Hello world!') Chaque instruction doit se terminer par un point virgule ; Le Javascript, contrairement au Python n\u2019est sensible ni \u00e0 l\u2019indentation, ni aux espaces ; Les commentaires monolignes commencent par deux slashs // (tandis qu\u2019en Python ils commencent par #) et les commentaires multilignes se font par /* et se termine par */ . Remarque : on peut aussi placer un commentaire multiligne sur une seule ligne Exemple : 1 2 3 4 5 6 7 8 9 /* Ce script comporte 3 instructions : - Instruction 1 qui fait telle chose - Instruction 2 qui fait autre chose - Instruction 3 qui termine le script */ instruction_1; instruction_2; /*Commentaire */ instruction_3; // Fin du script Exercice 1 : Afficher son pr\u00e9nom sur une boite de dialogue puis dans la console. Puis y placer un commentaire monoligne et un commentaire multiligne.","title":"Observations et changements par rapport \u00e0 Python"},{"location":"Premiere/IHM/js/#ou-ecrire-son-code","text":"Il est possible, et m\u00eame conseill\u00e9, d\u2019\u00e9crire le code JavaScript dans un fichier externe, portant l\u2019extension .js. Ce fichier est ensuite appel\u00e9 depuis la page Web au moyen de l\u2019\u00e9l\u00e9ment <script> et de son attribut src qui contient l\u2019URL du fichier.js. Ce code fichier.js s\u2019ins\u00e8re dans l\u2019HTML de la mani\u00e8re suivante : 1 < script src = \"fichier.js\" ></ script > Dans votre \u00e9diteur web, taper le code suivant : 1 2 3 4 5 6 7 8 9 10 11 12 <!DOCTYPE html> < html > < body > < h1 > Mon premier script JavaScript </ h1 > < button type = \"button\" onclick = \"document.getElementById('demo').innerHTML = 'Bonjour le monde !'\" > Clic moi.... </ button > < p id = \"demo\" ></ p > </ body > </ html > Exercice 1 Identifier le script et modifier le texte \u00e0 afficher Comment le script indentifie-t-il l\u2019\u00e9l\u00e9ment html \u00e0 modifier ? Modifier le script pour changer le titre.","title":"O\u00f9 \u00e9crire son code"},{"location":"Premiere/Langage/Bases_Python/","text":"Les bases en Python # Pr\u00e9sentation de Python # Python : bref historique # Python est un langage de programmation, dont la premi\u00e8re version est sortie en 1991. Cr\u00e9\u00e9 par Guido van Rossum , il a voyag\u00e9 du Macintosh de son cr\u00e9ateur, qui travaillait \u00e0 cette \u00e9poque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu'\u00e0 se voir associer une organisation \u00e0 but non lucratif particuli\u00e8rement d\u00e9vou\u00e9e, la Python Software Foundation, cr\u00e9\u00e9e en 2001. Ce langage a \u00e9t\u00e9 baptis\u00e9 ainsi en hommage \u00e0 la troupe de comiques les \u00ab Monty Python \u00bb. Python est un langage puissant, \u00e0 la fois facile \u00e0 apprendre et riche en possibilit\u00e9s. D\u00e8s l'instant o\u00f9 vous l'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalit\u00e9s int\u00e9gr\u00e9es au langage. Il est, en outre, tr\u00e8s facile d'\u00e9tendre les fonctionnalit\u00e9s existantes. Ainsi, il existe ce qu'on appelle des biblioth\u00e8ques qui aident le d\u00e9veloppeur \u00e0 travailler sur des projets particuliers. Plusieurs biblioth\u00e8ques peuvent ainsi \u00eatre install\u00e9es pour, par exemple, d\u00e9velopper des interfaces graphiques en Python. Installation de Thonny # Pr\u00e9sentation du logiciel # Thonny est un environnement de d\u00e9veloppement int\u00e9gr\u00e9 pour Python con\u00e7u pour les d\u00e9butants. Il prend en charge diff\u00e9rentes fa\u00e7ons de parcourir le code, l'\u00e9valuation d'expression \u00e9tape par \u00e9tape, la visualisation d\u00e9taill\u00e9e de la pile d'appels et un mode pour expliquer les concepts de r\u00e9f\u00e9rences et de tas. Installation # Aller sur le site : https://thonny.org/ Cliquer sur Windows (en haut \u00e0 droite). Le t\u00e9l\u00e9charger. Se rendre dans le dossier o\u00f9 vous l\u2019avez t\u00e9l\u00e9charg\u00e9 (en g\u00e9n\u00e9ral, dans le dossier T\u00e9l\u00e9chargements) et cliquer, pour cette version, sur le fichier : thonny-3.3.13.exe Pr\u00e9sentation # Avec : A : zone d\u2019\u00e9dition o\u00f9 vous allez taper votre code B : console C : explorateur de variables L'\u00e9dition et l'ex\u00e9cution d'un premier programme # Comme la coutume l\u2019exige, notre premier programme sera l\u2019affichage du texte \"Hello World\". Pour cela : Cr\u00e9er un r\u00e9pertoire dans votre dossier NSI , un autre dossier Bases dans lequel vous y stockerez tous vos programmes de ce chapitre. Dans la barre d'outils cliquer sur \\(Nouveau Fichier\\) . Puis dans la zone de saisie, taper : 1 print ( \"hello world\" ) #affiche le texte entre parenth\u00e8ses Enregistrer ce fichier sous le nom de hello.py (vous remarquerez que l'extension .py est r\u00e9serv\u00e9e \u00e0 python); Cliquer dans la barre d'outils sur la fl\u00e8che verte qui signifie Ex\u00e9cuter (ou Ctrl+F9). Si tout va bien, votre programme s'effectue dans la console. Remarque : il est possible (et fortement conseill\u00e9) d'inclure des commentaires dans les lignes de code, ils doivent \u00eatre pr\u00e9c\u00e9d\u00e9s de # afin qu'ils ne soient pas interpr\u00e9t\u00e9s, ce qui sinon provoquerait un message d'erreur. La d\u00e9claration et l'affectation du contenu de variables # La d\u00e9claration d'une variable # Si on \u00e9crit dans la zone de saisie maintenant l'instruction : 1 print ( texte ) # sans les guillemets L'interpr\u00e9teur affiche maintenant le message d'erreur suivant : >>> % Run - c $ EDITOR_CONTENT Traceback ( most recent call last ): File \"<string>\" , line 1 , in < module > NameError : name 'texte' is not defined Le message d'erreur vient du fait que \"hello world\" \u00e9tait entre guillements alors que texte non. En effet, l'interpreteur Python cherche \u00e0 afficher la variable texte et que cette variable n'a pas \u00e9t\u00e9 d\u00e9finie dans ce programme. Pour d\u00e9finir cette variable, on rajoute la ligne suivante en d\u00e9but de programme : 1 2 texte = \"Hello world\" # ou encore \"Hello world\" print ( texte ) # affiche le contenu de la variable texte Nous venons de d\u00e9clarer une variable nomm\u00e9e texte et de lui affecter (ou assigner) le texte \"Hello World\". En Python comme dans bien d'autres langages, l'op\u00e9ration d'affectation est repr\u00e9sent\u00e9e par le signe = . Quel int\u00e9r\u00eat d'utiliser une variable ? # D\u00e9finition du mot ordinateur d\u2019apr\u00e8s le dictionnaire Le Petit Larousse : \u00ab Machine automatique de traitement de l\u2019information, ob\u00e9issant \u00e0 des programmes form\u00e9s par des suites d\u2019op\u00e9rations arithm\u00e9tiques et logiques. \u00bb Qui dit traitement de l\u2019information, dit donc donn\u00e9es \u00e0 manipuler. Un programme passe donc son temps \u00e0 traiter des donn\u00e9es. Pour pouvoir traiter ces donn\u00e9es, l\u2019ordinateur doit les ranger dans sa m\u00e9moire . La mmoire se compose de cases dans lesquelles nous allons ranger ces donn\u00e9es. Une variable est un espace m\u00e9moire dans lequel il est possible de mettre une valeur. Par exemple, si en fran\u00e7ais je dis \\(x\\) est \u00e9gal \u00e0 1, j\u2019utilise la variable dont le nom est \\(x\\) pour lui fixer la valeur 1. Pour faire la m\u00eame chose en Python, je note simplement : x = 1 . Cette op\u00e9ration est appel\u00e9e \"affectation\" (ou \"assignation\"), et consiste \u00e0 stocker une valeur en m\u00e9moire vive de l\u2019ordinateur. On dit donc que l\u2019on proc\u00e8de \u00e0 l\u2019affectation de la variable \\(x\\) avec la valeur \"1\". Types des variables # Les variables peuvent contenir des types de donn\u00e9es diff\u00e9rents. Les diff\u00e9rents types sont : Type Python Traduction Exemple int entier 42 float flottant (d\u00e9cimal) 3.1416 str cha\u00eene de caract\u00e8res (string) \"NSI\" bool bool\u00e9en (True ou False) True tuple p-uplet ( 255 , 127 , 0 ) list liste [ 0 , 1 , 2 , 3 , 4 , 5 ] dict dictionnaire { 'Homer' : 43 , 'Marge' : 41 , 'Bart' : 12 , 'Lisa' : 10 , 'Maggie' : 4 } function fonction print Python est un langage \u00e0 typage dynamique, cela signifie qu'en fonction du contenu affect\u00e9 \u00e0 la variable, il d\u00e9termine automatiquement le type de la variable. Il existe beaucoup de langages (C++, Java....) o\u00f9 l\u2019utilisateur doit absolument d\u00e9finir le type d\u2019une variable avant de pouvoir l\u2019utiliser, faute de quoi cela entra\u00eenera une erreur. Remarque : L'explorateur de variables permet d'afficher le nom de la variable et sa valeur. Il suffit d'aller dans affichage puis variables. La fonction type() vous permet de conna\u00eetre le type d\u2019une variable. Le type d'une variable peut \u00eatre modifi\u00e9 de mani\u00e8re dynamique en cours de programme. Le v\u00e9rifier en testant le programme suivant : 1 2 3 4 a = 8 print ( a ) a = a + 2 # ou a += 2 print ( a ) Remarque : L'explorateur de variable affiche uniquement les derni\u00e8res valeurs et types pris par les variables en fin de programme. Affectations (assignations) multiples # Sous Python, on peut assigner une valeur \u00e0 plusieurs variables simultan\u00e9ment. 1 2 3 x = y = 7 print ( \"x vaut :\" , x ) print ( \"y vaut :\" , y ) On peut aussi effectuer des affectations parall\u00e8les \u00e0 l\u2019aide d\u2019un seul operateur = : 1 2 3 x, y = 7, 9.4 print(\"x vaut :\", x) print(\"y vaut :\", y) Les variables x et y prennent simultan\u00e9ment les nouvelles valeurs 7 et 9,4 Les op\u00e9rations # Arithm\u00e9tiques # Un ordinateur est bien \u00e9videmment capable d\u2019effectuer des op\u00e9rations arithm\u00e9tiques et math\u00e9matiques. Dans le tableau ci-apr\u00e8s, sont pr\u00e9sent\u00e9s les symboles utilis\u00e9s pour les op\u00e9rations de base. Op\u00e9ration Symbole Exemples \u00e0 tester Addition + 3+5 donne 8 Soustraction - 7-2 donne 5 Multiplication * 7*8 donne 56 Division / 7/2 donne 3.5 Reste de la division % 7%3 donne 1 Quotient de la division // 7//2 donne 3 Puissance ** 10**3 donne 1000 Remarque : l\u2019utilisation du signe + ne se limite pas \u00e0 l\u2019addition. Il est aussi utilis\u00e9 pour la concat\u00e9nation. Le terme concat\u00e9nation d\u00e9signe l\u2019action de mettre bout \u00e0 bout au moins deux cha\u00eenes. Exercice 1 Sans l'ex\u00e9cuter, que fait le programme suivant. Puis le tester 1 2 3 4 a = \" cha\u00eene de \" b = \" caract\u00e8re \" monExpression = a + b print ( monExpression ) Exercice 2 \u00c9crire un programme qui multiplie le contenu de 2 variables. Par exemple : c = 5 et d = 9 . Le r\u00e9sultat de cette op\u00e9ration devra \u00eatre \"rang\u00e9\" dans une troisi\u00e8me variable ( resultat ). Votre programme devra afficher le contenu de la variable resultat . Exercice 3 \u00c9crire le code pour l'instruction suivante : on initialise une variable cellule \u00e0 1 et on la multiplie par 2. Exercice 4 \u00c9crire le code pour l'instruction suivante : on initialise une variable capital \u00e0 1000 et on lui enl\u00e8ve 5%. Quelques fonctions math\u00e9matiques # Pour utiliser certaines fonctions math\u00e9matiques plus avanc\u00e9es ( \\(x^a\\) , \\(exp(x)\\) , \\(sin(x)\\) , \\(log(x)\\) ... ) il est n\u00e9cessaire d\u2019importer des biblioth\u00e8ques. Si l\u2019on utilise la biblioth\u00e8que math , la premi\u00e8re ligne de code devra commencer par : import math . Cette biblioth\u00e8que inclus entre autres les fonctions suivantes : Fonction Symbole Exemples \u00e0 tester constante p pi pi donne 3.141592653589793 sinus (angle en radians) sin(x) sin(pi/2) donne 1.0 arc sinus asin(x) asin(1) donne 1.5707963267948966 radians conversion radians en degr\u00e9s degrees(x) degrees(pi) donne 180.0 degr\u00e9s conversion degr\u00e9s en radians radians(x) radians(90) donne 1.5707963267948966 radians logarithme d\u00e9cimal log10(x) log10(100) donne 2 logartithme n\u00e9p\u00e9rien log(x) log(100) donne 4.605170185988092 exponentielle exp(x) exp(100) donne 2.6881171418161356e+43 puissance xy pow(x,y) pow(2,8) donne 256.0 racine carr\u00e9e sqrt(x) sqrt(100) retourne 10 arrondi au plus proche entier round(x) arrondi au plus proche r\u00e9el avec y d\u00e9cimales apr\u00e8s la virgule round(x,y) round(100.235789,2) retourne 100.24 arrondi au plus petit entier>=x ceil(x) ceil(100.235789,2) retourne 101 arrondi au plus grand entier<=x floor(x) floor(100.235789,2) retourne 100 Exemple complet : 1 2 3 import math a = math . pow ( 2.8 ) print ( a ) # affiche 256 G\u00e9n\u00e9ration de nombres al\u00e9atoires # La biblioth\u00e8que random permet de g\u00e9n\u00e9rer des nombres al\u00e9atoires, la premi\u00e8re ligne de code devra commencer par import random . Cette biblioth\u00e8que inclus entre autres les fonctions suivantes : Exemple complet : 1 2 3 4 5 6 7 8 9 import random a = random . randint ( 0 , 5 ) print ( a ) # affiche 3 b = random . randint ( 0 , 5 ) print ( b ) # affiche 1 c = random . random () print ( c ) # affiche 0.28974251561751374 Remarque : Plut\u00f4t que de r\u00e9p\u00e9ter random avant l'itilisation de chaque fonction, nous pouvons utiliser un alias de la mani\u00e8re suivante : 1 2 3 4 5 6 7 8 9 import random as rd a = rd . randint ( 0 , 5 ) print ( a ) # affiche 3 b = rd . randint ( 0 , 5 ) print ( b ) # affiche 1 c = rd . random () print ( c ) # affiche 0.28974251561751374 Les entr\u00e9es # On peut alors lire depuis le clavier la valeur d\u2019une cha\u00eene de caract\u00e8res par la m\u00e9thode input() . Exemple : 1 2 a = input () #les parenth\u00e8ses sont obligatoires . a = input ( \" Nom : \" ) # le texte dans les parenth\u00e8ses permet d\u2019indiquer ce que l'on attend La commande input() renvoie toujours \u00e0 une cha\u00eene de caract\u00e8res. Pour affecter un nombre, il faut le convertir gr\u00e2ce aux fonctions int() pour convertir une chaine de caract\u00e8re en entier et float() pour convertir une cha\u00eene de caract\u00e8re en flottant. Exemple : 1 2 3 a = int ( input ( \" Donner une valeur enti\u00e8re : \" )) x = float ( input ( \"Donner une valeur r\u00e9elle : \" ) print ( \" L\u2019entier a vaut \" , a , \" et le r\u00e9el x vaut \" , x ) Trace d'un programme # Pour repr\u00e9senter l'\u00e9volution d'un programme dans en fonction, nous utilisons ce qui s'appelle la trace d'un programme. Celle-ci se pr\u00e9sente sous la forme d'un tableau avec dans la premi\u00e8re ligne : le num\u00e9ro de ligne ; les diff\u00e9rentes variables ; les commentaires. Exemple : 1 2 3 4 a = 5 b = 3 + a c = 2 * b print ( c ) On peut donner la trace de ce programme. N\u00b0ligne a b c Commentaires 1 5 On affecte la valeur 5 \u00e0 la variable a 2 5 8 a + 3 = 5 + 3 = 8 -> b 3 5 8 16 2 * b = 2 * 8 = 16 -> c 4 5 8 16 On affiche la valeur contenue dans c Exercice 5 Effectuer la trace du programme suivant : 1 2 3 4 x = 20 x += 5 y = 3 * x + 2 print ( y , x ) Exercices # Exercice 6 Faire un programme qui demande un nombre et qui affiche sa racine carr\u00e9e et son carr\u00e9. Exercice 7 L'octogone est un polygone comportant huit c\u00f4t\u00e9s, et donc huit angles. L'octogone r\u00e9gulier isom\u00e9trique s'inscrit dans un cercle. Sa surface lorsqu'il a un c\u00f4t\u00e9 \\(c\\) vaut : \\(A= 2\\times c \\times 2(1+\\sqrt{2})\\) . Faire un programme demandant \u00e0 l\u2019utilisateur le c\u00f4t\u00e9 puis afficher la surface de l'octogone. Exercice 8 \u00c9crire un programme qui vous demande votre nom, votre pr\u00e9nom, votre classe, une discipline et les 5 notes obtenues dans cette discipline. Il calculera la moyenne dans cette discipline, arrondie \u00e0 l\u2019entier sup\u00e9rieur et affichera le r\u00e9sultat sous la forme : PEREAU Vincent \u2013 classe de 2GT7 : moyenne en MATH\u00c9MATIQUES = 13 Exercice 9 \u00c9crire un programme qui calcul l\u2019angle de r\u00e9fraction \\(i_2\\) (exprim\u00e9 en degr\u00e9s et avec 1 chiffre apr\u00e8s la virgule) d\u2019un faisceau lumineux, apr\u00e8s avoir demand\u00e9 l\u2019angle d\u2019incidence \\(i_1\\) (en degr\u00e9s) ainsi que les indices de r\u00e9fractions \\(n_1\\) et \\(n_2\\) des milieux 1 et 2. Donn\u00e9e : Loi de Descartes relative \u00e0 la r\u00e9fraction : \\(n_1 \\times sin(i_1) = n_2 \\times sin(i_2)\\) Exercice 10 \u00c9crire un programme qui calcule combien de bonbons recevra chaque \u00e9l\u00e8ve de la classe ainsi que le nombre de bonbons restants, apr\u00e8s avoir demand\u00e9 le nombre total de bonbons et le nombre d\u2019\u00e9l\u00e8ves de la classe. Le r\u00e9sultat sera affich\u00e9 sous la forme : \"chaque \u00e9l\u00e8ve recevra 5 bonbons et il en restera 3\"","title":"Les bases"},{"location":"Premiere/Langage/Bases_Python/#les-bases-en-python","text":"","title":"Les bases en Python"},{"location":"Premiere/Langage/Bases_Python/#presentation-de-python","text":"","title":"Pr\u00e9sentation de Python"},{"location":"Premiere/Langage/Bases_Python/#python-bref-historique","text":"Python est un langage de programmation, dont la premi\u00e8re version est sortie en 1991. Cr\u00e9\u00e9 par Guido van Rossum , il a voyag\u00e9 du Macintosh de son cr\u00e9ateur, qui travaillait \u00e0 cette \u00e9poque au Centrum voor Wiskunde en Informatica aux Pays-Bas, jusqu'\u00e0 se voir associer une organisation \u00e0 but non lucratif particuli\u00e8rement d\u00e9vou\u00e9e, la Python Software Foundation, cr\u00e9\u00e9e en 2001. Ce langage a \u00e9t\u00e9 baptis\u00e9 ainsi en hommage \u00e0 la troupe de comiques les \u00ab Monty Python \u00bb. Python est un langage puissant, \u00e0 la fois facile \u00e0 apprendre et riche en possibilit\u00e9s. D\u00e8s l'instant o\u00f9 vous l'installez sur votre ordinateur, vous disposez de nombreuses fonctionnalit\u00e9s int\u00e9gr\u00e9es au langage. Il est, en outre, tr\u00e8s facile d'\u00e9tendre les fonctionnalit\u00e9s existantes. Ainsi, il existe ce qu'on appelle des biblioth\u00e8ques qui aident le d\u00e9veloppeur \u00e0 travailler sur des projets particuliers. Plusieurs biblioth\u00e8ques peuvent ainsi \u00eatre install\u00e9es pour, par exemple, d\u00e9velopper des interfaces graphiques en Python.","title":"Python : bref historique"},{"location":"Premiere/Langage/Bases_Python/#installation-de-thonny","text":"","title":"Installation de Thonny"},{"location":"Premiere/Langage/Bases_Python/#presentation-du-logiciel","text":"Thonny est un environnement de d\u00e9veloppement int\u00e9gr\u00e9 pour Python con\u00e7u pour les d\u00e9butants. Il prend en charge diff\u00e9rentes fa\u00e7ons de parcourir le code, l'\u00e9valuation d'expression \u00e9tape par \u00e9tape, la visualisation d\u00e9taill\u00e9e de la pile d'appels et un mode pour expliquer les concepts de r\u00e9f\u00e9rences et de tas.","title":"Pr\u00e9sentation du logiciel"},{"location":"Premiere/Langage/Bases_Python/#installation","text":"Aller sur le site : https://thonny.org/ Cliquer sur Windows (en haut \u00e0 droite). Le t\u00e9l\u00e9charger. Se rendre dans le dossier o\u00f9 vous l\u2019avez t\u00e9l\u00e9charg\u00e9 (en g\u00e9n\u00e9ral, dans le dossier T\u00e9l\u00e9chargements) et cliquer, pour cette version, sur le fichier : thonny-3.3.13.exe","title":"Installation"},{"location":"Premiere/Langage/Bases_Python/#presentation","text":"Avec : A : zone d\u2019\u00e9dition o\u00f9 vous allez taper votre code B : console C : explorateur de variables","title":"Pr\u00e9sentation"},{"location":"Premiere/Langage/Bases_Python/#ledition-et-lexecution-dun-premier-programme","text":"Comme la coutume l\u2019exige, notre premier programme sera l\u2019affichage du texte \"Hello World\". Pour cela : Cr\u00e9er un r\u00e9pertoire dans votre dossier NSI , un autre dossier Bases dans lequel vous y stockerez tous vos programmes de ce chapitre. Dans la barre d'outils cliquer sur \\(Nouveau Fichier\\) . Puis dans la zone de saisie, taper : 1 print ( \"hello world\" ) #affiche le texte entre parenth\u00e8ses Enregistrer ce fichier sous le nom de hello.py (vous remarquerez que l'extension .py est r\u00e9serv\u00e9e \u00e0 python); Cliquer dans la barre d'outils sur la fl\u00e8che verte qui signifie Ex\u00e9cuter (ou Ctrl+F9). Si tout va bien, votre programme s'effectue dans la console. Remarque : il est possible (et fortement conseill\u00e9) d'inclure des commentaires dans les lignes de code, ils doivent \u00eatre pr\u00e9c\u00e9d\u00e9s de # afin qu'ils ne soient pas interpr\u00e9t\u00e9s, ce qui sinon provoquerait un message d'erreur.","title":"L'\u00e9dition et l'ex\u00e9cution d'un premier programme"},{"location":"Premiere/Langage/Bases_Python/#la-declaration-et-laffectation-du-contenu-de-variables","text":"","title":"La d\u00e9claration et l'affectation du contenu de variables"},{"location":"Premiere/Langage/Bases_Python/#la-declaration-dune-variable","text":"Si on \u00e9crit dans la zone de saisie maintenant l'instruction : 1 print ( texte ) # sans les guillemets L'interpr\u00e9teur affiche maintenant le message d'erreur suivant : >>> % Run - c $ EDITOR_CONTENT Traceback ( most recent call last ): File \"<string>\" , line 1 , in < module > NameError : name 'texte' is not defined Le message d'erreur vient du fait que \"hello world\" \u00e9tait entre guillements alors que texte non. En effet, l'interpreteur Python cherche \u00e0 afficher la variable texte et que cette variable n'a pas \u00e9t\u00e9 d\u00e9finie dans ce programme. Pour d\u00e9finir cette variable, on rajoute la ligne suivante en d\u00e9but de programme : 1 2 texte = \"Hello world\" # ou encore \"Hello world\" print ( texte ) # affiche le contenu de la variable texte Nous venons de d\u00e9clarer une variable nomm\u00e9e texte et de lui affecter (ou assigner) le texte \"Hello World\". En Python comme dans bien d'autres langages, l'op\u00e9ration d'affectation est repr\u00e9sent\u00e9e par le signe = .","title":"La d\u00e9claration d'une variable"},{"location":"Premiere/Langage/Bases_Python/#quel-interet-dutiliser-une-variable","text":"D\u00e9finition du mot ordinateur d\u2019apr\u00e8s le dictionnaire Le Petit Larousse : \u00ab Machine automatique de traitement de l\u2019information, ob\u00e9issant \u00e0 des programmes form\u00e9s par des suites d\u2019op\u00e9rations arithm\u00e9tiques et logiques. \u00bb Qui dit traitement de l\u2019information, dit donc donn\u00e9es \u00e0 manipuler. Un programme passe donc son temps \u00e0 traiter des donn\u00e9es. Pour pouvoir traiter ces donn\u00e9es, l\u2019ordinateur doit les ranger dans sa m\u00e9moire . La mmoire se compose de cases dans lesquelles nous allons ranger ces donn\u00e9es. Une variable est un espace m\u00e9moire dans lequel il est possible de mettre une valeur. Par exemple, si en fran\u00e7ais je dis \\(x\\) est \u00e9gal \u00e0 1, j\u2019utilise la variable dont le nom est \\(x\\) pour lui fixer la valeur 1. Pour faire la m\u00eame chose en Python, je note simplement : x = 1 . Cette op\u00e9ration est appel\u00e9e \"affectation\" (ou \"assignation\"), et consiste \u00e0 stocker une valeur en m\u00e9moire vive de l\u2019ordinateur. On dit donc que l\u2019on proc\u00e8de \u00e0 l\u2019affectation de la variable \\(x\\) avec la valeur \"1\".","title":"Quel int\u00e9r\u00eat d'utiliser une variable ?"},{"location":"Premiere/Langage/Bases_Python/#types-des-variables","text":"Les variables peuvent contenir des types de donn\u00e9es diff\u00e9rents. Les diff\u00e9rents types sont : Type Python Traduction Exemple int entier 42 float flottant (d\u00e9cimal) 3.1416 str cha\u00eene de caract\u00e8res (string) \"NSI\" bool bool\u00e9en (True ou False) True tuple p-uplet ( 255 , 127 , 0 ) list liste [ 0 , 1 , 2 , 3 , 4 , 5 ] dict dictionnaire { 'Homer' : 43 , 'Marge' : 41 , 'Bart' : 12 , 'Lisa' : 10 , 'Maggie' : 4 } function fonction print Python est un langage \u00e0 typage dynamique, cela signifie qu'en fonction du contenu affect\u00e9 \u00e0 la variable, il d\u00e9termine automatiquement le type de la variable. Il existe beaucoup de langages (C++, Java....) o\u00f9 l\u2019utilisateur doit absolument d\u00e9finir le type d\u2019une variable avant de pouvoir l\u2019utiliser, faute de quoi cela entra\u00eenera une erreur. Remarque : L'explorateur de variables permet d'afficher le nom de la variable et sa valeur. Il suffit d'aller dans affichage puis variables. La fonction type() vous permet de conna\u00eetre le type d\u2019une variable. Le type d'une variable peut \u00eatre modifi\u00e9 de mani\u00e8re dynamique en cours de programme. Le v\u00e9rifier en testant le programme suivant : 1 2 3 4 a = 8 print ( a ) a = a + 2 # ou a += 2 print ( a ) Remarque : L'explorateur de variable affiche uniquement les derni\u00e8res valeurs et types pris par les variables en fin de programme.","title":"Types des variables"},{"location":"Premiere/Langage/Bases_Python/#affectations-assignations-multiples","text":"Sous Python, on peut assigner une valeur \u00e0 plusieurs variables simultan\u00e9ment. 1 2 3 x = y = 7 print ( \"x vaut :\" , x ) print ( \"y vaut :\" , y ) On peut aussi effectuer des affectations parall\u00e8les \u00e0 l\u2019aide d\u2019un seul operateur = : 1 2 3 x, y = 7, 9.4 print(\"x vaut :\", x) print(\"y vaut :\", y) Les variables x et y prennent simultan\u00e9ment les nouvelles valeurs 7 et 9,4","title":"Affectations (assignations) multiples"},{"location":"Premiere/Langage/Bases_Python/#les-operations","text":"","title":"Les op\u00e9rations"},{"location":"Premiere/Langage/Bases_Python/#arithmetiques","text":"Un ordinateur est bien \u00e9videmment capable d\u2019effectuer des op\u00e9rations arithm\u00e9tiques et math\u00e9matiques. Dans le tableau ci-apr\u00e8s, sont pr\u00e9sent\u00e9s les symboles utilis\u00e9s pour les op\u00e9rations de base. Op\u00e9ration Symbole Exemples \u00e0 tester Addition + 3+5 donne 8 Soustraction - 7-2 donne 5 Multiplication * 7*8 donne 56 Division / 7/2 donne 3.5 Reste de la division % 7%3 donne 1 Quotient de la division // 7//2 donne 3 Puissance ** 10**3 donne 1000 Remarque : l\u2019utilisation du signe + ne se limite pas \u00e0 l\u2019addition. Il est aussi utilis\u00e9 pour la concat\u00e9nation. Le terme concat\u00e9nation d\u00e9signe l\u2019action de mettre bout \u00e0 bout au moins deux cha\u00eenes. Exercice 1 Sans l'ex\u00e9cuter, que fait le programme suivant. Puis le tester 1 2 3 4 a = \" cha\u00eene de \" b = \" caract\u00e8re \" monExpression = a + b print ( monExpression ) Exercice 2 \u00c9crire un programme qui multiplie le contenu de 2 variables. Par exemple : c = 5 et d = 9 . Le r\u00e9sultat de cette op\u00e9ration devra \u00eatre \"rang\u00e9\" dans une troisi\u00e8me variable ( resultat ). Votre programme devra afficher le contenu de la variable resultat . Exercice 3 \u00c9crire le code pour l'instruction suivante : on initialise une variable cellule \u00e0 1 et on la multiplie par 2. Exercice 4 \u00c9crire le code pour l'instruction suivante : on initialise une variable capital \u00e0 1000 et on lui enl\u00e8ve 5%.","title":"Arithm\u00e9tiques"},{"location":"Premiere/Langage/Bases_Python/#quelques-fonctions-mathematiques","text":"Pour utiliser certaines fonctions math\u00e9matiques plus avanc\u00e9es ( \\(x^a\\) , \\(exp(x)\\) , \\(sin(x)\\) , \\(log(x)\\) ... ) il est n\u00e9cessaire d\u2019importer des biblioth\u00e8ques. Si l\u2019on utilise la biblioth\u00e8que math , la premi\u00e8re ligne de code devra commencer par : import math . Cette biblioth\u00e8que inclus entre autres les fonctions suivantes : Fonction Symbole Exemples \u00e0 tester constante p pi pi donne 3.141592653589793 sinus (angle en radians) sin(x) sin(pi/2) donne 1.0 arc sinus asin(x) asin(1) donne 1.5707963267948966 radians conversion radians en degr\u00e9s degrees(x) degrees(pi) donne 180.0 degr\u00e9s conversion degr\u00e9s en radians radians(x) radians(90) donne 1.5707963267948966 radians logarithme d\u00e9cimal log10(x) log10(100) donne 2 logartithme n\u00e9p\u00e9rien log(x) log(100) donne 4.605170185988092 exponentielle exp(x) exp(100) donne 2.6881171418161356e+43 puissance xy pow(x,y) pow(2,8) donne 256.0 racine carr\u00e9e sqrt(x) sqrt(100) retourne 10 arrondi au plus proche entier round(x) arrondi au plus proche r\u00e9el avec y d\u00e9cimales apr\u00e8s la virgule round(x,y) round(100.235789,2) retourne 100.24 arrondi au plus petit entier>=x ceil(x) ceil(100.235789,2) retourne 101 arrondi au plus grand entier<=x floor(x) floor(100.235789,2) retourne 100 Exemple complet : 1 2 3 import math a = math . pow ( 2.8 ) print ( a ) # affiche 256","title":"Quelques fonctions math\u00e9matiques"},{"location":"Premiere/Langage/Bases_Python/#generation-de-nombres-aleatoires","text":"La biblioth\u00e8que random permet de g\u00e9n\u00e9rer des nombres al\u00e9atoires, la premi\u00e8re ligne de code devra commencer par import random . Cette biblioth\u00e8que inclus entre autres les fonctions suivantes : Exemple complet : 1 2 3 4 5 6 7 8 9 import random a = random . randint ( 0 , 5 ) print ( a ) # affiche 3 b = random . randint ( 0 , 5 ) print ( b ) # affiche 1 c = random . random () print ( c ) # affiche 0.28974251561751374 Remarque : Plut\u00f4t que de r\u00e9p\u00e9ter random avant l'itilisation de chaque fonction, nous pouvons utiliser un alias de la mani\u00e8re suivante : 1 2 3 4 5 6 7 8 9 import random as rd a = rd . randint ( 0 , 5 ) print ( a ) # affiche 3 b = rd . randint ( 0 , 5 ) print ( b ) # affiche 1 c = rd . random () print ( c ) # affiche 0.28974251561751374","title":"G\u00e9n\u00e9ration de nombres al\u00e9atoires"},{"location":"Premiere/Langage/Bases_Python/#les-entrees","text":"On peut alors lire depuis le clavier la valeur d\u2019une cha\u00eene de caract\u00e8res par la m\u00e9thode input() . Exemple : 1 2 a = input () #les parenth\u00e8ses sont obligatoires . a = input ( \" Nom : \" ) # le texte dans les parenth\u00e8ses permet d\u2019indiquer ce que l'on attend La commande input() renvoie toujours \u00e0 une cha\u00eene de caract\u00e8res. Pour affecter un nombre, il faut le convertir gr\u00e2ce aux fonctions int() pour convertir une chaine de caract\u00e8re en entier et float() pour convertir une cha\u00eene de caract\u00e8re en flottant. Exemple : 1 2 3 a = int ( input ( \" Donner une valeur enti\u00e8re : \" )) x = float ( input ( \"Donner une valeur r\u00e9elle : \" ) print ( \" L\u2019entier a vaut \" , a , \" et le r\u00e9el x vaut \" , x )","title":"Les entr\u00e9es"},{"location":"Premiere/Langage/Bases_Python/#trace-dun-programme","text":"Pour repr\u00e9senter l'\u00e9volution d'un programme dans en fonction, nous utilisons ce qui s'appelle la trace d'un programme. Celle-ci se pr\u00e9sente sous la forme d'un tableau avec dans la premi\u00e8re ligne : le num\u00e9ro de ligne ; les diff\u00e9rentes variables ; les commentaires. Exemple : 1 2 3 4 a = 5 b = 3 + a c = 2 * b print ( c ) On peut donner la trace de ce programme. N\u00b0ligne a b c Commentaires 1 5 On affecte la valeur 5 \u00e0 la variable a 2 5 8 a + 3 = 5 + 3 = 8 -> b 3 5 8 16 2 * b = 2 * 8 = 16 -> c 4 5 8 16 On affiche la valeur contenue dans c Exercice 5 Effectuer la trace du programme suivant : 1 2 3 4 x = 20 x += 5 y = 3 * x + 2 print ( y , x )","title":"Trace d'un programme"},{"location":"Premiere/Langage/Bases_Python/#exercices","text":"Exercice 6 Faire un programme qui demande un nombre et qui affiche sa racine carr\u00e9e et son carr\u00e9. Exercice 7 L'octogone est un polygone comportant huit c\u00f4t\u00e9s, et donc huit angles. L'octogone r\u00e9gulier isom\u00e9trique s'inscrit dans un cercle. Sa surface lorsqu'il a un c\u00f4t\u00e9 \\(c\\) vaut : \\(A= 2\\times c \\times 2(1+\\sqrt{2})\\) . Faire un programme demandant \u00e0 l\u2019utilisateur le c\u00f4t\u00e9 puis afficher la surface de l'octogone. Exercice 8 \u00c9crire un programme qui vous demande votre nom, votre pr\u00e9nom, votre classe, une discipline et les 5 notes obtenues dans cette discipline. Il calculera la moyenne dans cette discipline, arrondie \u00e0 l\u2019entier sup\u00e9rieur et affichera le r\u00e9sultat sous la forme : PEREAU Vincent \u2013 classe de 2GT7 : moyenne en MATH\u00c9MATIQUES = 13 Exercice 9 \u00c9crire un programme qui calcul l\u2019angle de r\u00e9fraction \\(i_2\\) (exprim\u00e9 en degr\u00e9s et avec 1 chiffre apr\u00e8s la virgule) d\u2019un faisceau lumineux, apr\u00e8s avoir demand\u00e9 l\u2019angle d\u2019incidence \\(i_1\\) (en degr\u00e9s) ainsi que les indices de r\u00e9fractions \\(n_1\\) et \\(n_2\\) des milieux 1 et 2. Donn\u00e9e : Loi de Descartes relative \u00e0 la r\u00e9fraction : \\(n_1 \\times sin(i_1) = n_2 \\times sin(i_2)\\) Exercice 10 \u00c9crire un programme qui calcule combien de bonbons recevra chaque \u00e9l\u00e8ve de la classe ainsi que le nombre de bonbons restants, apr\u00e8s avoir demand\u00e9 le nombre total de bonbons et le nombre d\u2019\u00e9l\u00e8ves de la classe. Le r\u00e9sultat sera affich\u00e9 sous la forme : \"chaque \u00e9l\u00e8ve recevra 5 bonbons et il en restera 3\"","title":"Exercices"},{"location":"Premiere/Langage/ControleFlux_Python/","text":"Contr\u00f4le du flux d'\u00e9xecution # Introduction # Jusqu'\u00e0 pr\u00e9sent, nous avons vu des algorithmes simples qui se d\u00e9roulent en s\u00e9quence de la premi\u00e8re \u00e0 la derni\u00e8re instruction. Cependant, ces instructions en s\u00e9quence ne suffisent pas \u00e0 ex\u00e9cuter des algorithmes plus complexes o\u00f9 : Certaines s\u00e9quences d'instructions ne peuvent \u00eatre ex\u00e9cut\u00e9es que sous certaines conditions : structures conditionnelles (if\u2026 else) Certaines s\u00e9quences d'instructions n\u00e9cessitent d'\u00eatre ex\u00e9cut\u00e9es un certain nombre de fois : structures it\u00e9ratives (boucle for et boucle while) Le chemin suivi par le programme est appel\u00e9 le flux d'ex\u00e9cution et les instructions qui le modifient sont appel\u00e9es les instructions de contr\u00f4le de flux. Les structures conditionnelles # L'instruction conditionnelle Si (if) # Dans certains cas, on ne veut ex\u00e9cuter une s\u00e9rie d\u2019instructions que sous une condition. Syntaxe : Apr\u00e8s avoir tap\u00e9 if condition : et appuy\u00e9 sur entr\u00e9e, l'\u00e9diteur va alors automatiquement indenter (d\u00e9calage vers la droite) les lignes d'instructions suivantes. En effet, toutes les instructions qui doivent \u00eatre effectu\u00e9es si la condition est vraie doivent \u00eatre indent\u00e9es, et elles doivent avoir imp\u00e9rativement la m\u00eame indentation. Exemple : le programme suivant affiche candidat re\u00e7u mais uniquement que celui-ci ait une moyenne sup\u00e9rieure ou \u00e9gale \u00e0 10. 1 2 3 4 5 6 m = float ( input ( \"Moyenne : \" )) if m >= 10 : print ( \"Candidat accept\u00e9\" ) print ( \"programme termin\u00e9\" ) L\u2019\u00e9valuation de la condition # En fait la condition \u00e9valu\u00e9e m >= 10 renvoie un bool\u00e9en, True (vrai) ou False (faux). Il est possible de le v\u00e9rifier en rajoutant l\u2019instruction suivante en fin de programme : 1 2 3 4 5 6 m = float ( input ( \"Moyenne au bac = \" )) condition = m >= 10 print ( \"La condition \u00e9valu\u00e9e \u00e9tait bien : \" , condition ) print ( \"boolean est bien du type :\" , type ( condition )) Op\u00e9rateurs de comparaison et op\u00e9rateurs logiques # Afin d\u2019\u00e9crire une condition, on utilise les op\u00e9rateurs de comparaison suivants : Op\u00e9rateur Signification litt\u00e9rale < strictement inf\u00e9rieur \u00e0 > strictement sup\u00e9rieur \u00e0 <= inf\u00e9rieur ou \u00e9gal \u00e0 >= sup\u00e9rieur ou \u00e9gal \u00e0 == \u00e9gal \u00e0 != diff\u00e9rent de Attention : l\u2019\u00e9galit\u00e9 de deux valeurs est exprim\u00e9e avec l\u2019op\u00e9rateur \u00ab == \u00bb et non \u00ab = \u00bb. Ce dernier est en effet l\u2019op\u00e9rateur d\u2019affectation et ne doit pas \u00eatre utilis\u00e9 dans une condition. Ces op\u00e9rateurs de comparaisons peuvent \u00eatre combin\u00e9s aux op\u00e9rateurs logiques (ou op\u00e9rateurs bool\u00e9ens) suivants : Op\u00e9rateur R\u00f4le a and b Vraie si a et b sont vraie a or b vraie si a ou b (ou les deux) sont vraies not(a) si a est vraie, not(a) est fausse et inversement Exemple : le programme suivant d\u00e9termine si le candidat aura une mention BIEN. Pour cela sa note doit \u00eatre sup\u00e9rieure ou \u00e9gale \u00e0 12 et inf\u00e9rieure strictement \u00e0 14 : 1 2 3 m = float ( input ( \"Moyenne au bac : \" )) if m >= 12 and m < 14 : print ( \"mention bien\" ) L\u00e0 encore, l'expression \u00e9valu\u00e9e : m >= 10 and m < 12 renvoie un bool\u00e9en : 1 2 3 4 5 6 m = float ( input ( \"Moyenne au bac : \" )) boolean = m >= 10 and m < 14 if boolean : print ( \"mention bien\" ) print ( \"La condition \u00e9valu\u00e9e \u00e9tait bien : \" , m >= 10 and m < 14 ) print (( \"boolean est bien du type :\" , type ( boolean ))) Remarque n\u00b01 : En python (contrairement au langage Java par exemple), la condition if (m>= 12 and m <1 4) : peut \u00eatre remplac\u00e9e par la condition if(12 <= m <14). Remarque n\u00b02 : En python, la condition \u00e9valu\u00e9e n'est pas obligatoirement entre parenth\u00e8ses, mais dans le cas d'expressions complexes, les parenth\u00e8ses sont vivement conseill\u00e9es. L'instruction conditionnelle Si... Sinon ... (if\u2026 else\u2026) # Dans certains cas on ne veut ex\u00e9cuter une s\u00e9quence d'instructions que si la condition \u00e9valu\u00e9e est vraie et ex\u00e9cuter une autre s\u00e9quence d'instruction si la condition \u00e9valu\u00e9e est fausse. Syntaxe : Exemple : le programme renvoie syst\u00e9matiquement une r\u00e9ponse : \"candidat re\u00e7u\" (si condition \u00e9valu\u00e9e vraie) sinon \"candidat non re\u00e7u\" si condition \u00e9valu\u00e9e fausse) : 1 2 3 4 5 6 7 m = float ( input ( \"Moyenne ua bac : \" )) if m <= 10 : print ( \"Candidat re\u00e7u\" ) else : print ( \"Candidat non re\u00e7u\" ) print ( \"Programme termin\u00e9\" ) Exercice 1 \u00c9crire un programme qui demande la temp\u00e9rature d'une maison. Si celle-ci est inf\u00e9rieure \u00e0 19\u00b0C, afficher \"il faut allumer la chaudi\u00e8re\". Sinon, afficher \"La chaudi\u00e8re reste \u00e9teinte\". L'intruction elif # Il est possible d'ajouter autant de conditions pr\u00e9cises que l'on souhaite en ajoutant le mot cl\u00e9 elif , contraction de \"else\" et \"if\", qu'on pourrait traduire par \"sinon\". Exercice 2 \u00c9crire un script qui demande la note au bac et qui affiche la mention correspondante. Donn\u00e9es : si la note est sup\u00e9rieure ou \u00e9gale \u00e0 16, la mention au bac est TB ; si la note est sup\u00e9rieure ou \u00e9gale \u00e0 14 et inf\u00e9rieure \u00e0 16, la mention au bac est B ; si la note est sup\u00e9rieure ou \u00e9gale \u00e0 12 et inf\u00e9rieure \u00e0 14, la mention au bac est AB ; si la note est inf\u00e9rieure \u00e0 12 et sup\u00e9rieure ou \u00e9gale \u00e0 10, la mention au bac est Passable ; si la note est inf\u00e9rieure \u00e0 10, vous n'avez pas le bac. Tester autre chose que des nombres # Il est possible de tester autre chose que des nombres, par exemple des caract\u00e8res 1 2 3 4 5 6 7 8 caract = input ( 'caract\u00e8re=' ) if carac == 'H' : print ( 'lettre H' ) else : print ( \"lettre autre que le H\" ) print ( \"programme termin\u00e9\" ) Il est m\u00eame possible de savoir si la lettre tap\u00e9e se trouve avant ou apr\u00e8s une lettre donn\u00e9e dans l'alphabet : 1 2 3 4 5 6 7 8 9 10 caract = input ( 'caract\u00e8re=' ) if caract == 'H' : print ( 'lettre H' ) elif caract > 'H' : print ( \"la lettre se trouve apr\u00e8s le H\" ) else : print ( \"la lettre se trouve avant le H\" ) print ( \"programme termin\u00e9\" ) Tracer l\u2019ex\u00e9cution d\u2019une structure de choix # Dans un programme contenant une structure de choix, Il y a deux chemins d\u2019ex\u00e9cution possibles suivant si la condition \u00e9valu\u00e9e est vraie ou fausse. Si l\u2019on veut analyser les deux chemins, on doit faire la trace une premi\u00e8re fois avec une valeur qui remplit la condition, puis une seconde fois avec une valeur qui ne la remplit pas. Consid\u00e9rons le script ci-dessous. 1 2 3 4 5 6 7 val = int ( input ( \"Rentrez une valeur enti\u00e8re\" )) if val >= 10 and val <= 20 : res = - val else : res = val * 2 res = res + 20 print ( res ) Exercice 3 Choisir une valeur de la variable val qui satisfait la condition \u00e9valu\u00e9e est r\u00e9aliser la trace. Recommencer avec une valeur de variable qui ne satisfait pas la condition \u00e9valu\u00e9e. Structures it\u00e9ratives # Boucle for # Les traitements informatiques n\u00e9cessitent souvent l'ex\u00e9cution de t\u00e2ches r\u00e9p\u00e9titives. La boucle for permet d\u2019effectuer un nombre de fois bien d\u00e9termin\u00e9 le corps de boucle (s\u00e9quence d'instructions). Elle s'utilise g\u00e9n\u00e9ralement avec la fonction range(n) qui permet de g\u00e9n\u00e9rer une s\u00e9quence de nombres entiers allant de 0 \u00e0 \\(n\\) exclu. Syntaxe : Apr\u00e8s avoir tap\u00e9 for i in range(n): et appuy\u00e9 sur entr\u00e9e, l'\u00e9diteur va alors automatiquement indenter les lignes d'instructions suivantes. En effet, toutes les instructions \u00e0 r\u00e9p\u00e9ter doivent \u00eatre indent\u00e9es, et elles doivent avoir imp\u00e9rativement la m\u00eame indentation. Exemple 1 : le code suivant r\u00e9p\u00e8te 10 fois l'instruction suivante. 1 2 for i in range ( 10 ): print ( \"Hello world\" ) La fonction range() peut accepter 3 arguments : range (valeur_d\u00e9but, valeur_fin, pas) . Les 3 arguments (valeur_d\u00e9but, valeur_fin, pas) sont obligatoirement des entiers. Exercice 4 \u00c9crire un programme, qui affiche 50 fois \u201dJe dois travailler ma NSI tous les soirs\u201d \u00e0 l\u2019aide de l\u2019instruction `for'. Exercice 5 \u00c9crire deux programmes qui affichent tous les nombres pairs entre 8 et 17. Exercice 6 \u00c9crire un programme qui compte de 100.4 \u00e0 103.2 par pas de 0.1 Exercice 7 L\u2019\u00abASCII Art\u00bb consiste \u00e0 utiliser les caract\u00e8res alphanum\u00e9riques du code ASCII pour produire des images. Nous allons commencer par dessiner un carr\u00e9 \u00e0 l\u2019aide de la lettre X. \u00c9crire le programme qui affiche le carr\u00e9 ci-dessous (taille 8), en d\u00e9finissant une fonction qui prend en param\u00e8tre la longueur du c\u00f4t\u00e9. Exercice Que r\u00e9alise le code suivant : 1 2 for i in range ( 4 ): print ( i ) Exemple 3 : Le programme suivant calcule \\(x^n\\) : 1 2 3 4 5 6 7 8 x = float ( input ( \" x ? \" )) n = int ( input ( \" n ? \" )) resultat = 1 for i in range ( 1 , n + 1 ): resultat = resultat * x print ( \"x^n = \" , resultat ) Tracer l\u2019ex\u00e9cution d\u2019une boucle for # Exercice 8 La fonction factorielle r\u00e9alise le calcul suivant : n! = 1 \u00d7 2 \u00d7 3 \u00d7 \u2026 \u00d7 (n-1) \u00d7 n Par exemple : 5 ! = 1 \u00d7 2 \u00d7 3 \u00d7 4 \u00d7 5 = 120. R\u00e9aliser la trace du programme suivant qui calcul la factorielle d\u2019un nombre entier saisi par l\u2019utilisateur. On prendra \\(n\\) = 5 1 2 3 4 5 n = int ( input ( \"nombre n = \" )) x = 1 for i in range ( 2 , n + 1 ): x = i * x # x *= i print ( x ) Trace du programme : N\u00b0 ligne n x i Commentaires La boucle while (boucle conditionnelle non born\u00e9e) # La boucle while est assez peu diff\u00e9rente de la boucle for. On l'utilise lorsque l'on ne sait a priori pas combien de boucles vont \u00eatre effectu\u00e9es. On l'utilise \u00e9galement lorsque l'on veut r\u00e9aliser des incr\u00e9mentations avec un pas qui ne soit pas entier, par exemple lors d'un trac\u00e9 de courbe. La boucle \u00ab tant que \u00bb ex\u00e9cute le corps de boucle (instructions indent\u00e9es) tant qu\u2019une condition \u00e9valu\u00e9e dans le test de poursuite est vraie. D\u00e8s que la condition devient fausse, elle passe aux instructions suivantes. Syntaxe : Attention : lorsque que l'on utilise une boucle while , il faut s'assurer que la condition \u00e9valu\u00e9e dans le test de poursuite deviendra fausse \u00e0 un moment ou un autre, sinon ...le programme va boucler ind\u00e9finiment ! Exemple : Le programme suivant indique tous les entiers x dont le carr\u00e9 est inf\u00e9rieur \u00e0 un nombre n donn\u00e9 et indique \u00e9galement leur nombre (0 compris). 1 2 3 4 5 6 7 n = float ( input ( \"nombre n=\" )) x = 0 while x ** 2 <= n : print ( x ) x = x + 1 #ou x+=1 print ( \"Il y a \" , x , \"nombres entiers dont le carr\u00e9 est inf\u00e9rieur ou \u00e9gal \u00e0 \" , n ) Exercice 9 1 2 3 4 5 6 7 8 9 a = 19 b = 6 q = 0 while (( a - b ) > 0 or ( b - a ) == 0 ): a = a - b q = q + 1 r = a print ( q ) print ( r ) Effectuer la trace du programme pr\u00e9c\u00e9dent et pr\u00e9ciser le r\u00f4le de ce programme. Exercice 10 exercice 6 p 42 du livre Exercice 11 exercice 7 p 42 du livre Exercice 12 exercice 9 p 42 du livre Exercice 13 \u00c9crire le script du jeu de devinette suivant. Le jeu consiste \u00e0 deviner un nombre entre 1 et 100. Le programme demande \u00e0 l'utilisateur de rentrer une valeur et le programme lui affiche si ce nombre est trop petit, trop grand ou gagn\u00e9. Le programme compte aussi le nombre d'essai pour trouver la bonne valeur. Exemple : ---> 50 trop petit ! ---> 75 trop petit ! ---> 87 trop grand ! ---> 81 trop petit ! ---> 84 trop petit ! ---> 85 Gagn\u00e9 en 6 coups ! Donn\u00e9es : pour choisir un nombre au \"hasard\", on utilise la fonction randint() de la biblioth\u00e8que random . Exemple : 1 2 from random import * #importation de la biblioth\u00e8que random n = randint ( 1 , 5 ) #prend un nombre compris entre 1 et 5 Boucle for ou boucle while # Lorsque l\u2019on sait au d\u00e9part combien d\u2019it\u00e9rations devront \u00eatre r\u00e9alis\u00e9es, il faut utiliser une boucle for , moins consommatrice en ressources machine que la boucle while . La boucle while , quant \u00e0 elle, est utilis\u00e9e lorsque l\u2019on ne sait pas \u00e0 priori combien d\u2019it\u00e9rations seront effectu\u00e9es (par exemple si on \u00e9crit un programme qui effectue de mani\u00e8re al\u00e9atoire un lanc\u00e9 de d\u00e9s, et cela jusqu\u2019\u00e0 ce que le 6 sorte). Imbrication de boucles # Il est possible d\u2019imbriquer des boucles, c\u2019est-\u00e0-dire que dans le bloc d\u2019une boucle (boucle ext\u00e9rieure), on utilise une nouvelle boucle (boucle int\u00e9rieure). Exemple : Il est possible de modifier le programme de la table de multiplication vu pr\u00e9c\u00e9demment afin qu'il affiche toutes les tables de multiplication de 1 jusqu'\u00e0 10. Pour cela, il suffit d'imbriquer le programme pr\u00e9c\u00e9dent \u00e0 l'int\u00e9rieur d'une boucle qui fait varier \\(n\\) de 1 \u00e0 10 1 2 3 4 5 for n in range ( 1 , 11 ): print ( \"table de multiplication par\" , n ) for i in range ( 11 ): print ( i , 'x' , n , '=' , i * n ) print ( \"\" ) Parcours d'une cha\u00eene de caract\u00e8res # Les \u00e9num\u00e9rables # En math\u00e9matiques, on dit qu'un ensemble est d\u00e9nombrable lorsqu'on peut associer \u00e0 chaque \u00e9l\u00e9ment de l'ensemble un nombre (traditionnellement 1, 2, 3 ...) les fraises Tagada d'un paquet sont d\u00e9nombrables. les voitures qui roulent sur l'autoroute sont d\u00e9nombrables. l'eau qui coule d'un robinet n'est pas d\u00e9nombrable. En informatique, il existe un concept similaire qui va d\u00e9signer les objets que l'on peut \u00e9num\u00e9rer, c'est-\u00e0-dire les d\u00e9composer en une succession ordonn\u00e9e d'\u00e9l\u00e9ments. On les appelle les \u00e9num\u00e9rables ou les it\u00e9rables (Python utilise le mot anglais iterable). la variable \"NSI\" (qui est de type String) est \u00e9num\u00e9rable : on peut la d\u00e9composer en N , S , I . la variable [4, 3, 17] (qui est de type List) est \u00e9num\u00e9rable : on peut la d\u00e9composer en 4 , 3 , 17 . la variable 5 (qui est de type Int) n'est PAS \u00e9num\u00e9rable : on ne peut pas la d\u00e9composer. Solution directe : parcours des \u00e9l\u00e9ments # Une cha\u00eene de caract\u00e8res (type string) est compos\u00e9e de ... caract\u00e8res ! Il est possible de parcourir ces caract\u00e8res avec une structure for... in... Exemple : le programme suivant demande une cha\u00eene de caract\u00e8res et ins\u00e8re un \".\" entre chaque caract\u00e8re : 1 2 3 chaine = input ( \"Cha\u00eene de caract\u00e8re = \" ) for i in chaine : print ( i , end = '.' ) Solution indirecte : parcours des indices # Il est possible d'acc\u00e9der \u00e0 chaque caract\u00e8re d'une cha\u00eene \u00e0 l'aide de son indice de position. Le premier caract\u00e8re est toujours index\u00e9 0. Exemple : pour afficher le 1er et 5\u00e8me caract\u00e8re d'une cha\u00eene : 1 2 3 chaine = \"NUMERIQUE\" print ( \"le premier caract\u00e8re est :\" , chaine [ 0 ]) print ( \"le cinqui\u00e8me caract\u00e8re est :\" , chaine [ 4 ]) Pour balayer l'ensemble des caract\u00e8res de la cha\u00eene de caract\u00e8res : 1 2 3 chaine = input ( \"Cha\u00eene de caract\u00e8re = \" ) for i in range ( len ( chaine )): print ( chaine [ i ], end = '.' ) Remarque : le fonction len() retourne la longueur de la cha\u00eene. Exercice 14 R\u00e9aliser un programme qui demande une cha\u00eene de caract\u00e8res et une lettre et indiquera le nombre de fois que la lettre \u00e0 \u00e9t\u00e9 rencontr\u00e9e dans la cha\u00eene de caract\u00e8res. Exercice 15 R\u00e9aliser un programme qui demande un mot et d\u00e9termine si oui ou non ce mot est un palindrome, c\u2019est-\u00e0-dire qu'il peut se lire indiff\u00e9remment dans les 2 sens, par exemple radar, S.O.S, ... Exercices # Exercice 16 R\u00e9aliser un programme qui simule un lancer de 3 d\u00e9s. Le programme devra : Afficher le r\u00e9sultat du lancer ; Indiquer s'il y a un triple et si oui, indiquer la valeur. Indiquer s'il y a un double et si oui, indiquer la valeur (ne pas afficher dans le cas d'un triple) Indiquer \u00e9galement s'il n'y a aucun double ou triple. Exercice 17 R\u00e9soudre \u00e0 l'aide d'un programme le probl\u00e8me suivant. Une balle est l\u00e2ch\u00e9e d'une hauteur initiale \\(h\\) et rebondit \u00e0 chaque fois au 2/3 de sa hauteur. On consid\u00e8re qu'elle ne rebondit plus lorsque la hauteur devient strictement inf\u00e9rieure 5 cm. Calculer le nombre de rebonds de la balle Exercice 18 pour ceux qui ont termin\u00e9 A l'aide d'un programme, v\u00e9rifier que la probabilit\u00e9 de tirer un 6 lors d'un jeter de d\u00e9 est bien de 1/6. Exercice 20 Exercice 28 p 44 du livre","title":"Contr\u00f4le du flux d'ex\u00e9cution"},{"location":"Premiere/Langage/ControleFlux_Python/#controle-du-flux-dexecution","text":"","title":"Contr\u00f4le du flux d'\u00e9xecution"},{"location":"Premiere/Langage/ControleFlux_Python/#introduction","text":"Jusqu'\u00e0 pr\u00e9sent, nous avons vu des algorithmes simples qui se d\u00e9roulent en s\u00e9quence de la premi\u00e8re \u00e0 la derni\u00e8re instruction. Cependant, ces instructions en s\u00e9quence ne suffisent pas \u00e0 ex\u00e9cuter des algorithmes plus complexes o\u00f9 : Certaines s\u00e9quences d'instructions ne peuvent \u00eatre ex\u00e9cut\u00e9es que sous certaines conditions : structures conditionnelles (if\u2026 else) Certaines s\u00e9quences d'instructions n\u00e9cessitent d'\u00eatre ex\u00e9cut\u00e9es un certain nombre de fois : structures it\u00e9ratives (boucle for et boucle while) Le chemin suivi par le programme est appel\u00e9 le flux d'ex\u00e9cution et les instructions qui le modifient sont appel\u00e9es les instructions de contr\u00f4le de flux.","title":"Introduction"},{"location":"Premiere/Langage/ControleFlux_Python/#les-structures-conditionnelles","text":"","title":"Les structures conditionnelles"},{"location":"Premiere/Langage/ControleFlux_Python/#linstruction-conditionnelle-si-if","text":"Dans certains cas, on ne veut ex\u00e9cuter une s\u00e9rie d\u2019instructions que sous une condition. Syntaxe : Apr\u00e8s avoir tap\u00e9 if condition : et appuy\u00e9 sur entr\u00e9e, l'\u00e9diteur va alors automatiquement indenter (d\u00e9calage vers la droite) les lignes d'instructions suivantes. En effet, toutes les instructions qui doivent \u00eatre effectu\u00e9es si la condition est vraie doivent \u00eatre indent\u00e9es, et elles doivent avoir imp\u00e9rativement la m\u00eame indentation. Exemple : le programme suivant affiche candidat re\u00e7u mais uniquement que celui-ci ait une moyenne sup\u00e9rieure ou \u00e9gale \u00e0 10. 1 2 3 4 5 6 m = float ( input ( \"Moyenne : \" )) if m >= 10 : print ( \"Candidat accept\u00e9\" ) print ( \"programme termin\u00e9\" )","title":"L'instruction conditionnelle Si (if)"},{"location":"Premiere/Langage/ControleFlux_Python/#levaluation-de-la-condition","text":"En fait la condition \u00e9valu\u00e9e m >= 10 renvoie un bool\u00e9en, True (vrai) ou False (faux). Il est possible de le v\u00e9rifier en rajoutant l\u2019instruction suivante en fin de programme : 1 2 3 4 5 6 m = float ( input ( \"Moyenne au bac = \" )) condition = m >= 10 print ( \"La condition \u00e9valu\u00e9e \u00e9tait bien : \" , condition ) print ( \"boolean est bien du type :\" , type ( condition ))","title":"L\u2019\u00e9valuation de la condition"},{"location":"Premiere/Langage/ControleFlux_Python/#operateurs-de-comparaison-et-operateurs-logiques","text":"Afin d\u2019\u00e9crire une condition, on utilise les op\u00e9rateurs de comparaison suivants : Op\u00e9rateur Signification litt\u00e9rale < strictement inf\u00e9rieur \u00e0 > strictement sup\u00e9rieur \u00e0 <= inf\u00e9rieur ou \u00e9gal \u00e0 >= sup\u00e9rieur ou \u00e9gal \u00e0 == \u00e9gal \u00e0 != diff\u00e9rent de Attention : l\u2019\u00e9galit\u00e9 de deux valeurs est exprim\u00e9e avec l\u2019op\u00e9rateur \u00ab == \u00bb et non \u00ab = \u00bb. Ce dernier est en effet l\u2019op\u00e9rateur d\u2019affectation et ne doit pas \u00eatre utilis\u00e9 dans une condition. Ces op\u00e9rateurs de comparaisons peuvent \u00eatre combin\u00e9s aux op\u00e9rateurs logiques (ou op\u00e9rateurs bool\u00e9ens) suivants : Op\u00e9rateur R\u00f4le a and b Vraie si a et b sont vraie a or b vraie si a ou b (ou les deux) sont vraies not(a) si a est vraie, not(a) est fausse et inversement Exemple : le programme suivant d\u00e9termine si le candidat aura une mention BIEN. Pour cela sa note doit \u00eatre sup\u00e9rieure ou \u00e9gale \u00e0 12 et inf\u00e9rieure strictement \u00e0 14 : 1 2 3 m = float ( input ( \"Moyenne au bac : \" )) if m >= 12 and m < 14 : print ( \"mention bien\" ) L\u00e0 encore, l'expression \u00e9valu\u00e9e : m >= 10 and m < 12 renvoie un bool\u00e9en : 1 2 3 4 5 6 m = float ( input ( \"Moyenne au bac : \" )) boolean = m >= 10 and m < 14 if boolean : print ( \"mention bien\" ) print ( \"La condition \u00e9valu\u00e9e \u00e9tait bien : \" , m >= 10 and m < 14 ) print (( \"boolean est bien du type :\" , type ( boolean ))) Remarque n\u00b01 : En python (contrairement au langage Java par exemple), la condition if (m>= 12 and m <1 4) : peut \u00eatre remplac\u00e9e par la condition if(12 <= m <14). Remarque n\u00b02 : En python, la condition \u00e9valu\u00e9e n'est pas obligatoirement entre parenth\u00e8ses, mais dans le cas d'expressions complexes, les parenth\u00e8ses sont vivement conseill\u00e9es.","title":"Op\u00e9rateurs de comparaison et op\u00e9rateurs logiques"},{"location":"Premiere/Langage/ControleFlux_Python/#linstruction-conditionnelle-si-sinon-if-else","text":"Dans certains cas on ne veut ex\u00e9cuter une s\u00e9quence d'instructions que si la condition \u00e9valu\u00e9e est vraie et ex\u00e9cuter une autre s\u00e9quence d'instruction si la condition \u00e9valu\u00e9e est fausse. Syntaxe : Exemple : le programme renvoie syst\u00e9matiquement une r\u00e9ponse : \"candidat re\u00e7u\" (si condition \u00e9valu\u00e9e vraie) sinon \"candidat non re\u00e7u\" si condition \u00e9valu\u00e9e fausse) : 1 2 3 4 5 6 7 m = float ( input ( \"Moyenne ua bac : \" )) if m <= 10 : print ( \"Candidat re\u00e7u\" ) else : print ( \"Candidat non re\u00e7u\" ) print ( \"Programme termin\u00e9\" ) Exercice 1 \u00c9crire un programme qui demande la temp\u00e9rature d'une maison. Si celle-ci est inf\u00e9rieure \u00e0 19\u00b0C, afficher \"il faut allumer la chaudi\u00e8re\". Sinon, afficher \"La chaudi\u00e8re reste \u00e9teinte\".","title":"L'instruction conditionnelle   Si... Sinon ...    (if\u2026 else\u2026)"},{"location":"Premiere/Langage/ControleFlux_Python/#lintruction-elif","text":"Il est possible d'ajouter autant de conditions pr\u00e9cises que l'on souhaite en ajoutant le mot cl\u00e9 elif , contraction de \"else\" et \"if\", qu'on pourrait traduire par \"sinon\". Exercice 2 \u00c9crire un script qui demande la note au bac et qui affiche la mention correspondante. Donn\u00e9es : si la note est sup\u00e9rieure ou \u00e9gale \u00e0 16, la mention au bac est TB ; si la note est sup\u00e9rieure ou \u00e9gale \u00e0 14 et inf\u00e9rieure \u00e0 16, la mention au bac est B ; si la note est sup\u00e9rieure ou \u00e9gale \u00e0 12 et inf\u00e9rieure \u00e0 14, la mention au bac est AB ; si la note est inf\u00e9rieure \u00e0 12 et sup\u00e9rieure ou \u00e9gale \u00e0 10, la mention au bac est Passable ; si la note est inf\u00e9rieure \u00e0 10, vous n'avez pas le bac.","title":"L'intruction elif"},{"location":"Premiere/Langage/ControleFlux_Python/#tester-autre-chose-que-des-nombres","text":"Il est possible de tester autre chose que des nombres, par exemple des caract\u00e8res 1 2 3 4 5 6 7 8 caract = input ( 'caract\u00e8re=' ) if carac == 'H' : print ( 'lettre H' ) else : print ( \"lettre autre que le H\" ) print ( \"programme termin\u00e9\" ) Il est m\u00eame possible de savoir si la lettre tap\u00e9e se trouve avant ou apr\u00e8s une lettre donn\u00e9e dans l'alphabet : 1 2 3 4 5 6 7 8 9 10 caract = input ( 'caract\u00e8re=' ) if caract == 'H' : print ( 'lettre H' ) elif caract > 'H' : print ( \"la lettre se trouve apr\u00e8s le H\" ) else : print ( \"la lettre se trouve avant le H\" ) print ( \"programme termin\u00e9\" )","title":"Tester autre chose que des nombres"},{"location":"Premiere/Langage/ControleFlux_Python/#tracer-lexecution-dune-structure-de-choix","text":"Dans un programme contenant une structure de choix, Il y a deux chemins d\u2019ex\u00e9cution possibles suivant si la condition \u00e9valu\u00e9e est vraie ou fausse. Si l\u2019on veut analyser les deux chemins, on doit faire la trace une premi\u00e8re fois avec une valeur qui remplit la condition, puis une seconde fois avec une valeur qui ne la remplit pas. Consid\u00e9rons le script ci-dessous. 1 2 3 4 5 6 7 val = int ( input ( \"Rentrez une valeur enti\u00e8re\" )) if val >= 10 and val <= 20 : res = - val else : res = val * 2 res = res + 20 print ( res ) Exercice 3 Choisir une valeur de la variable val qui satisfait la condition \u00e9valu\u00e9e est r\u00e9aliser la trace. Recommencer avec une valeur de variable qui ne satisfait pas la condition \u00e9valu\u00e9e.","title":"Tracer l\u2019ex\u00e9cution d\u2019une structure de choix"},{"location":"Premiere/Langage/ControleFlux_Python/#structures-iteratives","text":"","title":"Structures it\u00e9ratives"},{"location":"Premiere/Langage/ControleFlux_Python/#boucle-for","text":"Les traitements informatiques n\u00e9cessitent souvent l'ex\u00e9cution de t\u00e2ches r\u00e9p\u00e9titives. La boucle for permet d\u2019effectuer un nombre de fois bien d\u00e9termin\u00e9 le corps de boucle (s\u00e9quence d'instructions). Elle s'utilise g\u00e9n\u00e9ralement avec la fonction range(n) qui permet de g\u00e9n\u00e9rer une s\u00e9quence de nombres entiers allant de 0 \u00e0 \\(n\\) exclu. Syntaxe : Apr\u00e8s avoir tap\u00e9 for i in range(n): et appuy\u00e9 sur entr\u00e9e, l'\u00e9diteur va alors automatiquement indenter les lignes d'instructions suivantes. En effet, toutes les instructions \u00e0 r\u00e9p\u00e9ter doivent \u00eatre indent\u00e9es, et elles doivent avoir imp\u00e9rativement la m\u00eame indentation. Exemple 1 : le code suivant r\u00e9p\u00e8te 10 fois l'instruction suivante. 1 2 for i in range ( 10 ): print ( \"Hello world\" ) La fonction range() peut accepter 3 arguments : range (valeur_d\u00e9but, valeur_fin, pas) . Les 3 arguments (valeur_d\u00e9but, valeur_fin, pas) sont obligatoirement des entiers. Exercice 4 \u00c9crire un programme, qui affiche 50 fois \u201dJe dois travailler ma NSI tous les soirs\u201d \u00e0 l\u2019aide de l\u2019instruction `for'. Exercice 5 \u00c9crire deux programmes qui affichent tous les nombres pairs entre 8 et 17. Exercice 6 \u00c9crire un programme qui compte de 100.4 \u00e0 103.2 par pas de 0.1 Exercice 7 L\u2019\u00abASCII Art\u00bb consiste \u00e0 utiliser les caract\u00e8res alphanum\u00e9riques du code ASCII pour produire des images. Nous allons commencer par dessiner un carr\u00e9 \u00e0 l\u2019aide de la lettre X. \u00c9crire le programme qui affiche le carr\u00e9 ci-dessous (taille 8), en d\u00e9finissant une fonction qui prend en param\u00e8tre la longueur du c\u00f4t\u00e9. Exercice Que r\u00e9alise le code suivant : 1 2 for i in range ( 4 ): print ( i ) Exemple 3 : Le programme suivant calcule \\(x^n\\) : 1 2 3 4 5 6 7 8 x = float ( input ( \" x ? \" )) n = int ( input ( \" n ? \" )) resultat = 1 for i in range ( 1 , n + 1 ): resultat = resultat * x print ( \"x^n = \" , resultat )","title":"Boucle for"},{"location":"Premiere/Langage/ControleFlux_Python/#tracer-lexecution-dune-boucle-for","text":"Exercice 8 La fonction factorielle r\u00e9alise le calcul suivant : n! = 1 \u00d7 2 \u00d7 3 \u00d7 \u2026 \u00d7 (n-1) \u00d7 n Par exemple : 5 ! = 1 \u00d7 2 \u00d7 3 \u00d7 4 \u00d7 5 = 120. R\u00e9aliser la trace du programme suivant qui calcul la factorielle d\u2019un nombre entier saisi par l\u2019utilisateur. On prendra \\(n\\) = 5 1 2 3 4 5 n = int ( input ( \"nombre n = \" )) x = 1 for i in range ( 2 , n + 1 ): x = i * x # x *= i print ( x ) Trace du programme : N\u00b0 ligne n x i Commentaires","title":"Tracer l\u2019ex\u00e9cution d\u2019une boucle for"},{"location":"Premiere/Langage/ControleFlux_Python/#la-boucle-while-boucle-conditionnelle-non-bornee","text":"La boucle while est assez peu diff\u00e9rente de la boucle for. On l'utilise lorsque l'on ne sait a priori pas combien de boucles vont \u00eatre effectu\u00e9es. On l'utilise \u00e9galement lorsque l'on veut r\u00e9aliser des incr\u00e9mentations avec un pas qui ne soit pas entier, par exemple lors d'un trac\u00e9 de courbe. La boucle \u00ab tant que \u00bb ex\u00e9cute le corps de boucle (instructions indent\u00e9es) tant qu\u2019une condition \u00e9valu\u00e9e dans le test de poursuite est vraie. D\u00e8s que la condition devient fausse, elle passe aux instructions suivantes. Syntaxe : Attention : lorsque que l'on utilise une boucle while , il faut s'assurer que la condition \u00e9valu\u00e9e dans le test de poursuite deviendra fausse \u00e0 un moment ou un autre, sinon ...le programme va boucler ind\u00e9finiment ! Exemple : Le programme suivant indique tous les entiers x dont le carr\u00e9 est inf\u00e9rieur \u00e0 un nombre n donn\u00e9 et indique \u00e9galement leur nombre (0 compris). 1 2 3 4 5 6 7 n = float ( input ( \"nombre n=\" )) x = 0 while x ** 2 <= n : print ( x ) x = x + 1 #ou x+=1 print ( \"Il y a \" , x , \"nombres entiers dont le carr\u00e9 est inf\u00e9rieur ou \u00e9gal \u00e0 \" , n ) Exercice 9 1 2 3 4 5 6 7 8 9 a = 19 b = 6 q = 0 while (( a - b ) > 0 or ( b - a ) == 0 ): a = a - b q = q + 1 r = a print ( q ) print ( r ) Effectuer la trace du programme pr\u00e9c\u00e9dent et pr\u00e9ciser le r\u00f4le de ce programme. Exercice 10 exercice 6 p 42 du livre Exercice 11 exercice 7 p 42 du livre Exercice 12 exercice 9 p 42 du livre Exercice 13 \u00c9crire le script du jeu de devinette suivant. Le jeu consiste \u00e0 deviner un nombre entre 1 et 100. Le programme demande \u00e0 l'utilisateur de rentrer une valeur et le programme lui affiche si ce nombre est trop petit, trop grand ou gagn\u00e9. Le programme compte aussi le nombre d'essai pour trouver la bonne valeur. Exemple : ---> 50 trop petit ! ---> 75 trop petit ! ---> 87 trop grand ! ---> 81 trop petit ! ---> 84 trop petit ! ---> 85 Gagn\u00e9 en 6 coups ! Donn\u00e9es : pour choisir un nombre au \"hasard\", on utilise la fonction randint() de la biblioth\u00e8que random . Exemple : 1 2 from random import * #importation de la biblioth\u00e8que random n = randint ( 1 , 5 ) #prend un nombre compris entre 1 et 5","title":"La boucle while  (boucle conditionnelle non born\u00e9e)"},{"location":"Premiere/Langage/ControleFlux_Python/#boucle-for-ou-boucle-while","text":"Lorsque l\u2019on sait au d\u00e9part combien d\u2019it\u00e9rations devront \u00eatre r\u00e9alis\u00e9es, il faut utiliser une boucle for , moins consommatrice en ressources machine que la boucle while . La boucle while , quant \u00e0 elle, est utilis\u00e9e lorsque l\u2019on ne sait pas \u00e0 priori combien d\u2019it\u00e9rations seront effectu\u00e9es (par exemple si on \u00e9crit un programme qui effectue de mani\u00e8re al\u00e9atoire un lanc\u00e9 de d\u00e9s, et cela jusqu\u2019\u00e0 ce que le 6 sorte).","title":"Boucle for ou boucle while"},{"location":"Premiere/Langage/ControleFlux_Python/#imbrication-de-boucles","text":"Il est possible d\u2019imbriquer des boucles, c\u2019est-\u00e0-dire que dans le bloc d\u2019une boucle (boucle ext\u00e9rieure), on utilise une nouvelle boucle (boucle int\u00e9rieure). Exemple : Il est possible de modifier le programme de la table de multiplication vu pr\u00e9c\u00e9demment afin qu'il affiche toutes les tables de multiplication de 1 jusqu'\u00e0 10. Pour cela, il suffit d'imbriquer le programme pr\u00e9c\u00e9dent \u00e0 l'int\u00e9rieur d'une boucle qui fait varier \\(n\\) de 1 \u00e0 10 1 2 3 4 5 for n in range ( 1 , 11 ): print ( \"table de multiplication par\" , n ) for i in range ( 11 ): print ( i , 'x' , n , '=' , i * n ) print ( \"\" )","title":"Imbrication de boucles"},{"location":"Premiere/Langage/ControleFlux_Python/#parcours-dune-chaine-de-caracteres","text":"","title":"Parcours d'une cha\u00eene de caract\u00e8res"},{"location":"Premiere/Langage/ControleFlux_Python/#les-enumerables","text":"En math\u00e9matiques, on dit qu'un ensemble est d\u00e9nombrable lorsqu'on peut associer \u00e0 chaque \u00e9l\u00e9ment de l'ensemble un nombre (traditionnellement 1, 2, 3 ...) les fraises Tagada d'un paquet sont d\u00e9nombrables. les voitures qui roulent sur l'autoroute sont d\u00e9nombrables. l'eau qui coule d'un robinet n'est pas d\u00e9nombrable. En informatique, il existe un concept similaire qui va d\u00e9signer les objets que l'on peut \u00e9num\u00e9rer, c'est-\u00e0-dire les d\u00e9composer en une succession ordonn\u00e9e d'\u00e9l\u00e9ments. On les appelle les \u00e9num\u00e9rables ou les it\u00e9rables (Python utilise le mot anglais iterable). la variable \"NSI\" (qui est de type String) est \u00e9num\u00e9rable : on peut la d\u00e9composer en N , S , I . la variable [4, 3, 17] (qui est de type List) est \u00e9num\u00e9rable : on peut la d\u00e9composer en 4 , 3 , 17 . la variable 5 (qui est de type Int) n'est PAS \u00e9num\u00e9rable : on ne peut pas la d\u00e9composer.","title":"Les \u00e9num\u00e9rables"},{"location":"Premiere/Langage/ControleFlux_Python/#solution-directe-parcours-des-elements","text":"Une cha\u00eene de caract\u00e8res (type string) est compos\u00e9e de ... caract\u00e8res ! Il est possible de parcourir ces caract\u00e8res avec une structure for... in... Exemple : le programme suivant demande une cha\u00eene de caract\u00e8res et ins\u00e8re un \".\" entre chaque caract\u00e8re : 1 2 3 chaine = input ( \"Cha\u00eene de caract\u00e8re = \" ) for i in chaine : print ( i , end = '.' )","title":"Solution directe : parcours des \u00e9l\u00e9ments"},{"location":"Premiere/Langage/ControleFlux_Python/#solution-indirecte-parcours-des-indices","text":"Il est possible d'acc\u00e9der \u00e0 chaque caract\u00e8re d'une cha\u00eene \u00e0 l'aide de son indice de position. Le premier caract\u00e8re est toujours index\u00e9 0. Exemple : pour afficher le 1er et 5\u00e8me caract\u00e8re d'une cha\u00eene : 1 2 3 chaine = \"NUMERIQUE\" print ( \"le premier caract\u00e8re est :\" , chaine [ 0 ]) print ( \"le cinqui\u00e8me caract\u00e8re est :\" , chaine [ 4 ]) Pour balayer l'ensemble des caract\u00e8res de la cha\u00eene de caract\u00e8res : 1 2 3 chaine = input ( \"Cha\u00eene de caract\u00e8re = \" ) for i in range ( len ( chaine )): print ( chaine [ i ], end = '.' ) Remarque : le fonction len() retourne la longueur de la cha\u00eene. Exercice 14 R\u00e9aliser un programme qui demande une cha\u00eene de caract\u00e8res et une lettre et indiquera le nombre de fois que la lettre \u00e0 \u00e9t\u00e9 rencontr\u00e9e dans la cha\u00eene de caract\u00e8res. Exercice 15 R\u00e9aliser un programme qui demande un mot et d\u00e9termine si oui ou non ce mot est un palindrome, c\u2019est-\u00e0-dire qu'il peut se lire indiff\u00e9remment dans les 2 sens, par exemple radar, S.O.S, ...","title":"Solution indirecte : parcours des indices"},{"location":"Premiere/Langage/ControleFlux_Python/#exercices","text":"Exercice 16 R\u00e9aliser un programme qui simule un lancer de 3 d\u00e9s. Le programme devra : Afficher le r\u00e9sultat du lancer ; Indiquer s'il y a un triple et si oui, indiquer la valeur. Indiquer s'il y a un double et si oui, indiquer la valeur (ne pas afficher dans le cas d'un triple) Indiquer \u00e9galement s'il n'y a aucun double ou triple. Exercice 17 R\u00e9soudre \u00e0 l'aide d'un programme le probl\u00e8me suivant. Une balle est l\u00e2ch\u00e9e d'une hauteur initiale \\(h\\) et rebondit \u00e0 chaque fois au 2/3 de sa hauteur. On consid\u00e8re qu'elle ne rebondit plus lorsque la hauteur devient strictement inf\u00e9rieure 5 cm. Calculer le nombre de rebonds de la balle Exercice 18 pour ceux qui ont termin\u00e9 A l'aide d'un programme, v\u00e9rifier que la probabilit\u00e9 de tirer un 6 lors d'un jeter de d\u00e9 est bien de 1/6. Exercice 20 Exercice 28 p 44 du livre","title":"Exercices"},{"location":"Premiere/Langage/dico/","text":"Dictionnaires # Introduction # Les types de donn\u00e9es composites que nous avons abord\u00e9s jusqu'\u00e0 pr\u00e9sent (cha\u00eenes, listes, tuples) \u00e9taient tous des s\u00e9quences, c\u2019est-\u00e0-dire une suite ordonn\u00e9e d'\u00e9l\u00e9ments auxquels on peut acc\u00e9der en connaissant leur emplacement (identifi\u00e9 par leur indice). Les dictionnaires, objet de ce chapitre, constituent eux aussi un type de donn\u00e9es composites, mais ne sont pas des s\u00e9quences dans le sens o\u00f9 les \u00e9l\u00e9ments qui les constituent ne sont pas dispos\u00e9s dans un ordre immuable. Les \u00e9l\u00e9ments sont rep\u00e9r\u00e9s non pas par des indices ordonn\u00e9s, mais par une cl\u00e9 (de type quelconque : str , int , etc.) \u00e0 laquelle on va attribuer une valeur. Exemple d\u2019un dictionnaire de langues : cl\u00e9 valeur \"yes\" \"oui\" \"no\" \"non\" \"or\" \"ou\" \"and\" \"et\" Pour cr\u00e9er ce dictionnaire, on \u00e9crit entre accolades les couples s\u00e9par\u00e9s par des virgules, chaque couple \u00e9tant compos\u00e9 d\u2019une cl\u00e9 et de la valeur correspondante s\u00e9par\u00e9s par deux points : 1 2 dico = { \"yes\" : \"oui\" , \"no\" : \"non\" , \"or\" : \"ou\" , \"and\" : \"et\" } print ( dico ) Comme pour les chaines de caract\u00e8res, les tuples ou les listes, la fonction len() retourne la longueur du dictionnaire, c\u2019est-\u00e0-dire le nombre de paires cl\u00e9-valeur : 1 print ( len ( dico )) Acc\u00e8s aux \u00e9l\u00e9ments d'un dictionnaire # Deux m\u00e9thodes nomm\u00e9es keys() et values() donnent acc\u00e8s aux cl\u00e9s et aux valeurs. La m\u00e9thode items() donne acc\u00e8s \u00e0 l'ensemble des couples cl\u00e9-valeur : 1 2 3 4 dico = { \"yes\" : \"oui\" , \"no\" : \"non\" , \"or\" : \"ou\" , \"and\" : \"et\" } print ( dico . keys ()) print ( dico . values ()) print ( dico . items ()) Pour acc\u00e9der \u00e0 une valeur particuli\u00e8re du dictionnaire on travaille comme avec une liste, mais on pr\u00e9cise la cl\u00e9 \u00e0 la place de l'indice : 1 2 3 4 print ( dico [ \"yes\" ]) Attention , si l 'on demande une cl\u00e9 qui n' existe pas , alors une erreur arr\u00eate le programme : print ( dico [ \"if\" ]) Message d \u2019 erreur : KeyError : 'if' Pour rem\u00e9dier \u00e0 ce probl\u00e8me, on utilise la m\u00e9thode get qui renvoie la valeur si elle existe, sinon renvoie None : 1 print ( dico . get ( \"if\" )) Ajout ou suppression d'un \u00e9l\u00e9ment \u00e0 un dictionnaire # Pour ajouter des \u00e9l\u00e9ments \u00e0 un dictionnaire, il suffit simplement de cr\u00e9er une nouvelle paire cl\u00e9-valeur. 1 2 3 4 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } #ajout des poires \u00e0 l'inventaire : inventaire [ \"poires\" ] = 25 print ( inventaire ) Pour supprimer un \u00e9l\u00e9ment \u00e0 un dictionnaire, on utilise l'instruction del . 1 del ( inventaire [ \"oranges\" ] Parcours d'un dictionnaire # L'ordre dans lequel les \u00e9l\u00e9ments seront extraits est impr\u00e9visible puisqu'un dictionnaire n'est pas une s\u00e9quence. Nous allons voir trois mani\u00e8res de parcourir les \u00e9l\u00e9ments d'un dictionnaire. Par cl\u00e9s # Avec une boucle for , il est possible d'it\u00e9rer sur les cl\u00e9s. 1 2 3 4 5 6 7 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } for i in inventaire . keys () : print ( \"la cl\u00e9\" , i , \"a pour valeur \" , inventaire [ i ]) print ( \"---\" ) #ou for i in inventaire : print ( \"la cl\u00e9\" , i , \"a pour valeur \" , inventaire [ i ]) Par valeurs # Avec une boucle for , il est possible aussi de balayer un dictionnaire par les valeurs. 1 2 3 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } for i in inventaire . values () : print ( i ) Par couples cl\u00e9-valeur # Il est aussi possible d'it\u00e9rer sur les couples cl\u00e9-valeur gr\u00e2ce \u00e0 la m\u00e9thode items : 1 2 3 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } for i in inventaire . items () : print ( \"l'item a pour valeur \" , i ) La m\u00e9thode items appliqu\u00e9e au dictionnaire inventaire renvoie en fait une s\u00e9quence de tuples (cl\u00e9, valeur). Pour extraire la cl\u00e9 et la valeur du tuple : 1 2 3 4 5 6 7 8 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } for i in inventaire . items () : print ( \"l'item a pour valeur \" , i ) # pour extraire la cl\u00e9 et la valeur du tuple k , v = i print ( \"la cl\u00e9 \" , k , \" a pour valeur \" , v ) On peut \u00e9galement directement les cl\u00e9s et valeurs de la mani\u00e8re suivante : 1 2 3 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } for k , v in inventaire . items () : print ( \"la cl\u00e9\" , k , \"a pour valeur \" , v ) Test d'appartenance # Tout comme avec les chaines, les tuples et les listes, l'instruction in est utilisable avec les dictionnaires 1 2 3 4 5 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } if \"oranges\" in inventaire : print ( \"il reste\" , inventaire [ \"oranges\" ], \"oranges en stock\" ) else : print ( \"il ne reste plus d'oranges\" ) Comparaison de dictionnaires # Comme nous l'avons d\u00e9j\u00e0 dit, les dictionnaires ne sont pas des s\u00e9quences. La place des \u00e9l\u00e9ments dans le dictionnaire est impr\u00e9visible, ce qui rend probl\u00e9matique la comparaison de deux dictionnaires. L'op\u00e9rateur & permet de comparer les cl\u00e9s de 2 (ou plusieurs) dictionnaires : 1 2 3 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = { \"pommes\" : 53 , \"oranges\" : 30 , \"abricots\" : 80 , \"bananes\" : 30 } print ( inventaire1 . keys () & inventaire2 . keys ()) Le programme affiche les cl\u00e9s identiques aux 2 dictionnaires. Il permet aussi de comparer non seulement les cl\u00e9s mais aussi les couples cl\u00e9-valeur : 1 2 3 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = { \"pommes\" : 53 , \"oranges\" : 30 , \"abricots\" : 80 , \"bananes\" : 30 } print ( inventaire1 . items () & inventaire2 . items ()) Le programme affiche que les couples (cl\u00e9-valeur) identiques aux 2 dictionnaires Pour connaitre les cl\u00e9s qui figurent dans inventaire2 mais pas dans inventaire1 , on proc\u00e8de ainsi : 1 2 3 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = { \"pommes\" : 53 , \"oranges\" : 30 , \"abricots\" : 80 , \"bananes\" : 30 } print ( inventaire2 . keys () - inventaire1 . keys ()) Copie d'un dictionnaire # Avec les dictionnaires on rencontre le m\u00eame probl\u00e8me qu'avec les listes : 1 2 3 4 5 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = inventaire1 inventaire2 [ \"pommes\" ] = 100 print ( inventaire1 ) print ( inventaire2 ) On pourrait penser que le nombre de pommes est toujours de 30 dans l' inventaire1 et de 100 dans l' inventaire2 . Il n'en est rien puisque l'affichage montre que l' inventaire1 a \u00e9galement \u00e9t\u00e9 modifi\u00e9. En fait inventaire1 et inventaire2 pointent vers le m\u00eame emplacement m\u00e9moire (on peut consid\u00e9rer que l'on a deux noms pour le m\u00eame dictionnaire). Pour rem\u00e9dier \u00e0 ce probl\u00e8me on utilise la fonction dict() qui renvoie un dictionnaire : 1 2 3 4 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = dict ( inventaire1 ) inventaire2 [ \"pommes\" ] = 100 print ( inventaire1 ) print ( inventaire2 ) Il est possible d'utiliser \u00e9galement la m\u00e9thode copy() : 1 2 3 4 5 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = inventaire1 . copy () inventaire2 [ \"pommes\" ] = 100 print ( inventaire1 ) print ( inventaire2 ) Remarque : la fonction dict() peut \u00e9galement \u00eatre appliqu\u00e9e \u00e0 une liste de tuples afin de cr\u00e9er un dictionnaire : 1 2 3 list_tuples = [ ( \"pommes\" , 30 ), ( \"oranges\" , 18 ), ( \"abricots\" , 80 )] inventaire = dict ( list_tuples ) print ( inventaire ) Dictionnaire de dictionnnaire # De m\u00eame que les \u00e9l\u00e9ments d'une liste peuvent \u00eatre des listes, les valeurs d'un dictionnaire peuvent \u00eatre des dictionnaires : 1 2 3 4 5 6 pays = { \"France\" :{ \"capitale\" : \"Paris\" , \"population\" : 678000 , \"superficie\" : 643800 }, \"Portugal\" : { \"capitale\" : \"Lisbonne\" , \"population\" : 1030000 , \"superficie\" : 92300 }} print ( pays . get ( \"France\" )) print ( pays . get ( \"France\" ) . get ( \"capitale\" )) print ( pays . get ( \"Portugal\" ) . get ( \"population\" ))","title":"Dictionnaires"},{"location":"Premiere/Langage/dico/#dictionnaires","text":"","title":"Dictionnaires"},{"location":"Premiere/Langage/dico/#introduction","text":"Les types de donn\u00e9es composites que nous avons abord\u00e9s jusqu'\u00e0 pr\u00e9sent (cha\u00eenes, listes, tuples) \u00e9taient tous des s\u00e9quences, c\u2019est-\u00e0-dire une suite ordonn\u00e9e d'\u00e9l\u00e9ments auxquels on peut acc\u00e9der en connaissant leur emplacement (identifi\u00e9 par leur indice). Les dictionnaires, objet de ce chapitre, constituent eux aussi un type de donn\u00e9es composites, mais ne sont pas des s\u00e9quences dans le sens o\u00f9 les \u00e9l\u00e9ments qui les constituent ne sont pas dispos\u00e9s dans un ordre immuable. Les \u00e9l\u00e9ments sont rep\u00e9r\u00e9s non pas par des indices ordonn\u00e9s, mais par une cl\u00e9 (de type quelconque : str , int , etc.) \u00e0 laquelle on va attribuer une valeur. Exemple d\u2019un dictionnaire de langues : cl\u00e9 valeur \"yes\" \"oui\" \"no\" \"non\" \"or\" \"ou\" \"and\" \"et\" Pour cr\u00e9er ce dictionnaire, on \u00e9crit entre accolades les couples s\u00e9par\u00e9s par des virgules, chaque couple \u00e9tant compos\u00e9 d\u2019une cl\u00e9 et de la valeur correspondante s\u00e9par\u00e9s par deux points : 1 2 dico = { \"yes\" : \"oui\" , \"no\" : \"non\" , \"or\" : \"ou\" , \"and\" : \"et\" } print ( dico ) Comme pour les chaines de caract\u00e8res, les tuples ou les listes, la fonction len() retourne la longueur du dictionnaire, c\u2019est-\u00e0-dire le nombre de paires cl\u00e9-valeur : 1 print ( len ( dico ))","title":"Introduction"},{"location":"Premiere/Langage/dico/#acces-aux-elements-dun-dictionnaire","text":"Deux m\u00e9thodes nomm\u00e9es keys() et values() donnent acc\u00e8s aux cl\u00e9s et aux valeurs. La m\u00e9thode items() donne acc\u00e8s \u00e0 l'ensemble des couples cl\u00e9-valeur : 1 2 3 4 dico = { \"yes\" : \"oui\" , \"no\" : \"non\" , \"or\" : \"ou\" , \"and\" : \"et\" } print ( dico . keys ()) print ( dico . values ()) print ( dico . items ()) Pour acc\u00e9der \u00e0 une valeur particuli\u00e8re du dictionnaire on travaille comme avec une liste, mais on pr\u00e9cise la cl\u00e9 \u00e0 la place de l'indice : 1 2 3 4 print ( dico [ \"yes\" ]) Attention , si l 'on demande une cl\u00e9 qui n' existe pas , alors une erreur arr\u00eate le programme : print ( dico [ \"if\" ]) Message d \u2019 erreur : KeyError : 'if' Pour rem\u00e9dier \u00e0 ce probl\u00e8me, on utilise la m\u00e9thode get qui renvoie la valeur si elle existe, sinon renvoie None : 1 print ( dico . get ( \"if\" ))","title":"Acc\u00e8s aux \u00e9l\u00e9ments d'un dictionnaire"},{"location":"Premiere/Langage/dico/#ajout-ou-suppression-dun-element-a-un-dictionnaire","text":"Pour ajouter des \u00e9l\u00e9ments \u00e0 un dictionnaire, il suffit simplement de cr\u00e9er une nouvelle paire cl\u00e9-valeur. 1 2 3 4 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } #ajout des poires \u00e0 l'inventaire : inventaire [ \"poires\" ] = 25 print ( inventaire ) Pour supprimer un \u00e9l\u00e9ment \u00e0 un dictionnaire, on utilise l'instruction del . 1 del ( inventaire [ \"oranges\" ]","title":"Ajout ou suppression d'un \u00e9l\u00e9ment \u00e0 un dictionnaire"},{"location":"Premiere/Langage/dico/#parcours-dun-dictionnaire","text":"L'ordre dans lequel les \u00e9l\u00e9ments seront extraits est impr\u00e9visible puisqu'un dictionnaire n'est pas une s\u00e9quence. Nous allons voir trois mani\u00e8res de parcourir les \u00e9l\u00e9ments d'un dictionnaire.","title":"Parcours d'un dictionnaire"},{"location":"Premiere/Langage/dico/#par-cles","text":"Avec une boucle for , il est possible d'it\u00e9rer sur les cl\u00e9s. 1 2 3 4 5 6 7 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } for i in inventaire . keys () : print ( \"la cl\u00e9\" , i , \"a pour valeur \" , inventaire [ i ]) print ( \"---\" ) #ou for i in inventaire : print ( \"la cl\u00e9\" , i , \"a pour valeur \" , inventaire [ i ])","title":"Par cl\u00e9s"},{"location":"Premiere/Langage/dico/#par-valeurs","text":"Avec une boucle for , il est possible aussi de balayer un dictionnaire par les valeurs. 1 2 3 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } for i in inventaire . values () : print ( i )","title":"Par valeurs"},{"location":"Premiere/Langage/dico/#par-couples-cle-valeur","text":"Il est aussi possible d'it\u00e9rer sur les couples cl\u00e9-valeur gr\u00e2ce \u00e0 la m\u00e9thode items : 1 2 3 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } for i in inventaire . items () : print ( \"l'item a pour valeur \" , i ) La m\u00e9thode items appliqu\u00e9e au dictionnaire inventaire renvoie en fait une s\u00e9quence de tuples (cl\u00e9, valeur). Pour extraire la cl\u00e9 et la valeur du tuple : 1 2 3 4 5 6 7 8 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } for i in inventaire . items () : print ( \"l'item a pour valeur \" , i ) # pour extraire la cl\u00e9 et la valeur du tuple k , v = i print ( \"la cl\u00e9 \" , k , \" a pour valeur \" , v ) On peut \u00e9galement directement les cl\u00e9s et valeurs de la mani\u00e8re suivante : 1 2 3 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } for k , v in inventaire . items () : print ( \"la cl\u00e9\" , k , \"a pour valeur \" , v )","title":"Par couples cl\u00e9-valeur"},{"location":"Premiere/Langage/dico/#test-dappartenance","text":"Tout comme avec les chaines, les tuples et les listes, l'instruction in est utilisable avec les dictionnaires 1 2 3 4 5 inventaire = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } if \"oranges\" in inventaire : print ( \"il reste\" , inventaire [ \"oranges\" ], \"oranges en stock\" ) else : print ( \"il ne reste plus d'oranges\" )","title":"Test d'appartenance"},{"location":"Premiere/Langage/dico/#comparaison-de-dictionnaires","text":"Comme nous l'avons d\u00e9j\u00e0 dit, les dictionnaires ne sont pas des s\u00e9quences. La place des \u00e9l\u00e9ments dans le dictionnaire est impr\u00e9visible, ce qui rend probl\u00e9matique la comparaison de deux dictionnaires. L'op\u00e9rateur & permet de comparer les cl\u00e9s de 2 (ou plusieurs) dictionnaires : 1 2 3 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = { \"pommes\" : 53 , \"oranges\" : 30 , \"abricots\" : 80 , \"bananes\" : 30 } print ( inventaire1 . keys () & inventaire2 . keys ()) Le programme affiche les cl\u00e9s identiques aux 2 dictionnaires. Il permet aussi de comparer non seulement les cl\u00e9s mais aussi les couples cl\u00e9-valeur : 1 2 3 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = { \"pommes\" : 53 , \"oranges\" : 30 , \"abricots\" : 80 , \"bananes\" : 30 } print ( inventaire1 . items () & inventaire2 . items ()) Le programme affiche que les couples (cl\u00e9-valeur) identiques aux 2 dictionnaires Pour connaitre les cl\u00e9s qui figurent dans inventaire2 mais pas dans inventaire1 , on proc\u00e8de ainsi : 1 2 3 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = { \"pommes\" : 53 , \"oranges\" : 30 , \"abricots\" : 80 , \"bananes\" : 30 } print ( inventaire2 . keys () - inventaire1 . keys ())","title":"Comparaison de dictionnaires"},{"location":"Premiere/Langage/dico/#copie-dun-dictionnaire","text":"Avec les dictionnaires on rencontre le m\u00eame probl\u00e8me qu'avec les listes : 1 2 3 4 5 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = inventaire1 inventaire2 [ \"pommes\" ] = 100 print ( inventaire1 ) print ( inventaire2 ) On pourrait penser que le nombre de pommes est toujours de 30 dans l' inventaire1 et de 100 dans l' inventaire2 . Il n'en est rien puisque l'affichage montre que l' inventaire1 a \u00e9galement \u00e9t\u00e9 modifi\u00e9. En fait inventaire1 et inventaire2 pointent vers le m\u00eame emplacement m\u00e9moire (on peut consid\u00e9rer que l'on a deux noms pour le m\u00eame dictionnaire). Pour rem\u00e9dier \u00e0 ce probl\u00e8me on utilise la fonction dict() qui renvoie un dictionnaire : 1 2 3 4 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = dict ( inventaire1 ) inventaire2 [ \"pommes\" ] = 100 print ( inventaire1 ) print ( inventaire2 ) Il est possible d'utiliser \u00e9galement la m\u00e9thode copy() : 1 2 3 4 5 inventaire1 = { \"pommes\" : 50 , \"oranges\" : 30 , \"abricots\" : 80 } inventaire2 = inventaire1 . copy () inventaire2 [ \"pommes\" ] = 100 print ( inventaire1 ) print ( inventaire2 ) Remarque : la fonction dict() peut \u00e9galement \u00eatre appliqu\u00e9e \u00e0 une liste de tuples afin de cr\u00e9er un dictionnaire : 1 2 3 list_tuples = [ ( \"pommes\" , 30 ), ( \"oranges\" , 18 ), ( \"abricots\" , 80 )] inventaire = dict ( list_tuples ) print ( inventaire )","title":"Copie d'un dictionnaire"},{"location":"Premiere/Langage/dico/#dictionnaire-de-dictionnnaire","text":"De m\u00eame que les \u00e9l\u00e9ments d'une liste peuvent \u00eatre des listes, les valeurs d'un dictionnaire peuvent \u00eatre des dictionnaires : 1 2 3 4 5 6 pays = { \"France\" :{ \"capitale\" : \"Paris\" , \"population\" : 678000 , \"superficie\" : 643800 }, \"Portugal\" : { \"capitale\" : \"Lisbonne\" , \"population\" : 1030000 , \"superficie\" : 92300 }} print ( pays . get ( \"France\" )) print ( pays . get ( \"France\" ) . get ( \"capitale\" )) print ( pays . get ( \"Portugal\" ) . get ( \"population\" ))","title":"Dictionnaire de dictionnnaire"},{"location":"Premiere/Langage/fonction_python/","text":"Les fonctions avec Python # Introduction # La notion de fonction est essentielle en programmation. Elle permet de construire des codes modulaires, plus faciles \u00e0 lire et \u00e0 modifier. En Python, une fonction se cr\u00e9e avec le mot-cl\u00e9 def . Fonctions simples, fonctions param\u00e9tr\u00e9es, proc\u00e9dures # Fonctions simples # Pour d\u00e9finir une fonction simple, la syntaxe \u00e0 respecter est la suivante : 1 2 3 4 5 def nom_fonction (): instruction 1 instruction 2 instruction 3 return resultat Pour nommer votre fonction, vous pouvez choisir le nom que vous voulez, \u00e0 la condition de ne pas utiliser un nom r\u00e9serv\u00e9 par le langage, de ne pas utiliser de caract\u00e8res sp\u00e9ciaux ou accentu\u00e9s (le soulign\u00e9 _ est autoris\u00e9). Une bonne pratique est d'utiliser des noms explicites, de ne pas mettre de majuscule en d\u00e9but de nom d'une fonction (r\u00e9serv\u00e9 aux classes). Par exemple pour nommer une fonction qui retourne la valeur absolue d'un nombre : abs() \\(\\rightarrow\\) NON, mot r\u00e9serv\u00e9 \u00e0 la fonction d'origine dans python val abs() \\(\\rightarrow\\) NON, l'espace n'est pas autoris\u00e9 val_abs() \\(\\rightarrow\\) OUI Les parenth\u00e8ses qui suivent le nom de la fonction sont obligatoires. Exemple de fonction simple La fonction suivante, appel\u00e9e lance_des() , va retourner un nombre entier al\u00e9atoire compris entre 1 et 6 inclus : 1 2 3 4 5 6 7 8 9 from random import * # D\u00e9finition de la fonction def lance_des (): x = randint ( 1 , 6 ) return x # Appel de la fonction et affichage du r\u00e9sultat print ( lance_des ()) Important : la d\u00e9finition de la fonction doit imp\u00e9rativement pr\u00e9c\u00e9der son appel, sinon la fonction ne sera pas reconnue. Remarque : Vous constatez qu'une fonction peut elle-m\u00eame en appeler une ou plusieurs autre(s). Ici la fonction lance_des() appelle la fonction randit() . Fonctions param\u00e9tr\u00e9e # Cadre g\u00e9n\u00e9ral # Nous souhaitons maintenant \u00e9crire une fonction nomm\u00e9e plus_petit qui va nous renvoyer le plus petit de 2 nombres pass\u00e9s comme arguments de la fonction. Dans la d\u00e9finition d'une telle fonction, il faut pr\u00e9voir 2 variables particuli\u00e8res pour recevoir les arguments transmis. Ces variables s'appellent des param\u00e8tres. On choisit le nom des param\u00e8tres en respectant les m\u00eames r\u00e8gles de syntaxe que d'habitude pour les variables et on place leurs noms entre les parenth\u00e8ses qui accompagnent la d\u00e9finition de la fonction, s\u00e9par\u00e9es par une virgule. 1 2 3 4 5 def nom_fonction ( parametre1 : type_a , parametre2 : type_2 , ... ) -> type_resultat : instruction 1 instruction 2 instruction 3 return resultat Exemple de fonction param\u00e9tr\u00e9e Voici le code qui correspond \u00e0 l'\u00e9criture de la fonction plus_Petit : 1 2 3 4 5 6 7 8 9 10 11 # D\u00e9finition de la fonction plus_Petit def plus_petit ( a : int , b : int ) -> int : if a < b : return a else : return b # Programme principal resultat = plus_petit ( 12 , 28 ) print ( \"Le plus petit nombre est : \" , resultat ) G\u00e9n\u00e9ralement, on utilise des variables d\u00e9finies pr\u00e9c\u00e9demment comme arguments : 1 2 3 4 5 6 7 8 9 10 11 12 13 # D\u00e9finition de la fonction def plus_petit ( a : int , b : int ) -> int : if a < b : return a else : return b # programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Ici les param\u00e8tres a et b re\u00e7oivent respectivement les valeurs des arguments nb1 et nb2 . Remarque : les arguments peuvent \u00eatre de diff\u00e9rents types : bool\u00e9en, entier, flottant, cha\u00eene de caract\u00e8re, listes ... tout comme les valeurs retourn\u00e9es. Exercice 1 R\u00e9aliser une fonction addition qui prend en param\u00e8tre deux entiers a et b et qui r\u00e9alise la somme de a et de b . Utiliser cette fonction dans un programme. Exercice 2 R\u00e9aliser une fonction multiplication qui prend en param\u00e8tre deux entiers a et b et qui r\u00e9alise la produit de a et de b . Utiliser cette fonction dans un programme. Exercice 3 \u00c9crire une fonction qui calcule la volume d\u2019un cylindre \u00e0 partir du rayon \\(r\\) et de la hauteur \\(h\\) donn\u00e9s en argument et qui renvoie le r\u00e9sultat. Utiliser cette fonction dans un programme. Exercice 4 \u00c9crire une fonction qui r\u00e9alise la table de multiplication d\u2019un nombre \\(n\\) donn\u00e9 en argument et qui l\u2019affiche. Exercice 5 \u00c9crire une fonction qui prend en argument un flottant \\(x\\) non nul et un entier naturel \\(n\\) et qui renvoie \\(x^n\\) . Vous devrez utiliser une boucle. Exercice 6 On souhaite \u00e9crire une fonction c\u00e9l\u00e8bre en math\u00e9matiques, \u00e0 savoir la fonction factorielle. On rappelle que la factorielle de l\u2019entier \\(n\\) est donn\u00e9e par : \\(n! = \\prod_{i=1}^{n}= 1\\times2 \\times 3 \\times ... \\times (n-1) \\times n\\) . Param\u00e8tre par d\u00e9faut. # Il suffit de d\u00e9finir une valeur par d\u00e9faut \u00e0 un argument pour le rendre facultatif. Naturellement, cette valeur est \u00e9cras\u00e9e si l'argument est pr\u00e9cis\u00e9 lors de l'appel de la fonction. 1 2 3 4 5 6 7 # D\u00e9finition de la fonction def affiche ( x = \"aucun argument donn\u00e9, voici le texte par d\u00e9faut\" ): print ( x ) # Programme principal affiche () affiche ( \"coucou\" ) Proc\u00e9dures # Si une fonction ne retourne rien, dans ce cas et en toute rigueur, on ne parle plus de fonction mais de proc\u00e9dure. La proc\u00e9dure se termine par return None (None (rien) repr\u00e9sente l'absence de valeur). Remarque : return None n'est pas obligatoire mais vivement conseill\u00e9. Exemple de proc\u00e9dure: 1 2 3 4 5 6 7 8 # D\u00e9finition de la fonction def bonjour ( nom ): print ( \"Bonjour \" , nom ) return None # Programme principal nom = input ( \"Quel est ton nom ? \" ) bonjour ( nom ) Exercice 7 A l'aide du module Turtle, \u00e9crire une proc\u00e9dure rect qui trace un rectangle. Cette proc\u00e9dure prend en argument la position \\(x\\) et \\(y\\) du coin sup\u00e9rieur gauche, les dimensions \\(h\\) et \\(l\\) du rectangle ainsi que la couleur choisie. Exercice 8 A l'aide du module Turtle et de la fonction pr\u00e9c\u00e9dente, \u00e9crire un fonction qui dessine une maison. Cette fonction prendra en param\u00e8tre la position (x et y) de la maison et sa couleur. La port\u00e9e des variables : variable locale et variable globale # Variable locale # Exemple : consid\u00e9rons le script suivant : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def fonction (): text = \"Bonjour\" return None # Programme principal fonction () print ( text ) Lors de l'interpr\u00e9tation du code, on constate que la variable text n'est pas reconnue dans le corps du script : 1 2 3 4 5 6 7 / usr / bin / python3 .9 / home / galand / PycharmProjects / pythonProject3 / main . py Traceback ( most recent call last ): File \"/home/galand/PycharmProjects/pythonProject3/main.py\" , line 9 , in < module > print ( text ) NameError : name 'text' is not defined Process finished with exit code 1 Cette variable, d\u00e9finie dans le corps de la fonction, ne sera reconnue qu'\u00e0 l'int\u00e9rieur de cette fonction, il s'agit d'une variable locale. D\u00e9finition : Une variable est dite locale lorsqu'elle est cr\u00e9\u00e9e dans une fonction. Elle n'existera et ne sera visible que lors de l'ex\u00e9cution de ladite fonction Variable globale Consid\u00e9rons maintenant le programme suivant : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def fonction (): print ( text ) return None # Programme principal text = \"bonjour\" fonction () Lors de l'interpr\u00e9tation du code, on constate que la variable text est bien visible dans le corps de la fonction. Cette variable, d\u00e9finie dans le corps du script, est une variable globale. Une variable globale peut-elle \u00eatre modifi\u00e9e par une fonction ? Consid\u00e9rons le script suivant. Va-t-il afficher 'Bonjour' ou 'Au revoir' ? 1 2 3 4 5 6 7 8 9 10 # D\u00e9finition de la fonction def fonction (): text = \"Bonjour\" return None # Programme principal text = \"Au revoir\" fonction () print ( text ) Nous avons vu qu'une variable globale est visible \u00e0 l'int\u00e9rieur d'une fonction, cependant on remarque ici que la valeur d'une variable globale ne peut pas \u00eatre modifi\u00e9e par une fonction. D\u00e9finition : Une variable globale lorsqu'elle est d\u00e9finie dans le programme principal. Elles sont accessibles pour toutes les fonctions du programme. Tout ceci peut para\u00eetre bien compliqu\u00e9 au premier abord. Vous comprendrez cependant tr\u00e8s vite qu'il est utile que les variables locales restent confin\u00e9es \u00e0 l'int\u00e9rieur du corps des fonctions. Cela signifie que vous pouvez utiliser n'importe quelle fonction sans vous pr\u00e9occuper le moins du monde du nom des variables utilis\u00e9es. Ces variables ne pourront pas interf\u00e9rer avec celles que vous avez d\u00e9finies dans le corps de votre script. Exercice 9 Rep\u00e9rer dans le programme suivant toutes les variables. Indiquer ensuite si ce sont des variables locales ou globales. 1 2 3 4 5 6 def somme_fonction ( a , b ): x = 5 z = a + b + x return z print ( somme_fonction ( 4 , 6 )) Le mot-cl\u00e9 : global # En python, le mot-cl\u00e9 global permet de modifier la variable en dehors de sa port\u00e9e actuelle. Il est utilis\u00e9 pour cr\u00e9er une variable globale et apporter des modifications dans un contexte local (fonction). Les r\u00e8gles pour utiliser le mot-cl\u00e9 global sont les suivantes : lorsqu'une variable est cr\u00e9\u00e9e dans une fonction : elle est locale par d\u00e9faut. lorsqu'une variable est cr\u00e9\u00e9e en dehors de toute fonction, elle est globale par d\u00e9faut. le mot-cl\u00e9 global pour lire et \u00e9crire une variable globale \u00e0 l'int\u00e9rieur d'une fonction. l'utilisation du mot-cl\u00e9 global en dehors d'une fonction n'a aucun effet. Exercice 10 Taper et comparer les deux programmes suivants : 1 2 3 4 5 6 c = 1 # variable global def ajoute (): print ( c ) ajouter () 1 2 3 4 5 6 7 8 c = 0 #variable globale def ajoute (): global c c = c + 2 print ( \"\u00e0 l'int\u00e9rieur de la fonction, c vaut \" , c ) ajouter () print ( \"dans le programme global, c vaut\" , c ) Les r\u00e8gles de bon usage # Prototyper la fonction # Prototyper une fonction (ou une proc\u00e9dure) consiste \u00e0 d\u00e9clarer dans l'ent\u00eate de d\u00e9finition de la fonction le type des param\u00e8tres et le type de la donn\u00e9e retourn\u00e9e. C'est absolument indispensable dans des langages comme le C, mais pas obligatoire en python. C'est malgr\u00e9 tout vivement conseill\u00e9 en python pour la clarification de la fonction au niveau du programmeur, surtout si ce n'est pas lui qui a \u00e9crit la fonction. 1 2 3 4 5 6 7 8 9 10 11 12 13 # D\u00e9finition de la fonction def plus_petit ( a : int , b : int ) -> int : if a < b : return a else : return b # Programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Pour une proc\u00e9dure : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def bonjour ( nom : str ) -> None : print ( \"Bonjour \" , nom ) return None # Programme principal nom = input ( \"Quel est ton nom ? \" ) bonjour ( nom ) Documenter # L'ent\u00eate de d\u00e9finition de la fonction peut \u00eatre suivi d'un commentaire, appel\u00e9 docstring, plac\u00e9 entre des guillemets, voir entre des triples guillemets si le commentaire comporte plusieurs lignes. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # D\u00e9finition de la fonction def plus_petit ( a : int , b : int ) -> int : \" fonction qui retourne le plus petit nombre\" if a < b : return a else : return b # Programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Si l'on place la souris sur le nom de la fonction et que l'on effectue un CTRL+I (appel de l'aide), on obtient : Remarque : l'aide indique \u00e9galement les types des arguments a et b attendus par la fonction, si cela a \u00e9t\u00e9 renseign\u00e9 lors du prototypage. Dans la console python on peut \u00e9galement obtenir l'aide en tapant help (nomFonction) Tester # Ce n'est pas parce que le code est correct syntaxiquement que le programme \u00e9crit fonctionnera. En effet, il faut pr\u00e9voir des tests avec des situations o\u00f9 le programme ne fonctionnera pas. Ces tests reposent sur le mot-cl\u00e9 assert , qui va lever une erreur lorsqu'il est suivi d'une expression \u00e9valu\u00e9e \u00e0 False . Exemple : 1 assert type ( a ) == int , 'La fonction attend un entier` Ci-dessus, on v\u00e9rifie que le type de a est un entier et apr\u00e8s la virgule, on place la cha\u00eene de caract\u00e8re qui apparaitra dans la console si le test n'est pas v\u00e9rifi\u00e9 (ici La fonction attend un entier ) Soit, on met tous les tests dans une fonction. En g\u00e9n\u00e9ral, on teste si la fonction produit le r\u00e9sultat attendu dans diff\u00e9rentes situations comme dans l'exemple ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 def maxi ( n1 , n2 ): if n1 < n2 : return n2 else : return n1 def test_maxi (): assert maxi ( 3 , 4 ) == 4 assert maxi ( 5 , 2 ) == 5 assert maxi ( 7 , 7 ) == 7 print ( \"tests ok\" ) Il est aussi possible d'int\u00e9grer les tests \u00e0 la fonction elle-m\u00eame. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 def calcul_imc ( masse : float , taille : float ) -> float : \"\"\" Cette fonction calcule l'IMC d'une personne Pr\u00e9 : l'argument masse est un entier ou flottant compris entre 3.0 et 150.0 l'argument taille est un entier ou un flottant compris entre 0.20 et 2.50 Post : la valeur retourn\u00e9e est un flottant la valeur retourn\u00e9e entre 10.0 et 50.0 \"\"\" assert type ( masse ) == int or type ( masse ) == float , \"l'argument masse doit \u00eatre de type int ou float\" assert type ( taille ) == int or type ( taille ) == float , \"l'argument masse doit \u00eatre de type int ou float\" assert masse > 3 , \"masse trop faible\" assert masse < 150 , \"masse trop importante\" assert taille > 0.30 , \" taille trop faible\" assert taille < 2.50 , \" taille trop importante\" imc = masse / taille ** 2 assert 10 < imc < 50 , \"valeur d'IMC non plausible\" return im Exercices # Exercice 11 \u00c9crire une fonction nomm\u00e9e est_pair qui prend en argument un nombre entier strictement positif et retourne True si ce nombre est pair, False sinon. Exercice 12 \u00c9crire une fonction nomm\u00e9e divisible qui prend en argument deux nombres entiers et retourne True si le plus grand des 2 nombres est divisible par le plus petit, False sinon. Exercice 13 \u00c9crire une fonction nomm\u00e9e nb_caract qui prend en premier argument une cha\u00eene de caract\u00e8res, en deuxi\u00e8me argument un caract\u00e8re et retourne le nombre de fois que le caract\u00e8re appara\u00eet dans la cha\u00eene. Le second argument est facultatif. S'il n'est pas indiqu\u00e9, il sera consid\u00e9r\u00e9 par la fonction comme un espace. Si le caract\u00e8re n'est pas pr\u00e9sent dans la cha\u00eene, la fonction retourne 0. Exercice 14 \u00c9crire une fonction nomm\u00e9e inverse qui prend en argument une cha\u00eene de caract\u00e8res et retourne la cha\u00eene de caract\u00e8res invers\u00e9e.","title":"Les fonctions en Python"},{"location":"Premiere/Langage/fonction_python/#les-fonctions-avec-python","text":"","title":"Les fonctions avec Python"},{"location":"Premiere/Langage/fonction_python/#introduction","text":"La notion de fonction est essentielle en programmation. Elle permet de construire des codes modulaires, plus faciles \u00e0 lire et \u00e0 modifier. En Python, une fonction se cr\u00e9e avec le mot-cl\u00e9 def .","title":"Introduction"},{"location":"Premiere/Langage/fonction_python/#fonctions-simples-fonctions-parametrees-procedures","text":"","title":"Fonctions simples, fonctions param\u00e9tr\u00e9es, proc\u00e9dures"},{"location":"Premiere/Langage/fonction_python/#fonctions-simples","text":"Pour d\u00e9finir une fonction simple, la syntaxe \u00e0 respecter est la suivante : 1 2 3 4 5 def nom_fonction (): instruction 1 instruction 2 instruction 3 return resultat Pour nommer votre fonction, vous pouvez choisir le nom que vous voulez, \u00e0 la condition de ne pas utiliser un nom r\u00e9serv\u00e9 par le langage, de ne pas utiliser de caract\u00e8res sp\u00e9ciaux ou accentu\u00e9s (le soulign\u00e9 _ est autoris\u00e9). Une bonne pratique est d'utiliser des noms explicites, de ne pas mettre de majuscule en d\u00e9but de nom d'une fonction (r\u00e9serv\u00e9 aux classes). Par exemple pour nommer une fonction qui retourne la valeur absolue d'un nombre : abs() \\(\\rightarrow\\) NON, mot r\u00e9serv\u00e9 \u00e0 la fonction d'origine dans python val abs() \\(\\rightarrow\\) NON, l'espace n'est pas autoris\u00e9 val_abs() \\(\\rightarrow\\) OUI Les parenth\u00e8ses qui suivent le nom de la fonction sont obligatoires. Exemple de fonction simple La fonction suivante, appel\u00e9e lance_des() , va retourner un nombre entier al\u00e9atoire compris entre 1 et 6 inclus : 1 2 3 4 5 6 7 8 9 from random import * # D\u00e9finition de la fonction def lance_des (): x = randint ( 1 , 6 ) return x # Appel de la fonction et affichage du r\u00e9sultat print ( lance_des ()) Important : la d\u00e9finition de la fonction doit imp\u00e9rativement pr\u00e9c\u00e9der son appel, sinon la fonction ne sera pas reconnue. Remarque : Vous constatez qu'une fonction peut elle-m\u00eame en appeler une ou plusieurs autre(s). Ici la fonction lance_des() appelle la fonction randit() .","title":"Fonctions simples"},{"location":"Premiere/Langage/fonction_python/#fonctions-parametree","text":"","title":"Fonctions param\u00e9tr\u00e9e"},{"location":"Premiere/Langage/fonction_python/#cadre-general","text":"Nous souhaitons maintenant \u00e9crire une fonction nomm\u00e9e plus_petit qui va nous renvoyer le plus petit de 2 nombres pass\u00e9s comme arguments de la fonction. Dans la d\u00e9finition d'une telle fonction, il faut pr\u00e9voir 2 variables particuli\u00e8res pour recevoir les arguments transmis. Ces variables s'appellent des param\u00e8tres. On choisit le nom des param\u00e8tres en respectant les m\u00eames r\u00e8gles de syntaxe que d'habitude pour les variables et on place leurs noms entre les parenth\u00e8ses qui accompagnent la d\u00e9finition de la fonction, s\u00e9par\u00e9es par une virgule. 1 2 3 4 5 def nom_fonction ( parametre1 : type_a , parametre2 : type_2 , ... ) -> type_resultat : instruction 1 instruction 2 instruction 3 return resultat Exemple de fonction param\u00e9tr\u00e9e Voici le code qui correspond \u00e0 l'\u00e9criture de la fonction plus_Petit : 1 2 3 4 5 6 7 8 9 10 11 # D\u00e9finition de la fonction plus_Petit def plus_petit ( a : int , b : int ) -> int : if a < b : return a else : return b # Programme principal resultat = plus_petit ( 12 , 28 ) print ( \"Le plus petit nombre est : \" , resultat ) G\u00e9n\u00e9ralement, on utilise des variables d\u00e9finies pr\u00e9c\u00e9demment comme arguments : 1 2 3 4 5 6 7 8 9 10 11 12 13 # D\u00e9finition de la fonction def plus_petit ( a : int , b : int ) -> int : if a < b : return a else : return b # programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Ici les param\u00e8tres a et b re\u00e7oivent respectivement les valeurs des arguments nb1 et nb2 . Remarque : les arguments peuvent \u00eatre de diff\u00e9rents types : bool\u00e9en, entier, flottant, cha\u00eene de caract\u00e8re, listes ... tout comme les valeurs retourn\u00e9es. Exercice 1 R\u00e9aliser une fonction addition qui prend en param\u00e8tre deux entiers a et b et qui r\u00e9alise la somme de a et de b . Utiliser cette fonction dans un programme. Exercice 2 R\u00e9aliser une fonction multiplication qui prend en param\u00e8tre deux entiers a et b et qui r\u00e9alise la produit de a et de b . Utiliser cette fonction dans un programme. Exercice 3 \u00c9crire une fonction qui calcule la volume d\u2019un cylindre \u00e0 partir du rayon \\(r\\) et de la hauteur \\(h\\) donn\u00e9s en argument et qui renvoie le r\u00e9sultat. Utiliser cette fonction dans un programme. Exercice 4 \u00c9crire une fonction qui r\u00e9alise la table de multiplication d\u2019un nombre \\(n\\) donn\u00e9 en argument et qui l\u2019affiche. Exercice 5 \u00c9crire une fonction qui prend en argument un flottant \\(x\\) non nul et un entier naturel \\(n\\) et qui renvoie \\(x^n\\) . Vous devrez utiliser une boucle. Exercice 6 On souhaite \u00e9crire une fonction c\u00e9l\u00e8bre en math\u00e9matiques, \u00e0 savoir la fonction factorielle. On rappelle que la factorielle de l\u2019entier \\(n\\) est donn\u00e9e par : \\(n! = \\prod_{i=1}^{n}= 1\\times2 \\times 3 \\times ... \\times (n-1) \\times n\\) .","title":"Cadre g\u00e9n\u00e9ral"},{"location":"Premiere/Langage/fonction_python/#parametre-par-defaut","text":"Il suffit de d\u00e9finir une valeur par d\u00e9faut \u00e0 un argument pour le rendre facultatif. Naturellement, cette valeur est \u00e9cras\u00e9e si l'argument est pr\u00e9cis\u00e9 lors de l'appel de la fonction. 1 2 3 4 5 6 7 # D\u00e9finition de la fonction def affiche ( x = \"aucun argument donn\u00e9, voici le texte par d\u00e9faut\" ): print ( x ) # Programme principal affiche () affiche ( \"coucou\" )","title":"Param\u00e8tre par d\u00e9faut."},{"location":"Premiere/Langage/fonction_python/#procedures","text":"Si une fonction ne retourne rien, dans ce cas et en toute rigueur, on ne parle plus de fonction mais de proc\u00e9dure. La proc\u00e9dure se termine par return None (None (rien) repr\u00e9sente l'absence de valeur). Remarque : return None n'est pas obligatoire mais vivement conseill\u00e9. Exemple de proc\u00e9dure: 1 2 3 4 5 6 7 8 # D\u00e9finition de la fonction def bonjour ( nom ): print ( \"Bonjour \" , nom ) return None # Programme principal nom = input ( \"Quel est ton nom ? \" ) bonjour ( nom ) Exercice 7 A l'aide du module Turtle, \u00e9crire une proc\u00e9dure rect qui trace un rectangle. Cette proc\u00e9dure prend en argument la position \\(x\\) et \\(y\\) du coin sup\u00e9rieur gauche, les dimensions \\(h\\) et \\(l\\) du rectangle ainsi que la couleur choisie. Exercice 8 A l'aide du module Turtle et de la fonction pr\u00e9c\u00e9dente, \u00e9crire un fonction qui dessine une maison. Cette fonction prendra en param\u00e8tre la position (x et y) de la maison et sa couleur.","title":"Proc\u00e9dures"},{"location":"Premiere/Langage/fonction_python/#la-portee-des-variables-variable-locale-et-variable-globale","text":"","title":"La port\u00e9e des variables : variable locale et variable globale"},{"location":"Premiere/Langage/fonction_python/#variable-locale","text":"Exemple : consid\u00e9rons le script suivant : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def fonction (): text = \"Bonjour\" return None # Programme principal fonction () print ( text ) Lors de l'interpr\u00e9tation du code, on constate que la variable text n'est pas reconnue dans le corps du script : 1 2 3 4 5 6 7 / usr / bin / python3 .9 / home / galand / PycharmProjects / pythonProject3 / main . py Traceback ( most recent call last ): File \"/home/galand/PycharmProjects/pythonProject3/main.py\" , line 9 , in < module > print ( text ) NameError : name 'text' is not defined Process finished with exit code 1 Cette variable, d\u00e9finie dans le corps de la fonction, ne sera reconnue qu'\u00e0 l'int\u00e9rieur de cette fonction, il s'agit d'une variable locale. D\u00e9finition : Une variable est dite locale lorsqu'elle est cr\u00e9\u00e9e dans une fonction. Elle n'existera et ne sera visible que lors de l'ex\u00e9cution de ladite fonction Variable globale Consid\u00e9rons maintenant le programme suivant : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def fonction (): print ( text ) return None # Programme principal text = \"bonjour\" fonction () Lors de l'interpr\u00e9tation du code, on constate que la variable text est bien visible dans le corps de la fonction. Cette variable, d\u00e9finie dans le corps du script, est une variable globale. Une variable globale peut-elle \u00eatre modifi\u00e9e par une fonction ? Consid\u00e9rons le script suivant. Va-t-il afficher 'Bonjour' ou 'Au revoir' ? 1 2 3 4 5 6 7 8 9 10 # D\u00e9finition de la fonction def fonction (): text = \"Bonjour\" return None # Programme principal text = \"Au revoir\" fonction () print ( text ) Nous avons vu qu'une variable globale est visible \u00e0 l'int\u00e9rieur d'une fonction, cependant on remarque ici que la valeur d'une variable globale ne peut pas \u00eatre modifi\u00e9e par une fonction. D\u00e9finition : Une variable globale lorsqu'elle est d\u00e9finie dans le programme principal. Elles sont accessibles pour toutes les fonctions du programme. Tout ceci peut para\u00eetre bien compliqu\u00e9 au premier abord. Vous comprendrez cependant tr\u00e8s vite qu'il est utile que les variables locales restent confin\u00e9es \u00e0 l'int\u00e9rieur du corps des fonctions. Cela signifie que vous pouvez utiliser n'importe quelle fonction sans vous pr\u00e9occuper le moins du monde du nom des variables utilis\u00e9es. Ces variables ne pourront pas interf\u00e9rer avec celles que vous avez d\u00e9finies dans le corps de votre script. Exercice 9 Rep\u00e9rer dans le programme suivant toutes les variables. Indiquer ensuite si ce sont des variables locales ou globales. 1 2 3 4 5 6 def somme_fonction ( a , b ): x = 5 z = a + b + x return z print ( somme_fonction ( 4 , 6 ))","title":"Variable locale"},{"location":"Premiere/Langage/fonction_python/#le-mot-cle-global","text":"En python, le mot-cl\u00e9 global permet de modifier la variable en dehors de sa port\u00e9e actuelle. Il est utilis\u00e9 pour cr\u00e9er une variable globale et apporter des modifications dans un contexte local (fonction). Les r\u00e8gles pour utiliser le mot-cl\u00e9 global sont les suivantes : lorsqu'une variable est cr\u00e9\u00e9e dans une fonction : elle est locale par d\u00e9faut. lorsqu'une variable est cr\u00e9\u00e9e en dehors de toute fonction, elle est globale par d\u00e9faut. le mot-cl\u00e9 global pour lire et \u00e9crire une variable globale \u00e0 l'int\u00e9rieur d'une fonction. l'utilisation du mot-cl\u00e9 global en dehors d'une fonction n'a aucun effet. Exercice 10 Taper et comparer les deux programmes suivants : 1 2 3 4 5 6 c = 1 # variable global def ajoute (): print ( c ) ajouter () 1 2 3 4 5 6 7 8 c = 0 #variable globale def ajoute (): global c c = c + 2 print ( \"\u00e0 l'int\u00e9rieur de la fonction, c vaut \" , c ) ajouter () print ( \"dans le programme global, c vaut\" , c )","title":"Le mot-cl\u00e9 : global"},{"location":"Premiere/Langage/fonction_python/#les-regles-de-bon-usage","text":"","title":"Les r\u00e8gles de bon usage"},{"location":"Premiere/Langage/fonction_python/#prototyper-la-fonction","text":"Prototyper une fonction (ou une proc\u00e9dure) consiste \u00e0 d\u00e9clarer dans l'ent\u00eate de d\u00e9finition de la fonction le type des param\u00e8tres et le type de la donn\u00e9e retourn\u00e9e. C'est absolument indispensable dans des langages comme le C, mais pas obligatoire en python. C'est malgr\u00e9 tout vivement conseill\u00e9 en python pour la clarification de la fonction au niveau du programmeur, surtout si ce n'est pas lui qui a \u00e9crit la fonction. 1 2 3 4 5 6 7 8 9 10 11 12 13 # D\u00e9finition de la fonction def plus_petit ( a : int , b : int ) -> int : if a < b : return a else : return b # Programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Pour une proc\u00e9dure : 1 2 3 4 5 6 7 8 9 # D\u00e9finition de la fonction def bonjour ( nom : str ) -> None : print ( \"Bonjour \" , nom ) return None # Programme principal nom = input ( \"Quel est ton nom ? \" ) bonjour ( nom )","title":"Prototyper la fonction"},{"location":"Premiere/Langage/fonction_python/#documenter","text":"L'ent\u00eate de d\u00e9finition de la fonction peut \u00eatre suivi d'un commentaire, appel\u00e9 docstring, plac\u00e9 entre des guillemets, voir entre des triples guillemets si le commentaire comporte plusieurs lignes. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # D\u00e9finition de la fonction def plus_petit ( a : int , b : int ) -> int : \" fonction qui retourne le plus petit nombre\" if a < b : return a else : return b # Programme principal nb1 = int ( input ( \"Donnez un nombre ?\" )) nb2 = int ( input ( \"Donnez un nombre ?\" )) resultat = plus_petit ( nb1 , nb2 ) print ( \"Le plus petit nombre est : \" , resultat ) Si l'on place la souris sur le nom de la fonction et que l'on effectue un CTRL+I (appel de l'aide), on obtient : Remarque : l'aide indique \u00e9galement les types des arguments a et b attendus par la fonction, si cela a \u00e9t\u00e9 renseign\u00e9 lors du prototypage. Dans la console python on peut \u00e9galement obtenir l'aide en tapant help (nomFonction)","title":"Documenter"},{"location":"Premiere/Langage/fonction_python/#tester","text":"Ce n'est pas parce que le code est correct syntaxiquement que le programme \u00e9crit fonctionnera. En effet, il faut pr\u00e9voir des tests avec des situations o\u00f9 le programme ne fonctionnera pas. Ces tests reposent sur le mot-cl\u00e9 assert , qui va lever une erreur lorsqu'il est suivi d'une expression \u00e9valu\u00e9e \u00e0 False . Exemple : 1 assert type ( a ) == int , 'La fonction attend un entier` Ci-dessus, on v\u00e9rifie que le type de a est un entier et apr\u00e8s la virgule, on place la cha\u00eene de caract\u00e8re qui apparaitra dans la console si le test n'est pas v\u00e9rifi\u00e9 (ici La fonction attend un entier ) Soit, on met tous les tests dans une fonction. En g\u00e9n\u00e9ral, on teste si la fonction produit le r\u00e9sultat attendu dans diff\u00e9rentes situations comme dans l'exemple ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 def maxi ( n1 , n2 ): if n1 < n2 : return n2 else : return n1 def test_maxi (): assert maxi ( 3 , 4 ) == 4 assert maxi ( 5 , 2 ) == 5 assert maxi ( 7 , 7 ) == 7 print ( \"tests ok\" ) Il est aussi possible d'int\u00e9grer les tests \u00e0 la fonction elle-m\u00eame. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 def calcul_imc ( masse : float , taille : float ) -> float : \"\"\" Cette fonction calcule l'IMC d'une personne Pr\u00e9 : l'argument masse est un entier ou flottant compris entre 3.0 et 150.0 l'argument taille est un entier ou un flottant compris entre 0.20 et 2.50 Post : la valeur retourn\u00e9e est un flottant la valeur retourn\u00e9e entre 10.0 et 50.0 \"\"\" assert type ( masse ) == int or type ( masse ) == float , \"l'argument masse doit \u00eatre de type int ou float\" assert type ( taille ) == int or type ( taille ) == float , \"l'argument masse doit \u00eatre de type int ou float\" assert masse > 3 , \"masse trop faible\" assert masse < 150 , \"masse trop importante\" assert taille > 0.30 , \" taille trop faible\" assert taille < 2.50 , \" taille trop importante\" imc = masse / taille ** 2 assert 10 < imc < 50 , \"valeur d'IMC non plausible\" return im","title":"Tester"},{"location":"Premiere/Langage/fonction_python/#exercices","text":"Exercice 11 \u00c9crire une fonction nomm\u00e9e est_pair qui prend en argument un nombre entier strictement positif et retourne True si ce nombre est pair, False sinon. Exercice 12 \u00c9crire une fonction nomm\u00e9e divisible qui prend en argument deux nombres entiers et retourne True si le plus grand des 2 nombres est divisible par le plus petit, False sinon. Exercice 13 \u00c9crire une fonction nomm\u00e9e nb_caract qui prend en premier argument une cha\u00eene de caract\u00e8res, en deuxi\u00e8me argument un caract\u00e8re et retourne le nombre de fois que le caract\u00e8re appara\u00eet dans la cha\u00eene. Le second argument est facultatif. S'il n'est pas indiqu\u00e9, il sera consid\u00e9r\u00e9 par la fonction comme un espace. Si le caract\u00e8re n'est pas pr\u00e9sent dans la cha\u00eene, la fonction retourne 0. Exercice 14 \u00c9crire une fonction nomm\u00e9e inverse qui prend en argument une cha\u00eene de caract\u00e8res et retourne la cha\u00eene de caract\u00e8res invers\u00e9e.","title":"Exercices"},{"location":"Premiere/Langage/tuples_listes/","text":"Tuples et listes avec Python # Introduction # Il est possible de \"stocker\" plusieurs grandeurs dans une m\u00eame structure, ce type de structure est appel\u00e9 une s\u00e9quence : ensemble fini et ordonn\u00e9 d'\u00e9l\u00e9ments indic\u00e9s de \\(0\\) \u00e0 \\(n-1\\) (si la s\u00e9quence comporte \\(n\\) \u00e9l\u00e9ments). Rappel : nous avons vu dans les chapitres pr\u00e9c\u00e9dents qu'il est possible d'acc\u00e9der \u00e0 n'importe quel caract\u00e8re d'une cha\u00eene de caract\u00e8res \u00e0 l'aide de son indice de position (le premier caract\u00e8re \u00e9tant index\u00e9 0) : 1 2 3 chaine = \"num\u00e9rique\" print ( \"le 1er caract\u00e8re est \" , chaine [ 0 ]) print ( \"le 5eme caract\u00e8re est \" , chaine [ 4 ]) Nous avons vu \u00e9galement qu'il est possible de balayer l'ensemble des caract\u00e8res de la cha\u00eene de caract\u00e8res : 1 2 3 chaine = \"num\u00e9rique\" for i in range ( len ( chaine )) : print ( chaine [ i ], end = \".\" ) Une cha\u00eene de caract\u00e8re est donc bien un type de structure finie et ordonn\u00e9e d'\u00e9l\u00e9ments index\u00e9s de 0 \u00e0 len(chaine)-1 , c'est \u00e0 dire une s\u00e9quence. Il existe d'autres types de s\u00e9quences que nous allons d\u00e9couvrir ici, notamment les n-uplets (encore appel\u00e9s tuples) et les listes. Les tuples # D\u00e9finition # Un tuple est une collection d\u2019\u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules et g\u00e9n\u00e9ralement entour\u00e9 de parenth\u00e8ses m\u00eame si ce n\u2019est pas une obligation. Cela permet toutefois d\u2019am\u00e9liorer la lisibilit\u00e9 du code. Le tuple est une s\u00e9quence immuable (une fois d\u00e9clar\u00e9, le tuple ne peut plus \u00eatre modifi\u00e9) d\u2019objets indic\u00e9s qui peuvent \u00eatre de tout type : entiers, flottants, cha\u00eenes de caract\u00e8res\u2026 1 2 tup = ( 4 , 6 ) print ( \"tuple = \" , tup ) Afficher un \u00e9l\u00e9ment d'un tuple # Pour afficher un \u00e9l\u00e9ment, il faut s'aider de son indice \u00e9l\u00e9ment.Comme pour les chaines de caract\u00e8res, pour un tuple de longueur \\(n\\) , le premier \u00e9l\u00e9ment porte l'indice 0 et le dernier indice porte l'indice $n-1. Exemple : pour afficher le deuxi\u00e8me \u00e9l\u00e9ment, la commande est la suivante : 1 2 tup = ( 4 , 6 ) print ( tup [ 0 ]) Parcourir un tuple # Comme pour une chaine de caract\u00e8res, il est possible de parcourir directement les \u00e9l\u00e9ments du tuple \u00e0 l'aide d'une boucle for : 1 2 3 tup = ( 4 , 6 ) for i in tup : print ( \"i prend la valeur : \" , i ) Ou bien, Il est possible de parcourir les \u00e9l\u00e9ments d'un tuple \u00e0 l'aide des indices. De plus, comme avec une chaine de caract\u00e8res, la fonction len() prenant un tuple comme argument renvoie le nombre d'\u00e9l\u00e9ments (longueur) du tuple. 1 2 3 tup = ( 4 , 6 ) for i in range ( len ( tup )): print ( \"i prend la valeur : \" , i , \" et tup[i] la valeur :\" , tup [ i ]) Autre possibilit\u00e9 : 1 2 3 4 5 tup = ( \"mon age est \" , 18 , \"ans\" ) a , b , c = tup print ( \"a = \" , a ) print ( \"b = \" , b ) print ( \"c = \" , c ) Immuabilit\u00e9 d'un tuple # Essayons de modifier un tuple pr\u00e9d\u00e9fini : 1 2 3 tup = ( \"mon age est \" , 18 , \"ans\" ) tup [ 1 ] = 19 print ( \"tuple \" , tup ) On constate que python refuse effectivement la modification d'un \u00e9l\u00e9ment du tuple : 1 2 3 4 >>> # script executed Traceback ( most recent call last ): File \"<input>\" , line 2 , in < module > TypeError : 'tuple' object does not support item assignment Quel peut \u00eatre l'int\u00e9r\u00eat d'un tuple ? # Nous souhaitons \u00e9crire une fonction qui prend en argument deux nombres entiers et nous renvoie le quotient et le reste de la division euclidienne du premier nombre par le second. Or nous avons vu qu'une fonction ne retourne qu'un seul \u00e9l\u00e9ment ! Il est possible de solutionner ce probl\u00e8me en demandant \u00e0 la fonction de renvoyer le r\u00e9sultat sous forme d'un tuple (quotient, reste). 1 2 3 4 5 6 7 8 9 def division_euclidienne ( a : int , b : int ) -> tuple : tup = ( a // b , a % b ) return tup x = 100 y = 9 quotient , reste = division_euclidienne ( x , y ) print ( x , \"que divise \" , y , \" donne \" , quotient , \"et il reste \" , reste ) Les listes # D\u00e9finition # Tout comme un tuple, une liste est une collection d\u2019informations qui peuvent \u00eatre de m\u00eame type ou de type diff\u00e9rent. Les \u00e9l\u00e9ments de la liste sont s\u00e9par\u00e9s par des virgules et plac\u00e9s entre des crochets. La grande diff\u00e9rence entre une liste et un tuple, c'est que la liste est modifiable. Cr\u00e9ation de listes par affectation : 1 2 3 4 5 6 7 8 9 10 11 12 list_vide = [] list_int = [ - 12 , 6 , - 9 , 32 ] list_float = [ 3e8 , 1.6e-19 , 37.2 ] list_str = [ \"janvier\" , \"f\u00e9vrier\" , \"mars\" ] 2. list_mixte = [ \"Eric\" , 1.75 , 70e-3 , [ 9 , 7 , 2 ], True ] # pour afficher les diff\u00e9rents \u00e9l\u00e9ments de la liste print ( list_mixte ) # pour afficher le type de la liste print ( type ( list_mixte )) # pour afficher la longueur (nombre d'\u00e9l\u00e9ments) de la liste print ( len ( list_str )) Affichage des divers \u00e9l\u00e9ments de la liste # Comme pour les tuples, chaque \u00e9l\u00e9ment est rep\u00e9r\u00e9 dans la liste par un indice. L\u00e0 aussi, l'indexation commence \u00e0 0 et non pas \u00e0 1. 1 2 list_mois = [ \"janvier\" , \"f\u00e9vrier\" , \"mars\" , \"avril\" , \"mai\" , \"juin\" ] print ( \"1er mois =\" , list_mois [ 0 ]) Il est donc possible d'afficher un par un l'ensemble des \u00e9l\u00e9ments d'une liste gr\u00e2ce \u00e0 leur indice \u00e0 l'aide d'une boucle for : 1 2 3 4 list_mois = [ \"janvier\" , \"f\u00e9vrier\" , \"mars\" , \"avril\" , \"mai\" , \"juin\" ] numero = [ \"1er\" , \"2eme\" , \"3eme\" , \"4eme\" , \"5eme\" , \"6eme\" ] for i in range ( len ( list_mois )) : print ( \"le =\" , numero [ i ], \" mois de l'ann\u00e9e, index\u00e9 \" , i , \" est : \" , list_mois [ i ]) Il est possible de balayer directement les \u00e9l\u00e9ments d'une liste (comme pour les chaines de caract\u00e8res): 1 2 3 list_mois = [ \"janvier\" , \"f\u00e9vrier\" , \"mars\" , \"avril\" , \"mai\" , \"juin\" ] for i in list_mois : print ( i ) Ajout d'\u00e9l\u00e9ments dans une liste # L'op\u00e9rateur + # Une autre m\u00e9thode consiste \u00e0 concat\u00e9ner notre liste existante avec une autre liste. L'int\u00e9r\u00eat est que plusieurs \u00e9l\u00e9ments peuvent \u00eatre rajout\u00e9s en m\u00eame temps : 1 list_mois = list_mois + [ \"juiller \" , \"ao\u00fbt\" ] Attention \u00e0 l\u2019ordre dans lequel les chaines sont concat\u00e9n\u00e9es. Dans l'exemple qui suit le mois d'octobre sera rajout\u00e9 en d\u00e9but de liste et non en fin de liste : 1 list_mois = [ \"octobre\" ] + list_mois La m\u00e9thode append() # Pour rajouter un \u00e9l\u00e9ment dans une liste, par exemple septembre \u00e0 notre liste liste_mois , il est possible d\u2019utiliser la m\u00e9thode append() (to append signifie \u00ab ajouter \u00bb). L'\u00e9l\u00e9ment est ajout\u00e9 en fin de liste. La m\u00e9thode append() ne permet d'ajouter qu'un seul \u00e9l\u00e9ment \u00e0 la fois . 1 list_mois . append ( \"septembre\" ) La m\u00e9thode extend() # Il est \u00e9galement possible d'utiliser la m\u00e9thode extend() qui permet de concat\u00e9ner non pas un seul \u00e9l\u00e9ment mais une seconde liste. 1 lst_mois . extend ([ \"novembre\" , \"d\u00e9cembre\" ]) Test d'appartenance # On peut tester si un \u00e9l\u00e9ment se trouve dans une liste gr\u00e2ce \u00e0 l'instruction in : 1 2 3 list_mois = [ \"janvier\" , \"f\u00e9vrier\" , \"mars\" , \"avril\" , \"mai\" , \"juin\" ] if \"Janvier\" in list_mois : print ( \"Ok\" ) Suppression d'\u00e9l\u00e9ments dans une liste # Pour supprimer un \u00e9l\u00e9ment dans une liste, il est possible d'utiliser les trois suivantes. La commande del # Pour supprimer un \u00e9l\u00e9ment dans une liste, par exemple l'\u00e9l\u00e9ment de rang i , il est possible d\u2019utiliser la commande del (del signifie \u00ab delete \u00bb). 1 del lst_mois [ 0 ] # supprime le 1er \u00e9l\u00e9ment La m\u00e9thode remove() # Il est possible de supprimer un \u00e9l\u00e9ment dans un tableau \u00e0 partir non pas de son indice, mais de sa valeur. La m\u00e9thode remove() supprime uniquement la premi\u00e8re occurrence trouv\u00e9e. 1 2 3 lst = [ 2 , 5 , 3 , 8 , 5 , 5 ] lst . remove ( 5 ) print ( lst ) Si l'\u00e9l\u00e9ment n'est pas trouv\u00e9, un message d'erreur est retourn\u00e9 et le programme s'arr\u00eate, donc bien s'assurer auparavant que l'\u00e9l\u00e9ment \u00e0 supprimer est pr\u00e9sent dans la liste. 1 2 3 lst = [ 2 , 5 , 3 , 8 , 5 , 5 ] lst . remove ( 4 ) print ( lst ) Nous donne : 1 2 3 4 >>> # script executed Traceback ( most recent call last ): File \"<input>\" , line 2 , in < module > ValueError : lst . remove ( x ): x not in list On peut r\u00e9soudre le probl\u00e8me en utilisant la fonction in de la mani\u00e8re suivante : 1 2 3 4 lst = [ 2 , 5 , 3 , 8 , 5 , 5 ] while 5 in lst : # la fonction in teste l'appartenance d'un \u00e9l\u00e9ment \u00e0 une liste lst . remove ( 5 ) print ( list ) La m\u00e9thode pop() # La m\u00e9thode pop() utilis\u00e9e sans argument retire le dernier \u00e9l\u00e9ment de la liste. Exemple : 1 2 3 lst = [ 2 , 5 , 3 , 8 , 5 , 5 ] lst . pop () print ( lst ) # affiche [2, 5, 3, 8, 5] Quand la m\u00e9thode pop() poss\u00e8de un argument, celui-ci d\u00e9signe l'indice de l'\u00e9l\u00e9ment \u00e0 supprimer. 1 2 3 lst = [ 2 , 5 , 3 , 8 , 5 , 5 ] lst . pop ( 0 ) print ( lst ) # affiche [5, 3, 8, 5, 5] Remarque : si l'argument donn\u00e9 \u00e0 la m\u00e9thode pop() correspond \u00e0 un indice qui d\u00e9passe la longueur de la liste. Il se produit une erreur. Construction d'une liste par compr\u00e9hension # Les compr\u00e9hensions de listes fournissent un moyen de construire des listes de mani\u00e8re tr\u00e8s concise. Une compr\u00e9hension de liste consiste \u00e0 placer entre crochets une expression suivie par une boucle for (ou plusieurs boucles imbriqu\u00e9es) et \u00e9ventuellement un test conditionnel pour filtrer. Exemple 1 : pour r\u00e9aliser une liste contenant le carr\u00e9 des nombres de 1 \u00e0 10 : Classique Compr\u00e9hension 1 2 3 4 list_carres = [] for i in range ( 1 , 11 ) : list_carres . append ( i ** 2 ) print ( list_carres ) 1 2 list_carres = [ i ** 2 for i in range ( 1 , 11 )] print ( list_carres ) Exemple 2 : pour filtrer la liste pr\u00e9c\u00e9dente en ne prenant que le carr\u00e9 des nombres paires. Classique Compr\u00e9hension 1 2 3 4 5 list_carres = [] for i in range ( 1 , 11 ) : if i % 2 == 0 : list_carres . append ( i ** 2 ) print ( list_carres ) 1 2 list_carres = [ i ** 2 for i in range ( 1 , 11 ) if i % 2 == 0 ] print ( list_carres ) Exemple 3 : cr\u00e9ation de la liste des caract\u00e8res qui se trouvent dans une cha\u00eene de caract\u00e8re, dans l'ordre o\u00f9 ils sont rencontr\u00e9s. Classique Compr\u00e9hension 1 2 3 4 5 mot = \"anticonstitutionnellement\" list = [] for i in mot : list . append ( i ) print ( list ) 1 2 3 mot = \"anticonstitutionnellement\" list = [ i for i in mot ] print ( list ) Exemple 4 : cr\u00e9ation de la liste des voyelles qui se trouvent dans une cha\u00eene de caract\u00e8re (it\u00e9rable) Classique Compr\u00e9hension 1 2 3 4 5 6 7 8 mot = \"anticonstitutionnellement\" voyelles = [ \"a\" , \"e\" , \"i\" , \"o\" , \"u\" , \"y\" ] lst = [] for i in mot : for j in voyelles : if i == j : lst . append ( j ) print ( lst ) 1 2 3 4 mot = \"anticonstitutionnellement\" voyelles = [ \"a\" , \"e\" , \"i\" , \"o\" , \"u\" , \"y\" ] lst = [ i for i in mot for j in voyelles if i == j ] print ( lst ) Des listes de listes pour repr\u00e9senter des matrices # Voici un exemple de liste de listes : 1 2 matrice = [[ 1 , 2 , 3 ],[ 4 , 5 , 6 ], [ 7 , 8 , 9 ]] print ( matrice ) Pour des raisons de lisibilit\u00e9, il est cependant plus commode de la repr\u00e9senter de la mani\u00e8re suivante, sous forme matricielle : 1 2 3 4 matrice = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ]] print ( matrice ) Pour cibler un \u00e9l\u00e9ment de la matrice, on peut utiliser la notation avec des doubles crochets : matrice[ligne][colonne] Attention : les num\u00e9ros de ligne et colonne d\u00e9marrent \u00e0 0. 1 print ( matrice [ 1 ][ 2 ]) # affiche l'\u00e9lement de le 2eme ligne et 3eme colonne Pour affecter \u00e0 cet \u00e9l\u00e9ment la valeur 10 : 1 2 matrice [ 1 ][ 2 ] = 10 print ( matrice ) Pour parcourir l'ensemble des \u00e9l\u00e9ments de la matrice, il faut utiliser 2 boucles for imbriqu\u00e9es : 1 2 3 for i in range ( 3 ) : # 3 = nombre de lignes for j in range ( 3 ) : # 3 = nombre de colonnes print ( matrice [ i ][ j ]) Pour aller plus loin # Trancher des listes (Slices) # On peut d\u00e9couper une partie de la liste : lst[a:b] renvoie la sous-liste des \u00e9l\u00e9ments de rang a \u00e0 b \u2013 1 (l'\u00e9l\u00e9ment de rang b est exclu). lst[:a] renvoie la sous-liste des \u00e9l\u00e9ments de rang 0 \u00e0 a \u2013 1 (l'\u00e9l\u00e9ment de rang a est exclu). lst[a:] renvoie la sous-liste des \u00e9l\u00e9ments de rang a inclus jusqu'au dernier. 1 2 3 4 5 6 7 8 9 list = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] list_centre = list [ 3 : 8 ] print ( list_centre ) list_moitie_gauche = list [: 5 ] print ( list_moitie_gauche ) list_moitie_droite = list [ 5 :] print ( list_moitie_droite ) Des m\u00e9thodes pour inverser et trier des listes # La m\u00e9thode reverse() permet d'inverser une liste et la m\u00e9thode sort() permet de trier la liste : 1 2 3 4 5 list = [ \"H\" , \"E\" , \"L\" , \"L\" , \"O\" ] list . reverse () print ( list ) list . sort () print ( list ) Documentation en ligne python # https://docs.python.org/fr/3/tutorial/datastructures.html Exemple de trac\u00e9 d'une courbe en utilisant des listes et la biblioth\u00e8que matplotlib.pyplot # Le programme suivant trace la courbe \\(y=f(x\u00b2)\\) en utilisant la biblioth\u00e8que matplolib.pyplot . Pour cela il est n\u00e9cessaire de remplir une liste des abscisses des points de la courbe nomm\u00e9e x et une liste des ordonn\u00e9es nomm\u00e9e y : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from matplotlib.pyplot import * x = [] y = [] for i in range ( - 10 , 11 ): # le pas est forc\u00e9ment entiers x . append ( i ) y . append ( i ** 2 ) title ( \"y = f(x)\" ) xlabel ( \"x\" ) ylabel ( \"y\" ) plot ( x , y , color = \"red\" , marker = \"+\" , markersize = 5 , linestyle = \"-\" ) grid () show () Exercices # Exercice n\u00b01 : # \u00c9crire un programme Python qui permet de : D\u00e9finir une liste (nomm\u00e9e liste) contenant les nombres : 45, 17, 89, 38, 10 et 74 dans cet ordre ; Afficher la liste obtenue ; Ajouter l'\u00e9l\u00e9ment 12 \u00e0 la liste et afficher la liste ; Afficher l'indice de l'\u00e9l\u00e9ment 10 ; Enlever l'\u00e9l\u00e9ment 38 et afficher la liste obtenue ; Afficher la sous-liste du 2\u00e8me au 3\u00e8me \u00e9l\u00e9ment ; Exercice n\u00b02 : # \u00c9crire un programme qui demande \u00e0 un \u00e9l\u00e8ve le nombre de notes ainsi que les notes elles-m\u00eames. Le programme stockera toutes les notes dans un tableau qu'il affichera. Exercice n\u00b03 : # \u00c9crire une fonction qui prend en argument un tableau et qui retourne la somme des diff\u00e9rents \u00e9l\u00e9ments. Exemple : 1 2 3 lst = [ 3 , 4 , 8 , 9 , 2 , 5 ] somme = tab_somme ( lst ) print ( somme ) # doit afficher 31 Exercice n\u00b04 : # \u00c9crire une fonction genere_tab() qui prend en argument la taille du tableau et qui g\u00e9n\u00e8re un tableau o\u00f9 les nombres vont croissant par pas de 1 \u00e0 partir de 0. Exemple : lst = genere_tab(10) g\u00e9n\u00e8re une liste lst telle que : lst = [0, 1 ,2, 3, 4, 5, 6, 7, 8, 9] Exercice n\u00b05 : # On donne les cha\u00eenes suivantes : 1 2 chaine1 = \"abc\" chaine2 = \"de\" \u00c9crire un programme nous permettant de cr\u00e9er la liste suivante : lst = [ 'ad' , 'ae' , 'bd' , 'be' , 'cd' , 'ce' ] \u00e0 partir de chaine1 et chaine2 Exercice n\u00b06 : # \u00c9crire une fonction occurence() qui prend en argument un tableau et une valeur de type quelconque et retourne le nombre d'occurrences du 2nd argument dans le tableau. Exercice n\u00b07 : # \u00c9crire une fonction extremes() qui prend en argument un tableau d'entiers et renvoie un tuple comportant la valeur minimale, moyenne et maximale du tableau. Exercice n\u00b08 : # \u00c9crire une fonction genere_tab qui prend en argument 2 entiers et retourne un tableau de longueur \u00e9gale au 1er argument et dont chaque \u00e9l\u00e9ment est un nombre entier al\u00e9atoire compris entre 0 et le 2nd argument (inclus)","title":"Tuples et listes en Python"},{"location":"Premiere/Langage/tuples_listes/#tuples-et-listes-avec-python","text":"","title":"Tuples et listes avec Python"},{"location":"Premiere/Langage/tuples_listes/#introduction","text":"Il est possible de \"stocker\" plusieurs grandeurs dans une m\u00eame structure, ce type de structure est appel\u00e9 une s\u00e9quence : ensemble fini et ordonn\u00e9 d'\u00e9l\u00e9ments indic\u00e9s de \\(0\\) \u00e0 \\(n-1\\) (si la s\u00e9quence comporte \\(n\\) \u00e9l\u00e9ments). Rappel : nous avons vu dans les chapitres pr\u00e9c\u00e9dents qu'il est possible d'acc\u00e9der \u00e0 n'importe quel caract\u00e8re d'une cha\u00eene de caract\u00e8res \u00e0 l'aide de son indice de position (le premier caract\u00e8re \u00e9tant index\u00e9 0) : 1 2 3 chaine = \"num\u00e9rique\" print ( \"le 1er caract\u00e8re est \" , chaine [ 0 ]) print ( \"le 5eme caract\u00e8re est \" , chaine [ 4 ]) Nous avons vu \u00e9galement qu'il est possible de balayer l'ensemble des caract\u00e8res de la cha\u00eene de caract\u00e8res : 1 2 3 chaine = \"num\u00e9rique\" for i in range ( len ( chaine )) : print ( chaine [ i ], end = \".\" ) Une cha\u00eene de caract\u00e8re est donc bien un type de structure finie et ordonn\u00e9e d'\u00e9l\u00e9ments index\u00e9s de 0 \u00e0 len(chaine)-1 , c'est \u00e0 dire une s\u00e9quence. Il existe d'autres types de s\u00e9quences que nous allons d\u00e9couvrir ici, notamment les n-uplets (encore appel\u00e9s tuples) et les listes.","title":"Introduction"},{"location":"Premiere/Langage/tuples_listes/#les-tuples","text":"","title":"Les tuples"},{"location":"Premiere/Langage/tuples_listes/#definition","text":"Un tuple est une collection d\u2019\u00e9l\u00e9ments s\u00e9par\u00e9s par des virgules et g\u00e9n\u00e9ralement entour\u00e9 de parenth\u00e8ses m\u00eame si ce n\u2019est pas une obligation. Cela permet toutefois d\u2019am\u00e9liorer la lisibilit\u00e9 du code. Le tuple est une s\u00e9quence immuable (une fois d\u00e9clar\u00e9, le tuple ne peut plus \u00eatre modifi\u00e9) d\u2019objets indic\u00e9s qui peuvent \u00eatre de tout type : entiers, flottants, cha\u00eenes de caract\u00e8res\u2026 1 2 tup = ( 4 , 6 ) print ( \"tuple = \" , tup )","title":"D\u00e9finition"},{"location":"Premiere/Langage/tuples_listes/#afficher-un-element-dun-tuple","text":"Pour afficher un \u00e9l\u00e9ment, il faut s'aider de son indice \u00e9l\u00e9ment.Comme pour les chaines de caract\u00e8res, pour un tuple de longueur \\(n\\) , le premier \u00e9l\u00e9ment porte l'indice 0 et le dernier indice porte l'indice $n-1. Exemple : pour afficher le deuxi\u00e8me \u00e9l\u00e9ment, la commande est la suivante : 1 2 tup = ( 4 , 6 ) print ( tup [ 0 ])","title":"Afficher un \u00e9l\u00e9ment d'un tuple"},{"location":"Premiere/Langage/tuples_listes/#parcourir-un-tuple","text":"Comme pour une chaine de caract\u00e8res, il est possible de parcourir directement les \u00e9l\u00e9ments du tuple \u00e0 l'aide d'une boucle for : 1 2 3 tup = ( 4 , 6 ) for i in tup : print ( \"i prend la valeur : \" , i ) Ou bien, Il est possible de parcourir les \u00e9l\u00e9ments d'un tuple \u00e0 l'aide des indices. De plus, comme avec une chaine de caract\u00e8res, la fonction len() prenant un tuple comme argument renvoie le nombre d'\u00e9l\u00e9ments (longueur) du tuple. 1 2 3 tup = ( 4 , 6 ) for i in range ( len ( tup )): print ( \"i prend la valeur : \" , i , \" et tup[i] la valeur :\" , tup [ i ]) Autre possibilit\u00e9 : 1 2 3 4 5 tup = ( \"mon age est \" , 18 , \"ans\" ) a , b , c = tup print ( \"a = \" , a ) print ( \"b = \" , b ) print ( \"c = \" , c )","title":"Parcourir un tuple"},{"location":"Premiere/Langage/tuples_listes/#immuabilite-dun-tuple","text":"Essayons de modifier un tuple pr\u00e9d\u00e9fini : 1 2 3 tup = ( \"mon age est \" , 18 , \"ans\" ) tup [ 1 ] = 19 print ( \"tuple \" , tup ) On constate que python refuse effectivement la modification d'un \u00e9l\u00e9ment du tuple : 1 2 3 4 >>> # script executed Traceback ( most recent call last ): File \"<input>\" , line 2 , in < module > TypeError : 'tuple' object does not support item assignment","title":"Immuabilit\u00e9 d'un tuple"},{"location":"Premiere/Langage/tuples_listes/#quel-peut-etre-linteret-dun-tuple","text":"Nous souhaitons \u00e9crire une fonction qui prend en argument deux nombres entiers et nous renvoie le quotient et le reste de la division euclidienne du premier nombre par le second. Or nous avons vu qu'une fonction ne retourne qu'un seul \u00e9l\u00e9ment ! Il est possible de solutionner ce probl\u00e8me en demandant \u00e0 la fonction de renvoyer le r\u00e9sultat sous forme d'un tuple (quotient, reste). 1 2 3 4 5 6 7 8 9 def division_euclidienne ( a : int , b : int ) -> tuple : tup = ( a // b , a % b ) return tup x = 100 y = 9 quotient , reste = division_euclidienne ( x , y ) print ( x , \"que divise \" , y , \" donne \" , quotient , \"et il reste \" , reste )","title":"Quel peut \u00eatre l'int\u00e9r\u00eat d'un tuple ?"},{"location":"Premiere/Langage/tuples_listes/#les-listes","text":"","title":"Les listes"},{"location":"Premiere/Langage/tuples_listes/#definition_1","text":"Tout comme un tuple, une liste est une collection d\u2019informations qui peuvent \u00eatre de m\u00eame type ou de type diff\u00e9rent. Les \u00e9l\u00e9ments de la liste sont s\u00e9par\u00e9s par des virgules et plac\u00e9s entre des crochets. La grande diff\u00e9rence entre une liste et un tuple, c'est que la liste est modifiable. Cr\u00e9ation de listes par affectation : 1 2 3 4 5 6 7 8 9 10 11 12 list_vide = [] list_int = [ - 12 , 6 , - 9 , 32 ] list_float = [ 3e8 , 1.6e-19 , 37.2 ] list_str = [ \"janvier\" , \"f\u00e9vrier\" , \"mars\" ] 2. list_mixte = [ \"Eric\" , 1.75 , 70e-3 , [ 9 , 7 , 2 ], True ] # pour afficher les diff\u00e9rents \u00e9l\u00e9ments de la liste print ( list_mixte ) # pour afficher le type de la liste print ( type ( list_mixte )) # pour afficher la longueur (nombre d'\u00e9l\u00e9ments) de la liste print ( len ( list_str ))","title":"D\u00e9finition"},{"location":"Premiere/Langage/tuples_listes/#affichage-des-divers-elements-de-la-liste","text":"Comme pour les tuples, chaque \u00e9l\u00e9ment est rep\u00e9r\u00e9 dans la liste par un indice. L\u00e0 aussi, l'indexation commence \u00e0 0 et non pas \u00e0 1. 1 2 list_mois = [ \"janvier\" , \"f\u00e9vrier\" , \"mars\" , \"avril\" , \"mai\" , \"juin\" ] print ( \"1er mois =\" , list_mois [ 0 ]) Il est donc possible d'afficher un par un l'ensemble des \u00e9l\u00e9ments d'une liste gr\u00e2ce \u00e0 leur indice \u00e0 l'aide d'une boucle for : 1 2 3 4 list_mois = [ \"janvier\" , \"f\u00e9vrier\" , \"mars\" , \"avril\" , \"mai\" , \"juin\" ] numero = [ \"1er\" , \"2eme\" , \"3eme\" , \"4eme\" , \"5eme\" , \"6eme\" ] for i in range ( len ( list_mois )) : print ( \"le =\" , numero [ i ], \" mois de l'ann\u00e9e, index\u00e9 \" , i , \" est : \" , list_mois [ i ]) Il est possible de balayer directement les \u00e9l\u00e9ments d'une liste (comme pour les chaines de caract\u00e8res): 1 2 3 list_mois = [ \"janvier\" , \"f\u00e9vrier\" , \"mars\" , \"avril\" , \"mai\" , \"juin\" ] for i in list_mois : print ( i )","title":"Affichage des divers \u00e9l\u00e9ments de la liste"},{"location":"Premiere/Langage/tuples_listes/#ajout-delements-dans-une-liste","text":"","title":"Ajout d'\u00e9l\u00e9ments dans une liste"},{"location":"Premiere/Langage/tuples_listes/#loperateur","text":"Une autre m\u00e9thode consiste \u00e0 concat\u00e9ner notre liste existante avec une autre liste. L'int\u00e9r\u00eat est que plusieurs \u00e9l\u00e9ments peuvent \u00eatre rajout\u00e9s en m\u00eame temps : 1 list_mois = list_mois + [ \"juiller \" , \"ao\u00fbt\" ] Attention \u00e0 l\u2019ordre dans lequel les chaines sont concat\u00e9n\u00e9es. Dans l'exemple qui suit le mois d'octobre sera rajout\u00e9 en d\u00e9but de liste et non en fin de liste : 1 list_mois = [ \"octobre\" ] + list_mois","title":"L'op\u00e9rateur +"},{"location":"Premiere/Langage/tuples_listes/#la-methode-append","text":"Pour rajouter un \u00e9l\u00e9ment dans une liste, par exemple septembre \u00e0 notre liste liste_mois , il est possible d\u2019utiliser la m\u00e9thode append() (to append signifie \u00ab ajouter \u00bb). L'\u00e9l\u00e9ment est ajout\u00e9 en fin de liste. La m\u00e9thode append() ne permet d'ajouter qu'un seul \u00e9l\u00e9ment \u00e0 la fois . 1 list_mois . append ( \"septembre\" )","title":"La m\u00e9thode append()"},{"location":"Premiere/Langage/tuples_listes/#la-methode-extend","text":"Il est \u00e9galement possible d'utiliser la m\u00e9thode extend() qui permet de concat\u00e9ner non pas un seul \u00e9l\u00e9ment mais une seconde liste. 1 lst_mois . extend ([ \"novembre\" , \"d\u00e9cembre\" ])","title":"La m\u00e9thode extend()"},{"location":"Premiere/Langage/tuples_listes/#test-dappartenance","text":"On peut tester si un \u00e9l\u00e9ment se trouve dans une liste gr\u00e2ce \u00e0 l'instruction in : 1 2 3 list_mois = [ \"janvier\" , \"f\u00e9vrier\" , \"mars\" , \"avril\" , \"mai\" , \"juin\" ] if \"Janvier\" in list_mois : print ( \"Ok\" )","title":"Test d'appartenance"},{"location":"Premiere/Langage/tuples_listes/#suppression-delements-dans-une-liste","text":"Pour supprimer un \u00e9l\u00e9ment dans une liste, il est possible d'utiliser les trois suivantes.","title":"Suppression d'\u00e9l\u00e9ments dans une liste"},{"location":"Premiere/Langage/tuples_listes/#la-commande-del","text":"Pour supprimer un \u00e9l\u00e9ment dans une liste, par exemple l'\u00e9l\u00e9ment de rang i , il est possible d\u2019utiliser la commande del (del signifie \u00ab delete \u00bb). 1 del lst_mois [ 0 ] # supprime le 1er \u00e9l\u00e9ment","title":"La commande del"},{"location":"Premiere/Langage/tuples_listes/#la-methode-remove","text":"Il est possible de supprimer un \u00e9l\u00e9ment dans un tableau \u00e0 partir non pas de son indice, mais de sa valeur. La m\u00e9thode remove() supprime uniquement la premi\u00e8re occurrence trouv\u00e9e. 1 2 3 lst = [ 2 , 5 , 3 , 8 , 5 , 5 ] lst . remove ( 5 ) print ( lst ) Si l'\u00e9l\u00e9ment n'est pas trouv\u00e9, un message d'erreur est retourn\u00e9 et le programme s'arr\u00eate, donc bien s'assurer auparavant que l'\u00e9l\u00e9ment \u00e0 supprimer est pr\u00e9sent dans la liste. 1 2 3 lst = [ 2 , 5 , 3 , 8 , 5 , 5 ] lst . remove ( 4 ) print ( lst ) Nous donne : 1 2 3 4 >>> # script executed Traceback ( most recent call last ): File \"<input>\" , line 2 , in < module > ValueError : lst . remove ( x ): x not in list On peut r\u00e9soudre le probl\u00e8me en utilisant la fonction in de la mani\u00e8re suivante : 1 2 3 4 lst = [ 2 , 5 , 3 , 8 , 5 , 5 ] while 5 in lst : # la fonction in teste l'appartenance d'un \u00e9l\u00e9ment \u00e0 une liste lst . remove ( 5 ) print ( list )","title":"La m\u00e9thode remove()"},{"location":"Premiere/Langage/tuples_listes/#la-methode-pop","text":"La m\u00e9thode pop() utilis\u00e9e sans argument retire le dernier \u00e9l\u00e9ment de la liste. Exemple : 1 2 3 lst = [ 2 , 5 , 3 , 8 , 5 , 5 ] lst . pop () print ( lst ) # affiche [2, 5, 3, 8, 5] Quand la m\u00e9thode pop() poss\u00e8de un argument, celui-ci d\u00e9signe l'indice de l'\u00e9l\u00e9ment \u00e0 supprimer. 1 2 3 lst = [ 2 , 5 , 3 , 8 , 5 , 5 ] lst . pop ( 0 ) print ( lst ) # affiche [5, 3, 8, 5, 5] Remarque : si l'argument donn\u00e9 \u00e0 la m\u00e9thode pop() correspond \u00e0 un indice qui d\u00e9passe la longueur de la liste. Il se produit une erreur.","title":"La m\u00e9thode pop()"},{"location":"Premiere/Langage/tuples_listes/#construction-dune-liste-par-comprehension","text":"Les compr\u00e9hensions de listes fournissent un moyen de construire des listes de mani\u00e8re tr\u00e8s concise. Une compr\u00e9hension de liste consiste \u00e0 placer entre crochets une expression suivie par une boucle for (ou plusieurs boucles imbriqu\u00e9es) et \u00e9ventuellement un test conditionnel pour filtrer. Exemple 1 : pour r\u00e9aliser une liste contenant le carr\u00e9 des nombres de 1 \u00e0 10 : Classique Compr\u00e9hension 1 2 3 4 list_carres = [] for i in range ( 1 , 11 ) : list_carres . append ( i ** 2 ) print ( list_carres ) 1 2 list_carres = [ i ** 2 for i in range ( 1 , 11 )] print ( list_carres ) Exemple 2 : pour filtrer la liste pr\u00e9c\u00e9dente en ne prenant que le carr\u00e9 des nombres paires. Classique Compr\u00e9hension 1 2 3 4 5 list_carres = [] for i in range ( 1 , 11 ) : if i % 2 == 0 : list_carres . append ( i ** 2 ) print ( list_carres ) 1 2 list_carres = [ i ** 2 for i in range ( 1 , 11 ) if i % 2 == 0 ] print ( list_carres ) Exemple 3 : cr\u00e9ation de la liste des caract\u00e8res qui se trouvent dans une cha\u00eene de caract\u00e8re, dans l'ordre o\u00f9 ils sont rencontr\u00e9s. Classique Compr\u00e9hension 1 2 3 4 5 mot = \"anticonstitutionnellement\" list = [] for i in mot : list . append ( i ) print ( list ) 1 2 3 mot = \"anticonstitutionnellement\" list = [ i for i in mot ] print ( list ) Exemple 4 : cr\u00e9ation de la liste des voyelles qui se trouvent dans une cha\u00eene de caract\u00e8re (it\u00e9rable) Classique Compr\u00e9hension 1 2 3 4 5 6 7 8 mot = \"anticonstitutionnellement\" voyelles = [ \"a\" , \"e\" , \"i\" , \"o\" , \"u\" , \"y\" ] lst = [] for i in mot : for j in voyelles : if i == j : lst . append ( j ) print ( lst ) 1 2 3 4 mot = \"anticonstitutionnellement\" voyelles = [ \"a\" , \"e\" , \"i\" , \"o\" , \"u\" , \"y\" ] lst = [ i for i in mot for j in voyelles if i == j ] print ( lst )","title":"Construction d'une liste par compr\u00e9hension"},{"location":"Premiere/Langage/tuples_listes/#des-listes-de-listes-pour-representer-des-matrices","text":"Voici un exemple de liste de listes : 1 2 matrice = [[ 1 , 2 , 3 ],[ 4 , 5 , 6 ], [ 7 , 8 , 9 ]] print ( matrice ) Pour des raisons de lisibilit\u00e9, il est cependant plus commode de la repr\u00e9senter de la mani\u00e8re suivante, sous forme matricielle : 1 2 3 4 matrice = [[ 1 , 2 , 3 ], [ 4 , 5 , 6 ], [ 7 , 8 , 9 ]] print ( matrice ) Pour cibler un \u00e9l\u00e9ment de la matrice, on peut utiliser la notation avec des doubles crochets : matrice[ligne][colonne] Attention : les num\u00e9ros de ligne et colonne d\u00e9marrent \u00e0 0. 1 print ( matrice [ 1 ][ 2 ]) # affiche l'\u00e9lement de le 2eme ligne et 3eme colonne Pour affecter \u00e0 cet \u00e9l\u00e9ment la valeur 10 : 1 2 matrice [ 1 ][ 2 ] = 10 print ( matrice ) Pour parcourir l'ensemble des \u00e9l\u00e9ments de la matrice, il faut utiliser 2 boucles for imbriqu\u00e9es : 1 2 3 for i in range ( 3 ) : # 3 = nombre de lignes for j in range ( 3 ) : # 3 = nombre de colonnes print ( matrice [ i ][ j ])","title":"Des listes de listes pour repr\u00e9senter des matrices"},{"location":"Premiere/Langage/tuples_listes/#pour-aller-plus-loin","text":"","title":"Pour aller plus loin"},{"location":"Premiere/Langage/tuples_listes/#trancher-des-listes-slices","text":"On peut d\u00e9couper une partie de la liste : lst[a:b] renvoie la sous-liste des \u00e9l\u00e9ments de rang a \u00e0 b \u2013 1 (l'\u00e9l\u00e9ment de rang b est exclu). lst[:a] renvoie la sous-liste des \u00e9l\u00e9ments de rang 0 \u00e0 a \u2013 1 (l'\u00e9l\u00e9ment de rang a est exclu). lst[a:] renvoie la sous-liste des \u00e9l\u00e9ments de rang a inclus jusqu'au dernier. 1 2 3 4 5 6 7 8 9 list = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 ] list_centre = list [ 3 : 8 ] print ( list_centre ) list_moitie_gauche = list [: 5 ] print ( list_moitie_gauche ) list_moitie_droite = list [ 5 :] print ( list_moitie_droite )","title":"Trancher des listes (Slices)"},{"location":"Premiere/Langage/tuples_listes/#des-methodes-pour-inverser-et-trier-des-listes","text":"La m\u00e9thode reverse() permet d'inverser une liste et la m\u00e9thode sort() permet de trier la liste : 1 2 3 4 5 list = [ \"H\" , \"E\" , \"L\" , \"L\" , \"O\" ] list . reverse () print ( list ) list . sort () print ( list )","title":"Des m\u00e9thodes pour inverser et trier des listes"},{"location":"Premiere/Langage/tuples_listes/#documentation-en-ligne-python","text":"https://docs.python.org/fr/3/tutorial/datastructures.html","title":"Documentation en ligne python"},{"location":"Premiere/Langage/tuples_listes/#exemple-de-trace-dune-courbe-en-utilisant-des-listes-et-la-bibliotheque-matplotlibpyplot","text":"Le programme suivant trace la courbe \\(y=f(x\u00b2)\\) en utilisant la biblioth\u00e8que matplolib.pyplot . Pour cela il est n\u00e9cessaire de remplir une liste des abscisses des points de la courbe nomm\u00e9e x et une liste des ordonn\u00e9es nomm\u00e9e y : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from matplotlib.pyplot import * x = [] y = [] for i in range ( - 10 , 11 ): # le pas est forc\u00e9ment entiers x . append ( i ) y . append ( i ** 2 ) title ( \"y = f(x)\" ) xlabel ( \"x\" ) ylabel ( \"y\" ) plot ( x , y , color = \"red\" , marker = \"+\" , markersize = 5 , linestyle = \"-\" ) grid () show ()","title":"Exemple de trac\u00e9 d'une courbe en utilisant des listes et la biblioth\u00e8que matplotlib.pyplot"},{"location":"Premiere/Langage/tuples_listes/#exercices","text":"","title":"Exercices"},{"location":"Premiere/Langage/tuples_listes/#exercice-n1","text":"\u00c9crire un programme Python qui permet de : D\u00e9finir une liste (nomm\u00e9e liste) contenant les nombres : 45, 17, 89, 38, 10 et 74 dans cet ordre ; Afficher la liste obtenue ; Ajouter l'\u00e9l\u00e9ment 12 \u00e0 la liste et afficher la liste ; Afficher l'indice de l'\u00e9l\u00e9ment 10 ; Enlever l'\u00e9l\u00e9ment 38 et afficher la liste obtenue ; Afficher la sous-liste du 2\u00e8me au 3\u00e8me \u00e9l\u00e9ment ;","title":"Exercice n\u00b01 :"},{"location":"Premiere/Langage/tuples_listes/#exercice-n2","text":"\u00c9crire un programme qui demande \u00e0 un \u00e9l\u00e8ve le nombre de notes ainsi que les notes elles-m\u00eames. Le programme stockera toutes les notes dans un tableau qu'il affichera.","title":"Exercice n\u00b02 :"},{"location":"Premiere/Langage/tuples_listes/#exercice-n3","text":"\u00c9crire une fonction qui prend en argument un tableau et qui retourne la somme des diff\u00e9rents \u00e9l\u00e9ments. Exemple : 1 2 3 lst = [ 3 , 4 , 8 , 9 , 2 , 5 ] somme = tab_somme ( lst ) print ( somme ) # doit afficher 31","title":"Exercice n\u00b03 :"},{"location":"Premiere/Langage/tuples_listes/#exercice-n4","text":"\u00c9crire une fonction genere_tab() qui prend en argument la taille du tableau et qui g\u00e9n\u00e8re un tableau o\u00f9 les nombres vont croissant par pas de 1 \u00e0 partir de 0. Exemple : lst = genere_tab(10) g\u00e9n\u00e8re une liste lst telle que : lst = [0, 1 ,2, 3, 4, 5, 6, 7, 8, 9]","title":"Exercice n\u00b04 :"},{"location":"Premiere/Langage/tuples_listes/#exercice-n5","text":"On donne les cha\u00eenes suivantes : 1 2 chaine1 = \"abc\" chaine2 = \"de\" \u00c9crire un programme nous permettant de cr\u00e9er la liste suivante : lst = [ 'ad' , 'ae' , 'bd' , 'be' , 'cd' , 'ce' ] \u00e0 partir de chaine1 et chaine2","title":"Exercice n\u00b05 :"},{"location":"Premiere/Langage/tuples_listes/#exercice-n6","text":"\u00c9crire une fonction occurence() qui prend en argument un tableau et une valeur de type quelconque et retourne le nombre d'occurrences du 2nd argument dans le tableau.","title":"Exercice n\u00b06 :"},{"location":"Premiere/Langage/tuples_listes/#exercice-n7","text":"\u00c9crire une fonction extremes() qui prend en argument un tableau d'entiers et renvoie un tuple comportant la valeur minimale, moyenne et maximale du tableau.","title":"Exercice n\u00b07 :"},{"location":"Premiere/Langage/tuples_listes/#exercice-n8","text":"\u00c9crire une fonction genere_tab qui prend en argument 2 entiers et retourne un tableau de longueur \u00e9gale au 1er argument et dont chaque \u00e9l\u00e9ment est un nombre entier al\u00e9atoire compris entre 0 et le 2nd argument (inclus)","title":"Exercice n\u00b08 :"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/","text":"Commandes Linux # Chemin absolu et relatif # Arborescence Linux # Les diff\u00e9rentes commandes linux utiles pour le bac #","title":"Linux"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#commandes-linux","text":"","title":"Commandes Linux"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#chemin-absolu-et-relatif","text":"","title":"Chemin absolu et relatif"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#arborescence-linux","text":"","title":"Arborescence Linux"},{"location":"Terminale/ArchitectureMaterielle/commande_linux/#les-differentes-commandes-linux-utiles-pour-le-bac","text":"","title":"Les diff\u00e9rentes commandes linux utiles pour le bac"},{"location":"Terminale/ArchitectureMaterielle/processus/","text":"Gestion des processus et ressources # Introduction # Le syst\u00e8me d'exploitation permet : aux applications et programmes de s'ex\u00e9cuter en bonne intelligence sur un ordinateur. la prise en charge de p\u00e9riph\u00e9riques comme le clavier, l'\u00e9cran ; la prise en charge de la m\u00e9moire. L'ex\u00e9cution des programmes est prise en charge par les processus et les p\u00e9riph\u00e9riques identifi\u00e9s comme des ressources dont la disponibilit\u00e9 est g\u00e9r\u00e9e par le syst\u00e8me. Ce chapitre a pour but de pr\u00e9senter ce qu'est un processus et de pr\u00e9senter le m\u00e9canisme d'ordonnancement du syst\u00e8me d'exploitation pour partager l'utilisation du ou des processeurs entre l'ensemble des processus. Programme et processus # Programme : Un programme est comps\u00e9 d'une suite d'instructions. Ces instructions sont g\u00e9n\u00e9ralement stock\u00e9es dans un fichier. L'ex\u00e9cution de ce programme consiste en l'ex\u00e9cution, les unes apr\u00e8s les autres des instructions composant ce programme. Cette ex\u00e9cution est prise en charge par un processus cr\u00e9e par le syst\u00e8me d'exploitation. Celui-ci va : charger les instruction du programme en m\u00e9moire ; \u00e9crire l'adresse m\u00e9moire de la premi\u00e8re instruction dans le compteur de programme (CP). Le cycle d'ex\u00e9cution du processeur permet l'ex\u00e9cution une \u00e0 une des instructions du programme par le microprocesseur. La notion de processus se distingue donc de la notion de programme. Un programme est une description statique des intructions tandis qu'un processus correspnd \u00e0 une ex\u00e9cution effective de ces instructions. Un m\u00eame programme peut \u00eatre ex\u00e9cut\u00e9 plusieurs fois, chaque ex\u00e9cution est prise en charge par un processus diff\u00e9rent. On dit qu'un processus est un instance d'ex\u00e9cution du programme. Un processus est donc un entit\u00e9 qui \u00e9volue dans le temps. Dans un premier temps, il est cr\u00e9e par l'utilisateur (on dit qu'il lance le programme). Le processus est actif, c'est-\u00e0-dire qu'il ex\u00e9cute les intructions qui compose son programme. Le processus op\u00e8re des variables (celles d\u00e9finies dans le programme) et manipule des ressources (telles que des fichiers, des fen\u00eatres, etc...). Ces \u00e9l\u00e9ments constitue le contexte d'ex\u00e9cution du processus. Enfin, un processus peut se terminer . Les ressources pr\u00e9sentes dans son contexte d'ex\u00e9cution sont alors lib\u00e9r\u00e9es (les fen\u00eatres ferm\u00e9es, les variables supprim\u00e9es, etc...). Exemple de processus # Avec windows # Microsoft Windows est architectur\u00e9 en services (processus) fonctionnant en arri\u00e8re-plan. Il est possible d'afficher facilement la liste des processus en cours dans le gestionnaire des t\u00e2ches en appuyant simultan\u00e9ment sur CTRL+SCHIFT+ESC, ou en ex\u00e9cutant directement taskmgr.exe dans la barre de recherche Si vous lancez le gestionnaire de tache pour la premi\u00e8re fois, vous serez peut-\u00eatre amen\u00e9 \u00e0 cliquer sur \"Plus de d\u00e9tails \" en bas \u00e0 Gauche de la fen\u00eatre. Vous verrez alors une fen\u00eatre avec six onglets. Dans l'onglet Processus, vous verrez tous ceux s'ex\u00e9cutant sur votre machine, ainsi que les ressources qu'ils consomment. On distingue trois cat\u00e9gories: Applications ; Processus en arri\u00e8re-plan ; Processus Windows. Par un simple clic droit sur son nom, suivi de fin de t\u00e2che on peut facilement tuer un processus, c'est tr\u00e8s pratique lorsqu'un programme ne r\u00e9pond plus. Dans l'onglet Performance , nous pouvons voir graphiquement les ressources utilis\u00e9. Dans l\u2019onglet Historique des applications , nous pouvons voir les ressources utilis\u00e9es par application. Dans l\u2019onglet D\u00e9marrage , nous pouvons voir toutes les applications qui se lancent au d\u00e9marrage de Windows. Dans l\u2019onglet D\u00e9tails , nous pouvons voir le PID (Processus IDentifier) des processus et leurs statuts. Avec Linux ou un syst\u00e8me UNIX # La commande ps # La commande ps (penser \u00e0 ProcessuS) est utilis\u00e9e pour afficher des informations sur un processus. L\u2019option u permet de pr\u00e9ciser le propri\u00e9taire, l\u2019option l permet d\u2019afficher plus d\u2019attributs (long). Par exemple, pour conna\u00eetre les processus appartenant \u00e0 l\u2019utilisateur : 1 2 3 4 5 6 7 8 9 10 % ps -lu ericgaland UID PID PPID F CPU PRI NI SZ RSS WCHAN S ADDR TTY TIME CMD 502 441 1 4004 0 37 0 33665772 3752 - S 0 ?? 1 :19.89 /usr/sbin/distnoted ag 502 442 1 4004 0 4 0 33730640 4252 - S 0 ?? 0 :23.41 /usr/sbin/cfprefsd age 502 444 1 40004004 0 31 0 33761664 12568 - S 0 ?? 0 :07.38 /usr/libexec/UserEvent 502 447 1 4004 0 4 0 33765408 9420 - S 0 ?? 0 :00.46 /System/Library/Privat 502 449 1 4004 0 4 0 33773364 27668 - S 0 ?? 0 :15.94 /usr/libexec/knowledge 502 451 1 4004 0 4 0 33729300 3500 - S 0 ?? 0 :00.52 /usr/libexec/WiFiVeloc 502 452 1 4004 0 4 0 33767788 12048 - S 0 ?? 0 :05.87 /usr/libexec/lsd 502 453 1 4004 0 31 0 33768668 12676 - S 0 ?? 0 :01.93 /usr/sbin/usernoted La colonne S indique l\u2019\u00e9tat (state) du processus : S pour stopped, R pour Running et Z pour Zombie PID est le processus identifier : un identifiant sous forme d\u2019entier donn\u00e9 par le syst\u00e8me. PPID est le parent processus identifier qui donne l\u2019identifiant du parent qui a engendr\u00e9 le processus CMD est le nom de la commande La commande pstree # \u00c0 noter que la commande pstree permet d'afficher les processus sous forme d'arborescence : La commande kill # Il n\u2019est parfois pas possible de fermer un processus graphique en cliquant par exemple sur la croix pr\u00e9vue pourtant \u00e0 cet effet.On peut utiliser la commande kill si on connait le PID du processus \u00e0 \"tuer\". L'ordonnencement des processus # Diff\u00e9rents types d'ordonnancement # Si on vous donne 4 t\u00e2ches A, B, C et D \u00e0 accomplir, vous pouvez d\u00e9cider : de faire la t\u00e2che prioritaire d'abord ; de faire la t\u00e2che la plus rapide d'abord ; de faire la t\u00e2che la plus longue d'abord ; de les faire dans l'ordre o\u00f9 elles vous ont \u00e9t\u00e9 donn\u00e9es ; de faire \u00e0 tour de r\u00f4le chaque t\u00e2che pendant un temps fixe jusqu'\u00e0 ce qu'elles soient toutes termin\u00e9es; ... Un processeur est confront\u00e9 aux m\u00eames choix : comment d\u00e9terminer quel processus doit \u00eatre trait\u00e9 \u00e0 quel moment ? Le sch\u00e9ma ci-dessous (issu de ce site ) pr\u00e9sente quelques politiques d'ordonnancement : Les \u00e9tats d'un processus # Selon que l'ordonnanceur aura d\u00e9cid\u00e9 de le confier ou non au processeur pour son ex\u00e9cution, un processus peut donc se trouver dans 3 \u00e9tats : Pr\u00eat : il attend qu'arrive le moment de son ex\u00e9cution. \u00c9lu : il est en cours d'ex\u00e9cution par le processeur. Bloqu\u00e9 : pendant son ex\u00e9cution (\u00e9tat \u00c9lu), le processus r\u00e9clame une ressource qui n'est pas imm\u00e9diatement disponible. Son ex\u00e9cution s'interrompt. Lorsque la ressource sera disponible, le processus repassera par l'\u00e9tat Pr\u00eat et attendra \u00e0 nouveau son tour.","title":"processus"},{"location":"Terminale/ArchitectureMaterielle/processus/#gestion-des-processus-et-ressources","text":"","title":"Gestion des processus et ressources"},{"location":"Terminale/ArchitectureMaterielle/processus/#introduction","text":"Le syst\u00e8me d'exploitation permet : aux applications et programmes de s'ex\u00e9cuter en bonne intelligence sur un ordinateur. la prise en charge de p\u00e9riph\u00e9riques comme le clavier, l'\u00e9cran ; la prise en charge de la m\u00e9moire. L'ex\u00e9cution des programmes est prise en charge par les processus et les p\u00e9riph\u00e9riques identifi\u00e9s comme des ressources dont la disponibilit\u00e9 est g\u00e9r\u00e9e par le syst\u00e8me. Ce chapitre a pour but de pr\u00e9senter ce qu'est un processus et de pr\u00e9senter le m\u00e9canisme d'ordonnancement du syst\u00e8me d'exploitation pour partager l'utilisation du ou des processeurs entre l'ensemble des processus.","title":"Introduction"},{"location":"Terminale/ArchitectureMaterielle/processus/#programme-et-processus","text":"Programme : Un programme est comps\u00e9 d'une suite d'instructions. Ces instructions sont g\u00e9n\u00e9ralement stock\u00e9es dans un fichier. L'ex\u00e9cution de ce programme consiste en l'ex\u00e9cution, les unes apr\u00e8s les autres des instructions composant ce programme. Cette ex\u00e9cution est prise en charge par un processus cr\u00e9e par le syst\u00e8me d'exploitation. Celui-ci va : charger les instruction du programme en m\u00e9moire ; \u00e9crire l'adresse m\u00e9moire de la premi\u00e8re instruction dans le compteur de programme (CP). Le cycle d'ex\u00e9cution du processeur permet l'ex\u00e9cution une \u00e0 une des instructions du programme par le microprocesseur. La notion de processus se distingue donc de la notion de programme. Un programme est une description statique des intructions tandis qu'un processus correspnd \u00e0 une ex\u00e9cution effective de ces instructions. Un m\u00eame programme peut \u00eatre ex\u00e9cut\u00e9 plusieurs fois, chaque ex\u00e9cution est prise en charge par un processus diff\u00e9rent. On dit qu'un processus est un instance d'ex\u00e9cution du programme. Un processus est donc un entit\u00e9 qui \u00e9volue dans le temps. Dans un premier temps, il est cr\u00e9e par l'utilisateur (on dit qu'il lance le programme). Le processus est actif, c'est-\u00e0-dire qu'il ex\u00e9cute les intructions qui compose son programme. Le processus op\u00e8re des variables (celles d\u00e9finies dans le programme) et manipule des ressources (telles que des fichiers, des fen\u00eatres, etc...). Ces \u00e9l\u00e9ments constitue le contexte d'ex\u00e9cution du processus. Enfin, un processus peut se terminer . Les ressources pr\u00e9sentes dans son contexte d'ex\u00e9cution sont alors lib\u00e9r\u00e9es (les fen\u00eatres ferm\u00e9es, les variables supprim\u00e9es, etc...).","title":"Programme et processus"},{"location":"Terminale/ArchitectureMaterielle/processus/#exemple-de-processus","text":"","title":"Exemple de processus"},{"location":"Terminale/ArchitectureMaterielle/processus/#avec-windows","text":"Microsoft Windows est architectur\u00e9 en services (processus) fonctionnant en arri\u00e8re-plan. Il est possible d'afficher facilement la liste des processus en cours dans le gestionnaire des t\u00e2ches en appuyant simultan\u00e9ment sur CTRL+SCHIFT+ESC, ou en ex\u00e9cutant directement taskmgr.exe dans la barre de recherche Si vous lancez le gestionnaire de tache pour la premi\u00e8re fois, vous serez peut-\u00eatre amen\u00e9 \u00e0 cliquer sur \"Plus de d\u00e9tails \" en bas \u00e0 Gauche de la fen\u00eatre. Vous verrez alors une fen\u00eatre avec six onglets. Dans l'onglet Processus, vous verrez tous ceux s'ex\u00e9cutant sur votre machine, ainsi que les ressources qu'ils consomment. On distingue trois cat\u00e9gories: Applications ; Processus en arri\u00e8re-plan ; Processus Windows. Par un simple clic droit sur son nom, suivi de fin de t\u00e2che on peut facilement tuer un processus, c'est tr\u00e8s pratique lorsqu'un programme ne r\u00e9pond plus. Dans l'onglet Performance , nous pouvons voir graphiquement les ressources utilis\u00e9. Dans l\u2019onglet Historique des applications , nous pouvons voir les ressources utilis\u00e9es par application. Dans l\u2019onglet D\u00e9marrage , nous pouvons voir toutes les applications qui se lancent au d\u00e9marrage de Windows. Dans l\u2019onglet D\u00e9tails , nous pouvons voir le PID (Processus IDentifier) des processus et leurs statuts.","title":"Avec windows"},{"location":"Terminale/ArchitectureMaterielle/processus/#avec-linux-ou-un-systeme-unix","text":"","title":"Avec Linux ou un syst\u00e8me UNIX"},{"location":"Terminale/ArchitectureMaterielle/processus/#la-commande-ps","text":"La commande ps (penser \u00e0 ProcessuS) est utilis\u00e9e pour afficher des informations sur un processus. L\u2019option u permet de pr\u00e9ciser le propri\u00e9taire, l\u2019option l permet d\u2019afficher plus d\u2019attributs (long). Par exemple, pour conna\u00eetre les processus appartenant \u00e0 l\u2019utilisateur : 1 2 3 4 5 6 7 8 9 10 % ps -lu ericgaland UID PID PPID F CPU PRI NI SZ RSS WCHAN S ADDR TTY TIME CMD 502 441 1 4004 0 37 0 33665772 3752 - S 0 ?? 1 :19.89 /usr/sbin/distnoted ag 502 442 1 4004 0 4 0 33730640 4252 - S 0 ?? 0 :23.41 /usr/sbin/cfprefsd age 502 444 1 40004004 0 31 0 33761664 12568 - S 0 ?? 0 :07.38 /usr/libexec/UserEvent 502 447 1 4004 0 4 0 33765408 9420 - S 0 ?? 0 :00.46 /System/Library/Privat 502 449 1 4004 0 4 0 33773364 27668 - S 0 ?? 0 :15.94 /usr/libexec/knowledge 502 451 1 4004 0 4 0 33729300 3500 - S 0 ?? 0 :00.52 /usr/libexec/WiFiVeloc 502 452 1 4004 0 4 0 33767788 12048 - S 0 ?? 0 :05.87 /usr/libexec/lsd 502 453 1 4004 0 31 0 33768668 12676 - S 0 ?? 0 :01.93 /usr/sbin/usernoted La colonne S indique l\u2019\u00e9tat (state) du processus : S pour stopped, R pour Running et Z pour Zombie PID est le processus identifier : un identifiant sous forme d\u2019entier donn\u00e9 par le syst\u00e8me. PPID est le parent processus identifier qui donne l\u2019identifiant du parent qui a engendr\u00e9 le processus CMD est le nom de la commande","title":"La commande ps"},{"location":"Terminale/ArchitectureMaterielle/processus/#la-commande-pstree","text":"\u00c0 noter que la commande pstree permet d'afficher les processus sous forme d'arborescence :","title":"La commande pstree"},{"location":"Terminale/ArchitectureMaterielle/processus/#la-commande-kill","text":"Il n\u2019est parfois pas possible de fermer un processus graphique en cliquant par exemple sur la croix pr\u00e9vue pourtant \u00e0 cet effet.On peut utiliser la commande kill si on connait le PID du processus \u00e0 \"tuer\".","title":"La commande kill"},{"location":"Terminale/ArchitectureMaterielle/processus/#lordonnencement-des-processus","text":"","title":"L'ordonnencement des processus"},{"location":"Terminale/ArchitectureMaterielle/processus/#differents-types-dordonnancement","text":"Si on vous donne 4 t\u00e2ches A, B, C et D \u00e0 accomplir, vous pouvez d\u00e9cider : de faire la t\u00e2che prioritaire d'abord ; de faire la t\u00e2che la plus rapide d'abord ; de faire la t\u00e2che la plus longue d'abord ; de les faire dans l'ordre o\u00f9 elles vous ont \u00e9t\u00e9 donn\u00e9es ; de faire \u00e0 tour de r\u00f4le chaque t\u00e2che pendant un temps fixe jusqu'\u00e0 ce qu'elles soient toutes termin\u00e9es; ... Un processeur est confront\u00e9 aux m\u00eames choix : comment d\u00e9terminer quel processus doit \u00eatre trait\u00e9 \u00e0 quel moment ? Le sch\u00e9ma ci-dessous (issu de ce site ) pr\u00e9sente quelques politiques d'ordonnancement :","title":"Diff\u00e9rents types d'ordonnancement"},{"location":"Terminale/ArchitectureMaterielle/processus/#les-etats-dun-processus","text":"Selon que l'ordonnanceur aura d\u00e9cid\u00e9 de le confier ou non au processeur pour son ex\u00e9cution, un processus peut donc se trouver dans 3 \u00e9tats : Pr\u00eat : il attend qu'arrive le moment de son ex\u00e9cution. \u00c9lu : il est en cours d'ex\u00e9cution par le processeur. Bloqu\u00e9 : pendant son ex\u00e9cution (\u00e9tat \u00c9lu), le processus r\u00e9clame une ressource qui n'est pas imm\u00e9diatement disponible. Son ex\u00e9cution s'interrompt. Lorsque la ressource sera disponible, le processus repassera par l'\u00e9tat Pr\u00eat et attendra \u00e0 nouveau son tour.","title":"Les \u00e9tats d'un processus"},{"location":"Terminale/ArchitectureMaterielle/reseau_routage/","text":"Protocoles de routage # Introduction au routage # Dans un r\u00e9seau informatique, les informations \u00e9chang\u00e9es entre les machines doivent suivre un chemin bien d\u00e9fini pour atteindre leur destination. Cette t\u00e2che complexe est assur\u00e9e par un m\u00e9canisme essentiel : le routage. Imaginez un r\u00e9seau comme une immense carte routi\u00e8re o\u00f9 chaque ville repr\u00e9sente un appareil (ordinateur, imprimante, smartphone) et chaque route, une liaison physique ou logique. Lorsqu\u2019un message est envoy\u00e9, il doit emprunter le meilleur chemin pour arriver \u00e0 bon port, m\u00eame si plusieurs itin\u00e9raires sont possibles ou si certaines routes sont bloqu\u00e9es. Le routage est donc le processus permettant \u00e0 ces messages \u2013 appel\u00e9s paquets \u2013 de trouver leur chemin dans ce r\u00e9seau de plus en plus complexe, qu'il s'agisse d'un r\u00e9seau local (LAN) ou de l'immensit\u00e9 d'Internet. Rappels # D\u00e9finition d'un r\u00e9seau informatique : Un r\u00e9seau informatique un ensemble d'\u00e9quipements informatiques reli\u00e9s entre-eux afin d'\u00e9changer des donn\u00e9es. D\u00e9finition d'une adresse IP : L\u2019adressage consiste \u00e0 affecter une adresse unique (num\u00e9ro d\u2019identification) permanente ou provisoire \u00e0 chaque appareil connect\u00e9 \u00e0 un r\u00e9seau informatique. C\u2019est-\u00e0-dire qu\u2019il n\u2019existe pas sur internet deux ordinateurs ayant la m\u00eame adresse IP sur le m\u00eame r\u00e9seau. Il existe des adresses IP de version 4 (sur 32 bits, soit 4 octets) et de version 6 (sur 128 bits, soit 16 octets). Une adresse IPV4 est une adresse not\u00e9e sous forme de 4 nombres sous la forme (A.B.C.D) entiers s\u00e9par\u00e9s par des points (cod\u00e9 sur 32 bits). Exemple : 192.168.0.13 D\u00e9finition d'un masque de sous-r\u00e9seau : Un masque de sous-r\u00e9seau (d\u00e9sign\u00e9 par subnet mask, netmask ou address mask en anglais) est un masque distinguant les bits d'une adresse IPv4 utilis\u00e9s pour identifier le sous-r\u00e9seau de ceux utilis\u00e9s pour identifier l'h\u00f4te. Une forme plus courte est connue sous le nom de \u00ab notation CIDR \u00bb (Classless Inter-Domain Routing). Elle donne le num\u00e9ro du r\u00e9seau suivi par une barre oblique (ou slash, \u00ab / \u00bb) et le nombre de bits \u00e0 1 dans la notation binaire du masque de sous-r\u00e9seau. Le masque 255.255.224.0, \u00e9quivalent en binaire \u00e0 11111111.11111111.11100000.00000000, sera donc repr\u00e9sent\u00e9 par /19 (19 bits \u00e0 la valeur 1, suivis de 13 bits 0). Adresse de sous-r\u00e9seau : L'adresse du sous-r\u00e9seau est obtenue en appliquant l'op\u00e9rateur ET binaire entre l'adresse IP et le masque de sous-r\u00e9seau. L'adresse de l'h\u00f4te \u00e0 l'int\u00e9rieur du sous-r\u00e9seau est quant \u00e0 elle obtenue en appliquant l'op\u00e9rateur ET entre l'adresse IP et le compl\u00e9ment \u00e0 un du masque. D\u00e9finition d'une adresse MAC : Une adresse MAC est \u00e9galement appel\u00e9e adresse mat\u00e9rielle ou adresse Ethernet. C'est un identifiant unique et propre \u00e0 la carte r\u00e9seau de l'ordinateur. Une adresse MAC pr\u00e9sente g\u00e9n\u00e9ralement le format XX-XX-XX-XX-XX-XX, chaque X repr\u00e9sentant un chiffre ou une lettre de A \u00e0 F D\u00e9finition d'un switch : Le switch ou commutateur r\u00e9seau est un boitier multiport servant \u00e0 r\u00e9ceptionner et \u00e0 redistribuer les informations sur le r\u00e9seau. Ce boitier peut \u00eatre constitu\u00e9 de 4 \u00e0 plusieurs centaines de ports. Outre le fait de pouvoir connecter du mat\u00e9riel informatique sur le m\u00eame r\u00e9seau Ethernet (postes de travail, imprimante...), il contribue \u00e9galement \u00e0 la s\u00e9curit\u00e9 du r\u00e9seau et \u00e0 prot\u00e9ger les donn\u00e9es qui y transitent. D\u00e9finition d'un routeur : Un routeur est compos\u00e9 d\u2019un nombre plus ou moins important d\u2019interfaces r\u00e9seau (cartes r\u00e9seau). Les routeurs les plus simples que l\u2019on puisse rencontrer permettent de relier ensemble deux r\u00e9seaux (ils poss\u00e8dent alors 2 interfaces r\u00e9seau), mais il existe des routeurs capables de relier ensemble une dizaine de r\u00e9seaux. N'importe quel ordinateur peut jouer le r\u00f4le de routeur (\u00e0 partir du moment o\u00f9 il poss\u00e8de au moins 2 interfaces r\u00e9seau), mais on rencontre souvent des \"machines\" d\u00e9di\u00e9es (par exemple de marque CISCO) D\u00e9finition d'internet : Internet r\u00e9sulte de l\u2019interconnexion de r\u00e9seaux par des routeurs. Probl\u00e9matique du routage #","title":"Routage"},{"location":"Terminale/ArchitectureMaterielle/reseau_routage/#protocoles-de-routage","text":"","title":"Protocoles de routage"},{"location":"Terminale/ArchitectureMaterielle/reseau_routage/#introduction-au-routage","text":"Dans un r\u00e9seau informatique, les informations \u00e9chang\u00e9es entre les machines doivent suivre un chemin bien d\u00e9fini pour atteindre leur destination. Cette t\u00e2che complexe est assur\u00e9e par un m\u00e9canisme essentiel : le routage. Imaginez un r\u00e9seau comme une immense carte routi\u00e8re o\u00f9 chaque ville repr\u00e9sente un appareil (ordinateur, imprimante, smartphone) et chaque route, une liaison physique ou logique. Lorsqu\u2019un message est envoy\u00e9, il doit emprunter le meilleur chemin pour arriver \u00e0 bon port, m\u00eame si plusieurs itin\u00e9raires sont possibles ou si certaines routes sont bloqu\u00e9es. Le routage est donc le processus permettant \u00e0 ces messages \u2013 appel\u00e9s paquets \u2013 de trouver leur chemin dans ce r\u00e9seau de plus en plus complexe, qu'il s'agisse d'un r\u00e9seau local (LAN) ou de l'immensit\u00e9 d'Internet.","title":"Introduction au routage"},{"location":"Terminale/ArchitectureMaterielle/reseau_routage/#rappels","text":"D\u00e9finition d'un r\u00e9seau informatique : Un r\u00e9seau informatique un ensemble d'\u00e9quipements informatiques reli\u00e9s entre-eux afin d'\u00e9changer des donn\u00e9es. D\u00e9finition d'une adresse IP : L\u2019adressage consiste \u00e0 affecter une adresse unique (num\u00e9ro d\u2019identification) permanente ou provisoire \u00e0 chaque appareil connect\u00e9 \u00e0 un r\u00e9seau informatique. C\u2019est-\u00e0-dire qu\u2019il n\u2019existe pas sur internet deux ordinateurs ayant la m\u00eame adresse IP sur le m\u00eame r\u00e9seau. Il existe des adresses IP de version 4 (sur 32 bits, soit 4 octets) et de version 6 (sur 128 bits, soit 16 octets). Une adresse IPV4 est une adresse not\u00e9e sous forme de 4 nombres sous la forme (A.B.C.D) entiers s\u00e9par\u00e9s par des points (cod\u00e9 sur 32 bits). Exemple : 192.168.0.13 D\u00e9finition d'un masque de sous-r\u00e9seau : Un masque de sous-r\u00e9seau (d\u00e9sign\u00e9 par subnet mask, netmask ou address mask en anglais) est un masque distinguant les bits d'une adresse IPv4 utilis\u00e9s pour identifier le sous-r\u00e9seau de ceux utilis\u00e9s pour identifier l'h\u00f4te. Une forme plus courte est connue sous le nom de \u00ab notation CIDR \u00bb (Classless Inter-Domain Routing). Elle donne le num\u00e9ro du r\u00e9seau suivi par une barre oblique (ou slash, \u00ab / \u00bb) et le nombre de bits \u00e0 1 dans la notation binaire du masque de sous-r\u00e9seau. Le masque 255.255.224.0, \u00e9quivalent en binaire \u00e0 11111111.11111111.11100000.00000000, sera donc repr\u00e9sent\u00e9 par /19 (19 bits \u00e0 la valeur 1, suivis de 13 bits 0). Adresse de sous-r\u00e9seau : L'adresse du sous-r\u00e9seau est obtenue en appliquant l'op\u00e9rateur ET binaire entre l'adresse IP et le masque de sous-r\u00e9seau. L'adresse de l'h\u00f4te \u00e0 l'int\u00e9rieur du sous-r\u00e9seau est quant \u00e0 elle obtenue en appliquant l'op\u00e9rateur ET entre l'adresse IP et le compl\u00e9ment \u00e0 un du masque. D\u00e9finition d'une adresse MAC : Une adresse MAC est \u00e9galement appel\u00e9e adresse mat\u00e9rielle ou adresse Ethernet. C'est un identifiant unique et propre \u00e0 la carte r\u00e9seau de l'ordinateur. Une adresse MAC pr\u00e9sente g\u00e9n\u00e9ralement le format XX-XX-XX-XX-XX-XX, chaque X repr\u00e9sentant un chiffre ou une lettre de A \u00e0 F D\u00e9finition d'un switch : Le switch ou commutateur r\u00e9seau est un boitier multiport servant \u00e0 r\u00e9ceptionner et \u00e0 redistribuer les informations sur le r\u00e9seau. Ce boitier peut \u00eatre constitu\u00e9 de 4 \u00e0 plusieurs centaines de ports. Outre le fait de pouvoir connecter du mat\u00e9riel informatique sur le m\u00eame r\u00e9seau Ethernet (postes de travail, imprimante...), il contribue \u00e9galement \u00e0 la s\u00e9curit\u00e9 du r\u00e9seau et \u00e0 prot\u00e9ger les donn\u00e9es qui y transitent. D\u00e9finition d'un routeur : Un routeur est compos\u00e9 d\u2019un nombre plus ou moins important d\u2019interfaces r\u00e9seau (cartes r\u00e9seau). Les routeurs les plus simples que l\u2019on puisse rencontrer permettent de relier ensemble deux r\u00e9seaux (ils poss\u00e8dent alors 2 interfaces r\u00e9seau), mais il existe des routeurs capables de relier ensemble une dizaine de r\u00e9seaux. N'importe quel ordinateur peut jouer le r\u00f4le de routeur (\u00e0 partir du moment o\u00f9 il poss\u00e8de au moins 2 interfaces r\u00e9seau), mais on rencontre souvent des \"machines\" d\u00e9di\u00e9es (par exemple de marque CISCO) D\u00e9finition d'internet : Internet r\u00e9sulte de l\u2019interconnexion de r\u00e9seaux par des routeurs.","title":"Rappels"},{"location":"Terminale/ArchitectureMaterielle/reseau_routage/#problematique-du-routage","text":"","title":"Probl\u00e9matique du routage"},{"location":"Terminale/BDD/bdd/","text":"Introduction aux bases de donn\u00e9es # Introduction aux bases de donn\u00e9es # Introduction # Selon les derni\u00e8res estimations, le volume de donn\u00e9es num\u00e9riques cr\u00e9\u00e9es ou r\u00e9pliqu\u00e9es \u00e0 l\u2019\u00e9chelle mondiale a \u00e9t\u00e9 multipli\u00e9 par plus de trente au cours de la derni\u00e8re d\u00e9cennie, passant de 2 zettaoctets(Unit\u00e9 de mesure de quantit\u00e9 d\u2019information num\u00e9rique, valant \\(10^{21}\\) octets, et dont le symbole est Zo) en 2010 \u00e0 64 zettaoctets en 2020. Mais cette quantit\u00e9 appara\u00eet peu \u00e9lev\u00e9e en comparaison avec ce qui est attendu dans les prochaines ann\u00e9es. Comme le r\u00e9v\u00e8lent les pr\u00e9visions, le volume de donn\u00e9es g\u00e9n\u00e9r\u00e9es dans le monde devrait d\u00e9passer 180 zettaoctets \u00e0 l\u2019horizon 2025, soit une croissance annuelle moyenne de pr\u00e8s de 40 % sur cinq ans. La d\u00e9mocratisation croissante des objets connect\u00e9s et le d\u00e9veloppement de la 5G constituent les principaux moteurs de ce \"Big Bang\" de la donn\u00e9e. Les donn\u00e9es, la gestion et le contr\u00f4le des donn\u00e9es sont devenues des enjeux tr\u00e8s importants. (source : Statistica) Depuis quelques ann\u00e9es, pour stocker ces donn\u00e9es et les rendre disponibles au plus grand nombre. l\u2019utilisation des bases de donn\u00e9es relationnelles est la solution. D\u00e9finition d\u2019une base de donn\u00e9es (BDD) # Une base de donn\u00e9es stocke des informations en rapport avec une activit\u00e9. Ces informations peuvent \u00eatre de natures tr\u00e8s h\u00e9t\u00e9rog\u00e8nes. Les informations sont contenues dans une structure qui permet d\u2019ins\u00e9rer, de supprimer, de mettre \u00e0 jour et d\u2019interroger les informations contenues. Exemple 1 : Vous avez un de nombreux livres et vous voulez stocker des informations \u00e0 propos de ces livres (auteur, pays, date, \u00e9dition, etc....) Exemple 2 : Vous disposez chez vous de nombreuses cartes Arduino, capteurs, composants \u00e9lectroniques diverses et vari\u00e9s et vous voulez avoir un inventaire pr\u00e9cis de ce que vous avez. D\u00e9finition d\u2019un syst\u00e8me de base de donn\u00e9es (SGBD) # Un Syst\u00e8me de gestion de Base de Donn\u00e9es (SGBD) peut \u00eatre vu comme le logiciel qui prend en charge la structuration, le stockage, la mise \u00e0 jour et la maintenance des donn\u00e9es. C\u2019est en fait l\u2019interface entre la base de donn\u00e9es et les multiples utilisateurs (ou leurs programmes). Historique # Quasiment toutes les bases de donn\u00e9es que nous utilisons aujourd\u2019hui sont bas\u00e9es sur les travaux de Edgar Frank Codd(1970. C\u2019est le point essentiel dans l\u2019histoire des bases de donn\u00e9es. On peut \u00e9tablir la chronologie suivante. Nous pouvons d'ailleurs regarder la vid\u00e9o suivante pour plus d'information. Pourquoi ne pas utiliser un tableur pour r\u00e9aliser une base de donn\u00e9es # Exercice 1 : Regarder la vid\u00e9o suivante et en d\u00e9duire les avantages et les inconv\u00e9nients du tableur pour r\u00e9aliser une base de donn\u00e9es. Vocabulaire des bases de donn\u00e9es # Notion de relation, d\u2019attribut et de domaine d\u2019attribut # La notion de relation est au c\u0153ur des bases de donn\u00e9es relationnelles. Une relation (ou table) peut \u00eatre vue comme un tableau \u00e0 2 dimensions, compos\u00e9 d\u2019une en-t\u00eate et d\u2019un corps. Le corps est lui-m\u00eame compos\u00e9 de t-uplets (lignes) et d\u2019attributs (colonnes). L\u2019en-t\u00eate contient les intitul\u00e9s des attributs de l\u2019entit\u00e9 LIVRE. Le corps contient les donn\u00e9es proprement dites. Un exemple de relation peut se voir sur la figure suivante. Le t-uplet encadr\u00e9 en jaune sur le sch\u00e9ma ci-dessus contient les valeurs (ou \u00e9l\u00e9ments) suivantes : 11 ; La Plan\u00e8te des singe ; Boulle ; 1963 ; 8. L\u2019attribut \"titre\" est compos\u00e9 des valeurs suivantes : 1984 ; Dune ; Fondation ; Le meilleur des mondes ; Fahrenheit 451 ; Ubik ; Chroniques martiennes ; La nuit des temps ; Blade Runner ; Les Robots ; La Plan\u00e8te des singes ; Ravage ; Le Ma\u00eetre du Haut Ch\u00e2teau ; Le monde des A ; \u00af La Fin de l\u2019\u00e9ternit\u00e9 ; De la Terre \u00e0 la Lune. Pour chaque attribut d\u2019une relation, il est n\u00e9cessaire de d\u00e9finir un domaine : Le domaine d\u2019un attribut donn\u00e9 correspond \u00e0 un ensemble fini ou infini de valeurs admissibles. Par exemple : le domaine de l\u2019attribut \"id\" correspond \u00e0 l\u2019ensemble des entiers (la colonne \"id\" devra obligatoirement contenir des entiers). Autre exemple : le domaine de l\u2019attribut \"titre\" correspond \u00e0 l\u2019ensemble des cha\u00eenes de caract\u00e8res (not\u00e9 TEXT en g\u00e9n\u00e9ral). Dernier exemple : le domaine de l\u2019attribut \"note\" correspond \u00e0 l\u2019ensemble des entiers positifs (not\u00e9s INT en g\u00e9n\u00e9ral) R\u00e9sum\u00e9 # Relation (ou table) : c\u2019est l\u2019ensemble des enregistrements qui existent sur les donn\u00e9es ; Enregistrement (t*uplet, \u00e9l\u00e9ments ou encore ligne) sont les donn\u00e9es elles-m\u00eames. Le nombre d\u2019enregistrements d\u2019une relation R est appel\u00e9 cardinal de R ou #R. Attribut (champs ou colonne) : les diff\u00e9rents champs \u00e0 remplir ; Domaine : un ensemble de valeur que peut prendre une donn\u00e9e. La notion de domaine est \u00e0 rapprocher de la notion de type en Python. Ce domaine peut \u00eatre infini (cha\u00eene de caract\u00e8re pour caract\u00e9riser un nom) ou fini (date de sortie d\u2019un film de 1900 \u00e0 nos jours ...) Exercice 2 : Dans une m\u00e9diath\u00e8que, les livres sont r\u00e9pertori\u00e9s sous forme de base de donn\u00e9es. Un extrait sous forme de tableau est repr\u00e9sent\u00e9e ci-dessous. R\u00e9pondre au questions suivantes. Quels sont les attributs de ce tableau ? Combien y a-t-il d\u2019enregistrements ? Quel est le domaine de chaque attribut ? Pr\u00e9cisez s\u2019il est fini ou non. Le mod\u00e8le relationnel # Notion de cl\u00e9 primaire # Afin de ne pas avoir deux t-uplets identiques, on d\u00e9finit la notion de \"cl\u00e9 primaire\" (ou Primary Key). Dans une base de donn\u00e9es relationnelle, une cl\u00e9 primaire est la donn\u00e9e qui permet d'identifier de mani\u00e8re unique un enregistrement dans une table Autrement dit, si un attribut est consid\u00e9r\u00e9 comme cl\u00e9primaire, on ne doit pas trouver dans toute la relation 2 fois la m\u00eame valeur pour cet attribut. Exemple : Dans la relation pr\u00e9c\u00e9dente, l\u2019attribut auteur ne peut pas \u00eatre une cl\u00e9 primaire ni l\u2019ann\u00e9e de publication. Par contre, il n\u2019est pas inconcevable que le titre du livre soit une cl\u00e9 primaire mais en g\u00e9n\u00e9ral, on cr\u00e9e un attribut particulier pour jouer le r\u00f4le de cl\u00e9 primaire. Remarques : Une cl\u00e9 primaire peut \u00eatre compos\u00e9e d\u2019une ou plusieurs colonnes. De plus, une cl\u00e9 primaire ne peut jamais avoir la valeur NULL. En g\u00e9n\u00e9ral, on rajoute un attribut (colonne) nomm\u00e9 id unique pour chaque enregistrement pour jouer le r\u00f4le de cl\u00e9 primaire Notion de cl\u00e9 \u00e9trang\u00e8re # Revenons \u00e0 notre relation \"LIVRES\". Nous d\u00e9sirons maintenant un peu enrichir cette relation en ajoutant des informations suppl\u00e9mentaires sur les auteurs, nous obtenons alors la relation de la Figure suivante. Nous avons ajout\u00e9 3 attributs (\"prenom_auteur\",\"date_nai_auteur\" et \"langue_ecriture_auteur\"). Nous avons aussi renomm\u00e9 l\u2019attribut \"auteur\" en \"nom_auteur\". Comme vous l\u2019avez peut-\u00eatre remarqu\u00e9, il y a pas mal d\u2019informations dupliqu\u00e9es, par exemple, on retrouve 3 fois \"K.Dick Philip 1928 anglais\", m\u00eame chose pour \"Asimov Isaac 1920 anglais\"...Cette duplication est-elle indispensable ? Non ! Est-elle souhaitable ? Non plus ! En effet, dans une base de donn\u00e9es, on \u00e9vite autant que possible de dupliquer l\u2019information (sauf \u00e0 des fins de sauvegarde, mais ici c\u2019est toute autre chose). Si nous dupliquons autant de donn\u00e9es inutilement c\u2019est que notre structure ne doit pas \u00eatre la bonne ! Mais alors, comment faire pour avoir aussi des informations sur les auteurs des livres ? La solution est relativement simple : travailler avec 2 relations au lieu d\u2019une seule et cr\u00e9er un \"lien\" entre ces 2 relations (voir Figure ci-dessous). Nous avons cr\u00e9\u00e9 une relation AUTEURS et nous avons modifi\u00e9 la relation LIVRES : nous avons remplac\u00e9 l\u2019attribut \"auteur\" par un attribut \"id_auteur\". Comme vous l\u2019avez sans doute remarqu\u00e9, l\u2019attribut \"id_auteur\" de la relation LIVRES permet de cr\u00e9er un lien avec la relation AUTEURS. \"id_auteur\" correspond \u00e0 l\u2019attribut \"id\" de la relation AUTEURS. L\u2019introduction d\u2019une relation AUTEURS et la mise en place de liens entre cette relation et la relation LIVRES permettent d\u2019\u00e9viter la redondance d\u2019informations. Pour \u00e9tablir un lien entre 2 relations RA et RB, on ajoute \u00e0 RA un attribut x qui prendra les valeurs de la cl\u00e9 primaire de RB. Cet attribut x est appel\u00e9 cl\u00e9 \u00e9trang\u00e8re (ou Foreign Key). Cet attribut correspond \u00e0 la cl\u00e9 primaire d\u2019une autre table, d\u2019o\u00f9 le nom. Dans l\u2019exemple ci-dessus, l\u2019attribut \"id_auteur\" de la relation LIVRES permet bien d\u2019\u00e9tablir un lien entre la relation LIVRES et la relation AUTEURS, \"id_auteur\" correspond bien \u00e0 la cl\u00e9 primaire de la relation AUTEURS, conclusion : \"id_auteur\" est une cl\u00e9 \u00e9trang\u00e8re. Les contraintes d\u2019int\u00e9grit\u00e9 # Il existe un certain nombres de r\u00e8gles \u00e0 respecter pour respecter l\u2019int\u00e9grit\u00e9 d\u2019une base de donn\u00e9es. Ces r\u00e8gles visent \u00e0 pr\u00e9server la coh\u00e9rence des donn\u00e9es et garantir une stabilit\u00e9 de notre base dans le temps. Il existe des cat\u00e9gories de contraintes d\u2019int\u00e9grit\u00e9 \u00e0 respecter : contrainte d\u2019entit\u00e9 : contrainte de domaine contrainte de r\u00e9f\u00e9rence Contraintes d\u2019entit\u00e9 # Par d\u00e9finition, une relation est un ensemble d\u2019enregistrement. Un ensemble n\u2019ayant pas d\u2019\u00e9l\u00e9ments en double, il ne peut pas exister deux fois le m\u00eame enregistrement dans une relation. Toute relation doit donc poss\u00e9der une cl\u00e9 unique (cl\u00e9 primaire). Contraintes de domaine # Les donn\u00e9es que nous souhaitons stocker dans notre base de donn\u00e9es ont des formats diff\u00e9rents. On parle alors de domaine. On peut s\u2019inspirer des types de donn\u00e9es des langages de programmation que nous avons \u00e9tudi\u00e9s (integer, bool\u00e9ens, float, char, string). Les contraintes de domaine doivent permettre de : repr\u00e9senter les donn\u00e9es sans perte d\u2019information ; d\u2019\u00e9viter les erreurs de saisies. Contraintes de r\u00e9f\u00e9rence # Correctement construite, une base de donn\u00e9es fait appel \u00e0 des donn\u00e9es situ\u00e9es dans diff\u00e9rentes relations. Pour que les donn\u00e9es restent utilisables et coh\u00e9rentes, il ne faut pas que l\u2019on puisse d\u00e9truire des donn\u00e9es qui d\u00e9pendent les une des autres. C\u2019est le r\u00f4le de l\u2019int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle de prot\u00e9ger ces relations. Autrement dit, l\u2019int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle v\u00e9rifie qu\u2019une valeur de cl\u00e9 \u00e9trang\u00e8re existe bien en tant que valeur de cl\u00e9 primaire dans une autre table. Sch\u00e9ma d\u2019une relation (sch\u00e9ma relationnel) # On appelle sch\u00e9ma relationnel l\u2019ensemble des relations pr\u00e9sentes dans une base de donn\u00e9es. C\u2019est \u00e0 dire qu\u2019il faut fournir : les noms des relations la liste des attributs et de leurs domaines la cl\u00e9 primaire (on la souligne) les cl\u00e9s \u00e9trang\u00e8res (pr\u00e9c\u00e9d\u00e9es d\u2019un #) Pour notre exemple cela donne : LIVRES (id : entiers positifs, titre : str , #id_auteur : entiers positifs, ann_publi : entiers positifs, note : entiers positifs) AUTEURS (id : entiers positifs, nom : str, prenom : str, ann_naissance : entiers positifs, langue_ecriture : str ) On peut aussi repr\u00e9senter ce sch\u00e9ma relationnel par :","title":"Introduction BDD"},{"location":"Terminale/BDD/bdd/#introduction-aux-bases-de-donnees","text":"","title":"Introduction aux bases de donn\u00e9es"},{"location":"Terminale/BDD/bdd/#introduction-aux-bases-de-donnees_1","text":"","title":"Introduction aux bases de donn\u00e9es"},{"location":"Terminale/BDD/bdd/#introduction","text":"Selon les derni\u00e8res estimations, le volume de donn\u00e9es num\u00e9riques cr\u00e9\u00e9es ou r\u00e9pliqu\u00e9es \u00e0 l\u2019\u00e9chelle mondiale a \u00e9t\u00e9 multipli\u00e9 par plus de trente au cours de la derni\u00e8re d\u00e9cennie, passant de 2 zettaoctets(Unit\u00e9 de mesure de quantit\u00e9 d\u2019information num\u00e9rique, valant \\(10^{21}\\) octets, et dont le symbole est Zo) en 2010 \u00e0 64 zettaoctets en 2020. Mais cette quantit\u00e9 appara\u00eet peu \u00e9lev\u00e9e en comparaison avec ce qui est attendu dans les prochaines ann\u00e9es. Comme le r\u00e9v\u00e8lent les pr\u00e9visions, le volume de donn\u00e9es g\u00e9n\u00e9r\u00e9es dans le monde devrait d\u00e9passer 180 zettaoctets \u00e0 l\u2019horizon 2025, soit une croissance annuelle moyenne de pr\u00e8s de 40 % sur cinq ans. La d\u00e9mocratisation croissante des objets connect\u00e9s et le d\u00e9veloppement de la 5G constituent les principaux moteurs de ce \"Big Bang\" de la donn\u00e9e. Les donn\u00e9es, la gestion et le contr\u00f4le des donn\u00e9es sont devenues des enjeux tr\u00e8s importants. (source : Statistica) Depuis quelques ann\u00e9es, pour stocker ces donn\u00e9es et les rendre disponibles au plus grand nombre. l\u2019utilisation des bases de donn\u00e9es relationnelles est la solution.","title":"Introduction"},{"location":"Terminale/BDD/bdd/#definition-dune-base-de-donnees-bdd","text":"Une base de donn\u00e9es stocke des informations en rapport avec une activit\u00e9. Ces informations peuvent \u00eatre de natures tr\u00e8s h\u00e9t\u00e9rog\u00e8nes. Les informations sont contenues dans une structure qui permet d\u2019ins\u00e9rer, de supprimer, de mettre \u00e0 jour et d\u2019interroger les informations contenues. Exemple 1 : Vous avez un de nombreux livres et vous voulez stocker des informations \u00e0 propos de ces livres (auteur, pays, date, \u00e9dition, etc....) Exemple 2 : Vous disposez chez vous de nombreuses cartes Arduino, capteurs, composants \u00e9lectroniques diverses et vari\u00e9s et vous voulez avoir un inventaire pr\u00e9cis de ce que vous avez.","title":"D\u00e9finition d\u2019une base de donn\u00e9es (BDD)"},{"location":"Terminale/BDD/bdd/#definition-dun-systeme-de-base-de-donnees-sgbd","text":"Un Syst\u00e8me de gestion de Base de Donn\u00e9es (SGBD) peut \u00eatre vu comme le logiciel qui prend en charge la structuration, le stockage, la mise \u00e0 jour et la maintenance des donn\u00e9es. C\u2019est en fait l\u2019interface entre la base de donn\u00e9es et les multiples utilisateurs (ou leurs programmes).","title":"D\u00e9finition d\u2019un syst\u00e8me de base de donn\u00e9es (SGBD)"},{"location":"Terminale/BDD/bdd/#historique","text":"Quasiment toutes les bases de donn\u00e9es que nous utilisons aujourd\u2019hui sont bas\u00e9es sur les travaux de Edgar Frank Codd(1970. C\u2019est le point essentiel dans l\u2019histoire des bases de donn\u00e9es. On peut \u00e9tablir la chronologie suivante. Nous pouvons d'ailleurs regarder la vid\u00e9o suivante pour plus d'information.","title":"Historique"},{"location":"Terminale/BDD/bdd/#pourquoi-ne-pas-utiliser-un-tableur-pour-realiser-une-base-de-donnees","text":"Exercice 1 : Regarder la vid\u00e9o suivante et en d\u00e9duire les avantages et les inconv\u00e9nients du tableur pour r\u00e9aliser une base de donn\u00e9es.","title":"Pourquoi ne pas utiliser un tableur pour r\u00e9aliser une base de donn\u00e9es"},{"location":"Terminale/BDD/bdd/#vocabulaire-des-bases-de-donnees","text":"","title":"Vocabulaire des bases de donn\u00e9es"},{"location":"Terminale/BDD/bdd/#notion-de-relation-dattribut-et-de-domaine-dattribut","text":"La notion de relation est au c\u0153ur des bases de donn\u00e9es relationnelles. Une relation (ou table) peut \u00eatre vue comme un tableau \u00e0 2 dimensions, compos\u00e9 d\u2019une en-t\u00eate et d\u2019un corps. Le corps est lui-m\u00eame compos\u00e9 de t-uplets (lignes) et d\u2019attributs (colonnes). L\u2019en-t\u00eate contient les intitul\u00e9s des attributs de l\u2019entit\u00e9 LIVRE. Le corps contient les donn\u00e9es proprement dites. Un exemple de relation peut se voir sur la figure suivante. Le t-uplet encadr\u00e9 en jaune sur le sch\u00e9ma ci-dessus contient les valeurs (ou \u00e9l\u00e9ments) suivantes : 11 ; La Plan\u00e8te des singe ; Boulle ; 1963 ; 8. L\u2019attribut \"titre\" est compos\u00e9 des valeurs suivantes : 1984 ; Dune ; Fondation ; Le meilleur des mondes ; Fahrenheit 451 ; Ubik ; Chroniques martiennes ; La nuit des temps ; Blade Runner ; Les Robots ; La Plan\u00e8te des singes ; Ravage ; Le Ma\u00eetre du Haut Ch\u00e2teau ; Le monde des A ; \u00af La Fin de l\u2019\u00e9ternit\u00e9 ; De la Terre \u00e0 la Lune. Pour chaque attribut d\u2019une relation, il est n\u00e9cessaire de d\u00e9finir un domaine : Le domaine d\u2019un attribut donn\u00e9 correspond \u00e0 un ensemble fini ou infini de valeurs admissibles. Par exemple : le domaine de l\u2019attribut \"id\" correspond \u00e0 l\u2019ensemble des entiers (la colonne \"id\" devra obligatoirement contenir des entiers). Autre exemple : le domaine de l\u2019attribut \"titre\" correspond \u00e0 l\u2019ensemble des cha\u00eenes de caract\u00e8res (not\u00e9 TEXT en g\u00e9n\u00e9ral). Dernier exemple : le domaine de l\u2019attribut \"note\" correspond \u00e0 l\u2019ensemble des entiers positifs (not\u00e9s INT en g\u00e9n\u00e9ral)","title":"Notion de relation, d\u2019attribut et de domaine d\u2019attribut"},{"location":"Terminale/BDD/bdd/#resume","text":"Relation (ou table) : c\u2019est l\u2019ensemble des enregistrements qui existent sur les donn\u00e9es ; Enregistrement (t*uplet, \u00e9l\u00e9ments ou encore ligne) sont les donn\u00e9es elles-m\u00eames. Le nombre d\u2019enregistrements d\u2019une relation R est appel\u00e9 cardinal de R ou #R. Attribut (champs ou colonne) : les diff\u00e9rents champs \u00e0 remplir ; Domaine : un ensemble de valeur que peut prendre une donn\u00e9e. La notion de domaine est \u00e0 rapprocher de la notion de type en Python. Ce domaine peut \u00eatre infini (cha\u00eene de caract\u00e8re pour caract\u00e9riser un nom) ou fini (date de sortie d\u2019un film de 1900 \u00e0 nos jours ...) Exercice 2 : Dans une m\u00e9diath\u00e8que, les livres sont r\u00e9pertori\u00e9s sous forme de base de donn\u00e9es. Un extrait sous forme de tableau est repr\u00e9sent\u00e9e ci-dessous. R\u00e9pondre au questions suivantes. Quels sont les attributs de ce tableau ? Combien y a-t-il d\u2019enregistrements ? Quel est le domaine de chaque attribut ? Pr\u00e9cisez s\u2019il est fini ou non.","title":"R\u00e9sum\u00e9"},{"location":"Terminale/BDD/bdd/#le-modele-relationnel","text":"","title":"Le mod\u00e8le relationnel"},{"location":"Terminale/BDD/bdd/#notion-de-cle-primaire","text":"Afin de ne pas avoir deux t-uplets identiques, on d\u00e9finit la notion de \"cl\u00e9 primaire\" (ou Primary Key). Dans une base de donn\u00e9es relationnelle, une cl\u00e9 primaire est la donn\u00e9e qui permet d'identifier de mani\u00e8re unique un enregistrement dans une table Autrement dit, si un attribut est consid\u00e9r\u00e9 comme cl\u00e9primaire, on ne doit pas trouver dans toute la relation 2 fois la m\u00eame valeur pour cet attribut. Exemple : Dans la relation pr\u00e9c\u00e9dente, l\u2019attribut auteur ne peut pas \u00eatre une cl\u00e9 primaire ni l\u2019ann\u00e9e de publication. Par contre, il n\u2019est pas inconcevable que le titre du livre soit une cl\u00e9 primaire mais en g\u00e9n\u00e9ral, on cr\u00e9e un attribut particulier pour jouer le r\u00f4le de cl\u00e9 primaire. Remarques : Une cl\u00e9 primaire peut \u00eatre compos\u00e9e d\u2019une ou plusieurs colonnes. De plus, une cl\u00e9 primaire ne peut jamais avoir la valeur NULL. En g\u00e9n\u00e9ral, on rajoute un attribut (colonne) nomm\u00e9 id unique pour chaque enregistrement pour jouer le r\u00f4le de cl\u00e9 primaire","title":"Notion de cl\u00e9 primaire"},{"location":"Terminale/BDD/bdd/#notion-de-cle-etrangere","text":"Revenons \u00e0 notre relation \"LIVRES\". Nous d\u00e9sirons maintenant un peu enrichir cette relation en ajoutant des informations suppl\u00e9mentaires sur les auteurs, nous obtenons alors la relation de la Figure suivante. Nous avons ajout\u00e9 3 attributs (\"prenom_auteur\",\"date_nai_auteur\" et \"langue_ecriture_auteur\"). Nous avons aussi renomm\u00e9 l\u2019attribut \"auteur\" en \"nom_auteur\". Comme vous l\u2019avez peut-\u00eatre remarqu\u00e9, il y a pas mal d\u2019informations dupliqu\u00e9es, par exemple, on retrouve 3 fois \"K.Dick Philip 1928 anglais\", m\u00eame chose pour \"Asimov Isaac 1920 anglais\"...Cette duplication est-elle indispensable ? Non ! Est-elle souhaitable ? Non plus ! En effet, dans une base de donn\u00e9es, on \u00e9vite autant que possible de dupliquer l\u2019information (sauf \u00e0 des fins de sauvegarde, mais ici c\u2019est toute autre chose). Si nous dupliquons autant de donn\u00e9es inutilement c\u2019est que notre structure ne doit pas \u00eatre la bonne ! Mais alors, comment faire pour avoir aussi des informations sur les auteurs des livres ? La solution est relativement simple : travailler avec 2 relations au lieu d\u2019une seule et cr\u00e9er un \"lien\" entre ces 2 relations (voir Figure ci-dessous). Nous avons cr\u00e9\u00e9 une relation AUTEURS et nous avons modifi\u00e9 la relation LIVRES : nous avons remplac\u00e9 l\u2019attribut \"auteur\" par un attribut \"id_auteur\". Comme vous l\u2019avez sans doute remarqu\u00e9, l\u2019attribut \"id_auteur\" de la relation LIVRES permet de cr\u00e9er un lien avec la relation AUTEURS. \"id_auteur\" correspond \u00e0 l\u2019attribut \"id\" de la relation AUTEURS. L\u2019introduction d\u2019une relation AUTEURS et la mise en place de liens entre cette relation et la relation LIVRES permettent d\u2019\u00e9viter la redondance d\u2019informations. Pour \u00e9tablir un lien entre 2 relations RA et RB, on ajoute \u00e0 RA un attribut x qui prendra les valeurs de la cl\u00e9 primaire de RB. Cet attribut x est appel\u00e9 cl\u00e9 \u00e9trang\u00e8re (ou Foreign Key). Cet attribut correspond \u00e0 la cl\u00e9 primaire d\u2019une autre table, d\u2019o\u00f9 le nom. Dans l\u2019exemple ci-dessus, l\u2019attribut \"id_auteur\" de la relation LIVRES permet bien d\u2019\u00e9tablir un lien entre la relation LIVRES et la relation AUTEURS, \"id_auteur\" correspond bien \u00e0 la cl\u00e9 primaire de la relation AUTEURS, conclusion : \"id_auteur\" est une cl\u00e9 \u00e9trang\u00e8re.","title":"Notion de cl\u00e9 \u00e9trang\u00e8re"},{"location":"Terminale/BDD/bdd/#les-contraintes-dintegrite","text":"Il existe un certain nombres de r\u00e8gles \u00e0 respecter pour respecter l\u2019int\u00e9grit\u00e9 d\u2019une base de donn\u00e9es. Ces r\u00e8gles visent \u00e0 pr\u00e9server la coh\u00e9rence des donn\u00e9es et garantir une stabilit\u00e9 de notre base dans le temps. Il existe des cat\u00e9gories de contraintes d\u2019int\u00e9grit\u00e9 \u00e0 respecter : contrainte d\u2019entit\u00e9 : contrainte de domaine contrainte de r\u00e9f\u00e9rence","title":"Les contraintes d\u2019int\u00e9grit\u00e9"},{"location":"Terminale/BDD/bdd/#contraintes-dentite","text":"Par d\u00e9finition, une relation est un ensemble d\u2019enregistrement. Un ensemble n\u2019ayant pas d\u2019\u00e9l\u00e9ments en double, il ne peut pas exister deux fois le m\u00eame enregistrement dans une relation. Toute relation doit donc poss\u00e9der une cl\u00e9 unique (cl\u00e9 primaire).","title":"Contraintes d\u2019entit\u00e9"},{"location":"Terminale/BDD/bdd/#contraintes-de-domaine","text":"Les donn\u00e9es que nous souhaitons stocker dans notre base de donn\u00e9es ont des formats diff\u00e9rents. On parle alors de domaine. On peut s\u2019inspirer des types de donn\u00e9es des langages de programmation que nous avons \u00e9tudi\u00e9s (integer, bool\u00e9ens, float, char, string). Les contraintes de domaine doivent permettre de : repr\u00e9senter les donn\u00e9es sans perte d\u2019information ; d\u2019\u00e9viter les erreurs de saisies.","title":"Contraintes de domaine"},{"location":"Terminale/BDD/bdd/#contraintes-de-reference","text":"Correctement construite, une base de donn\u00e9es fait appel \u00e0 des donn\u00e9es situ\u00e9es dans diff\u00e9rentes relations. Pour que les donn\u00e9es restent utilisables et coh\u00e9rentes, il ne faut pas que l\u2019on puisse d\u00e9truire des donn\u00e9es qui d\u00e9pendent les une des autres. C\u2019est le r\u00f4le de l\u2019int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle de prot\u00e9ger ces relations. Autrement dit, l\u2019int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle v\u00e9rifie qu\u2019une valeur de cl\u00e9 \u00e9trang\u00e8re existe bien en tant que valeur de cl\u00e9 primaire dans une autre table.","title":"Contraintes de r\u00e9f\u00e9rence"},{"location":"Terminale/BDD/bdd/#schema-dune-relation-schema-relationnel","text":"On appelle sch\u00e9ma relationnel l\u2019ensemble des relations pr\u00e9sentes dans une base de donn\u00e9es. C\u2019est \u00e0 dire qu\u2019il faut fournir : les noms des relations la liste des attributs et de leurs domaines la cl\u00e9 primaire (on la souligne) les cl\u00e9s \u00e9trang\u00e8res (pr\u00e9c\u00e9d\u00e9es d\u2019un #) Pour notre exemple cela donne : LIVRES (id : entiers positifs, titre : str , #id_auteur : entiers positifs, ann_publi : entiers positifs, note : entiers positifs) AUTEURS (id : entiers positifs, nom : str, prenom : str, ann_naissance : entiers positifs, langue_ecriture : str ) On peut aussi repr\u00e9senter ce sch\u00e9ma relationnel par :","title":"Sch\u00e9ma d\u2019une relation (sch\u00e9ma relationnel)"},{"location":"Terminale/BDD/sql_python/","text":"Python et bases de donn\u00e9es # Cr\u00e9ation d\u2019une table # Avant d\u2019\u00e9voquer le projet en tant que tel, nous allons commencer par travailler sur les requ\u00eates SQL effectu\u00e9es depuis un programme Python. Il est donc n\u00e9cessaire de bien ma\u00eetriser toute la partie consacr\u00e9e aux bases de donn\u00e9es et particuli\u00e8rement le cours sur les requ\u00eates SQL. Apr\u00e8s avoir cr\u00e9\u00e9 un r\u00e9pertoire \"projet_bd\". Cr\u00e9ez, \u00e0 l\u2019aide de votre \u00e9diteur, un fichier Python (\u00e0 vous de choisir le nom) puis saisissez et ex\u00e9cutez le programme suivant : 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( \"CREATE TABLE LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) conn . commit () cur . close () conn . close () Ce programme va vous permettre de vous \"connecter\" \u00e0 une base de donn\u00e9es (si cette derni\u00e8re n\u2019existe pas, elle sera cr\u00e9\u00e9e). Ensuite nous cr\u00e9ons une table (une relation) nomm\u00e9e LIVRES, cette table contient 4 attributs : id (de type entier), titre (de type texte), auteur (de type texte), ann_publi (de type entier) et note (de type entier). Entrons un peu dans les d\u00e9tails en analysant le programme ligne par ligne : 1 import sqlite3 Nous commen\u00e7ons par importer la biblioth\u00e8que sqlite3-0611. Cette biblioth\u00e8que va nous permettre d\u2019effectuer des requ\u00eates SQL sur une base de donn\u00e9es. Comme dans le cours sur les bases de donn\u00e9es, nous utiliserons le SGBD SQLite. 1 2 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () Nous cr\u00e9ons un objet de type \"connection\" (conn) qui va nous permettre d\u2019interagir avec la base de donn\u00e9es \"baseDonnees.db\" (comme dit plus haut, si cette base de donn\u00e9es n\u2019existe pas, elle est cr\u00e9\u00e9e). Vous devriez donc avoir un fichier \"baseDonnees.db\" dans le m\u00eame r\u00e9pertoire que votre fichier Python. Nous cr\u00e9ons ensuite un objet de type \"cursor\" \u00e0 partir de l\u2019objet de type \"connection\". Cet objet de type \"cursor\" va nous permettre de manipuler la base de donn\u00e9es et d\u2019obtenir des r\u00e9sultats lorsque nous effectuerons des requ\u00eates. 1 cur . execute ( \"CREATE TABLE LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) La m\u00e9thode \"execute\" de notre objet de type \"cursor\" nous permet d\u2019effectuer une requ\u00eate SQL. Cette requ\u00eate SQL est en tout point identique \u00e0 ce que nous avons vu dans le cours sur les bases de donn\u00e9es. 1 conn . commit () Pour v\u00e9ritablement ex\u00e9cuter les requ\u00eates, il est n\u00e9cessaire d\u2019appliquer la m\u00e9thode \"commit\" \u00e0 l\u2019objet de type \"connection\". 1 2 cur . close () conn . close () Avant de terminer le programme, il n\u00e9cessaire de \"fermer\" l\u2019objet de type \"cursor\" et l\u2019objet de type \"connection\". Nous allons syst\u00e9matiquement retrouver cette structure dans nos futurs programmes : cr\u00e9ation d\u2019un objet de type \"connection\" cr\u00e9ation d\u2019un objet de type \"cursor\" pr\u00e9paration d\u2019une ou plusieurs requ\u00eate(s) (m\u00e9thode \"execute\" sur l\u2019objet de type \"cursor\") ex\u00e9cution r\u00e9elle des requ\u00eates (m\u00e9thode \"commit\" sur l\u2019objet de type \"connection\") \"fermeture\" de l\u2019objet de type \"cursor\" puis de l\u2019objet de type \"connection\" Si vous ex\u00e9cutez une deuxi\u00e8me fois le programme pr\u00e9c\u00e9dent0, vous aurez droit \u00e0 une erreur : \"OperationalError : table LIVRES already exists\". Afin d\u2019\u00e9viter ce genre de probl\u00e8me, il est possible de modifier le programme afin que la requ\u00eate de cr\u00e9ation de la table LIVRES ne se fasse pas si la table LIVRES existe d\u00e9j\u00e0. Apr\u00e8s avoir effac\u00e9 le fichier baseDonnees.db , saisissez le programme ci-dessous, puis ex\u00e9cutez-le 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( \"CREATE TABLE IF NOT EXISTS LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) conn . commit () cur . close () conn . close () Comme vous pouvez le constater, si vous ex\u00e9cutez le programme plusieurs fois de suite, il n\u2019y a plus d\u2019erreur. Remarque : Il est possible d\u2019ouvrir le fichier \"baseDonnees.db\" \u00e0 l\u2019aide du logiciel \"DB Browser for SQLite\" et de v\u00e9rifier que la table LIVRES a bien \u00e9t\u00e9 cr\u00e9\u00e9e. Remplissage de la table # Maintenant que notre table LIVRES a \u00e9t\u00e9 cr\u00e9\u00e9e, nous allons pouvoir commencer \u00e0 la \"remplir\" avec des donn\u00e9es. Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( \"CREATE TABLE IF NOT EXISTS LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) cur . execute ( \"INSERT INTO LIVRES(id,titre,auteur,ann_publi,note) VALUES(1,'1984','Orwell',1949,10)\" ) conn . commit () cur . close () conn . close () Ouvrez le fichier baseDonnees.db \u00e0 l\u2019aide du logiciel DB Browser for SQLite et v\u00e9rifiez que les donn\u00e9es ont bien \u00e9t\u00e9 ajout\u00e9es \u00e0 la table LIVRES. Nous avons inclus les donn\u00e9es \u00e0 ins\u00e9rer directement dans la requ\u00eate. Il est possible de proc\u00e9der autrement en s\u00e9parant les donn\u00e9es \u00e0 ins\u00e9rer et la requ\u00eate (cela s\u2019av\u00e9rera particuli\u00e8rement pratique dans le futur) Apr\u00e8s avoir effac\u00e9 le fichier \"baseDonnees.db\", saisissez le programme ci-dessous, puis ex\u00e9cutez-le 1 2 3 4 5 6 7 8 9 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () data = ( 1 , '1984' , 'Orwell' , 1949 , 10 ) cur . execute ( \"CREATE TABLE IF NOT EXISTS LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) cur . execute ( \"INSERT INTO LIVRES(id,titre,auteur,ann_publi,note) VALUES(?, ?, ?, ?, ?)\" , data ) conn . commit () cur . close () conn . close () Premi\u00e8re chose \u00e0 remarquer, nous avons cr\u00e9\u00e9 un tuple (data) contenant toutes les informations. En effet, la m\u00e9thode \"execute\" peut prendre un deuxi\u00e8me param\u00e8tre un tuple contenant les donn\u00e9es \u00e0 ins\u00e9rer. Les points d\u2019interrogation pr\u00e9sents dans la requ\u00eate indiquent l\u2019emplacement des donn\u00e9es \u00e0 ins\u00e9rer. Le premier ? sera remplac\u00e9 par le premier \u00e9l\u00e9ment du tuple (dans notre cas 1), le deuxi\u00e8me ? sera remplac\u00e9 par le deuxi\u00e8me \u00e9l\u00e9ment du tuple (dans notre cas \u20191984\u2019) et ainsi de suite... Si l\u2019on d\u00e9sire ins\u00e9rer plusieurs donn\u00e9es, il est possible de regrouper toutes les donn\u00e9es \u00e0 ins\u00e9rer dans un tableau et d\u2019utiliser la m\u00e9thode \"executemany\" \u00e0 la place de la m\u00e9thode \"execute\". Apr\u00e8s avoir effac\u00e9 le fichier \"baseDonnees.db\", saisissez le programme ci-dessous, puis ex\u00e9cutez-le 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () datas = [ ( 1 , '1984' , 'Orwell' , 1949 , 10 ), ( 2 , 'Dune' , 'Herbert' , 1965 , 8 ), ( 3 , 'Fondation' , 'Asimov' , 1951 , 9 ), ( 4 , 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 5 , 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 6 , 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 7 , 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 8 , 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 9 , 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 10 , 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 11 , 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 12 , 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 13 , 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 14 , 'Le monde des \u00afA' , 'Van Vogt' , 1945 , 7 ), ( 15 , 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 16 , 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ) ] cur . execute ( \"CREATE TABLE IF NOT EXISTS LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) cur . executemany ( \"INSERT INTO LIVRES(id,titre,auteur,ann_publi,note) VALUES(?, ?, ?, ?, ?)\" , datas ) conn . commit () cur . close () conn . close () Ouvrez le fichier baseDonnees.db \u00e0 l\u2019aide du logiciel DB Browser for SQLite et v\u00e9rifiez que les donn\u00e9es ont bien \u00e9t\u00e9 ajout\u00e9es \u00e0 la table LIVRES . Il n\u2019est pas tr\u00e8s pratique d\u2019avoir \u00e0 g\u00e9rer l\u2019id (cl\u00e9 primaire). En effet, si je veux ajouter un nouveau livre, il faudra que je connaisse l\u2019id du pr\u00e9c\u00e9dent (incr\u00e9mentation de l\u2019id). Heureusement, il est possible d\u2019automatiser cette incr\u00e9mentation. Apr\u00e8s avoir effac\u00e9 le fichier baseDonnees.db , saisissez le programme ci-dessous, puis ex\u00e9cutez-le 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () datas = [ ( '1984' , 'Orwell' , 1949 , 10 ), ( 'Dune' , 'Herbert' , 1965 , 8 ), ( 'Fondation' , 'Asimov' , 1951 , 9 ), ( 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 'Le monde des \u00afA' , 'Van Vogt' , 1945 , 7 ), ( 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ) ] cur . execute ( \"\"\" CREATE TABLE IF NOT EXISTS LIVRES (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, titre TEXT, auteur TXT, ann_publi INT, note INT) \"\"\" ) cur . executemany ( \"INSERT INTO LIVRES(titre,auteur,ann_publi,note) VALUES(?, ?, ?, ?)\" , datas ) conn . commit () cur . close () conn . close () Ouvrez le fichier baseDonnees.db \u00e0 l\u2019aide du logiciel DB Browser for SQLite et v\u00e9rifiez que les donn\u00e9es ont bien \u00e9t\u00e9 ajout\u00e9es \u00e0 la table LIVRES . Vous pouvez constater que nous avons bien l\u2019attribut \"id\", m\u00eame si ce dernier n\u2019a pas \u00e9t\u00e9 renseign\u00e9 dans les donn\u00e9es (absence d\u2019id dans le tableau datas). D\u00e9sormais l\u2019id sera incr\u00e9ment\u00e9 automatiquement gr\u00e2ce au id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE (attention il est n\u00e9cessaire d\u2019utiliser INTEGER \u00e0 la place du INT habituel) pr\u00e9sent dans la requ\u00eate de cr\u00e9ation de la table LIVRES . Attention, de bien penser \u00e0 supprimer un ? dans la requ\u00eate d\u2019insertion (chaque tuple contient maintenant 4 \u00e9l\u00e9ments (nous en avions 5 quand l\u2019id n\u2019\u00e9tait pas g\u00e9r\u00e9 automatiquement)). Il est tout \u00e0 fait possible de rajouter une nouvelle donn\u00e9e. Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () nvx_data = ( 'Hyp\u00e9rion' , 'Simmons' , 1989 , 8 ) cur . execute ( \"INSERT INTO LIVRES(titre,auteur,ann_publi,note) VALUES(?, ?, ?, ?)\" , nvx_data ) conn . commit () cur . close () conn . close () Ouvrez le fichier baseDonnees.db \u00e0 l\u2019aide du logiciel DB Browser for SQLite et v\u00e9rifiez que les donn\u00e9es ont bien \u00e9t\u00e9 ajout\u00e9es \u00e0 la table LIVRES . Vous pouvez remarquer que le nouvel enregistrement a bien l\u2019id 17 et que nous n\u2019avons pas eu \u00e0 nous en occuper. Modification de la base de donn\u00e9es # Il est possible de modifier des donn\u00e9es d\u00e9j\u00e0 pr\u00e9sentes dans la table. Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () modif = ( 7 , 'Hyp\u00e9rion' ) cur . execute ( 'UPDATE LIVRES SET note = ? WHERE titre = ?' , modif ) conn . commit () cur . close () conn . close () Ouvrez le fichier \"baseDonnees.db\" \u00e0 l\u2019aide du logiciel \"DB Browser for SQLite\" et v\u00e9rifiez que les donn\u00e9es ont bien \u00e9t\u00e9 modifi\u00e9es dans la table LIVRES. Comme vous pouvez le constater, il est possible d\u2019utiliser la clause WHERE avec un ? Suppression dans une base de donn\u00e9es # Il est aussi possible de supprimer une donn\u00e9e. Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () suppr = ( 'Hyp\u00e9rion' ,) cur . execute ( 'DELETE FROM LIVRES WHERE titre = ?' , suppr ) conn . commit () cur . close () conn . close () Ouvrez le fichier baseDonnees.db \u00e0 l\u2019aide du logiciel DB Browser for SQLite et v\u00e9rifiez que l\u2019entr\u00e9e \"Hyp\u00e9rion\" a \u00e9t\u00e9 supprim\u00e9e de la table LIVRES. Attention, le deuxi\u00e8me param\u00e8tre de la m\u00e9thode execute doit \u00eatre un tuple, si on \u00e9crit seulement suppr = (\u2019Hyp\u00e9rion\u2019), suppr est une chaine de caract\u00e8re et pas un tuple. Pour avoir un tuple avec un seul \u00e9l\u00e9ment il est n\u00e9cessaire d\u2019ajouter une virgule (d\u2019o\u00f9 le suppr = (\u2019Hyp\u00e9rion\u2019,)) Requ\u00eate avec SELECT # Enfin, pour terminer cette introduction sur l\u2019utilisation de sqlite en Python, nous devons nous int\u00e9resser aux requ\u00eates de type SELECT : Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( 'SELECT * FROM LIVRES' ) conn . commit () liste = cur . fetchall () cur . close () conn . close () \u00c0 l\u2019aide de la console, d\u00e9terminez la valeur r\u00e9f\u00e9renc\u00e9e par la variable liste Comme vous pouvez le constater, la variable liste est un tableau qui contient des tuples. Chaque tuple est un enregistrement de la table LIVRES . La m\u00e9thode fetchall d\u2019un objet de type cursor renvoie un tableau contenant des tuples. Il est possible d\u2019avoir des requ\u00eates plus s\u00e9lectives : Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( 'SELECT titre FROM LIVRES WHERE ann_publi < 1970' ) conn . commit () liste = cur . fetchall () cur . close () conn . close () \u00c0 l\u2019aide de la console, d\u00e9terminez la valeur r\u00e9f\u00e9renc\u00e9e par la variable liste Vous pouvez constater que l\u2019on obtient bien un tableau contenant des tuples (nous avons bien des tuples m\u00eame si seuls les titres ont \u00e9t\u00e9 s\u00e9lectionn\u00e9s). Il est possible d\u2019utiliser les points d\u2019interrogation dans une requ\u00eate de type SELECT . Saisissez le programme ci-dessous, puis ex\u00e9cutez-le 1 2 3 4 5 6 7 8 9 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () recherche = ( 1960 , 8 ) cur . execute ( 'SELECT titre FROM LIVRES WHERE ann_publi < ? AND note > ?' , recherche ) conn . commit () liste = cur . fetchall () cur . close () conn . close () \u00c0 l\u2019aide de la console, d\u00e9terminez la valeur r\u00e9f\u00e9renc\u00e9e par la variable liste","title":"SQL et Python"},{"location":"Terminale/BDD/sql_python/#python-et-bases-de-donnees","text":"","title":"Python et bases de donn\u00e9es"},{"location":"Terminale/BDD/sql_python/#creation-dune-table","text":"Avant d\u2019\u00e9voquer le projet en tant que tel, nous allons commencer par travailler sur les requ\u00eates SQL effectu\u00e9es depuis un programme Python. Il est donc n\u00e9cessaire de bien ma\u00eetriser toute la partie consacr\u00e9e aux bases de donn\u00e9es et particuli\u00e8rement le cours sur les requ\u00eates SQL. Apr\u00e8s avoir cr\u00e9\u00e9 un r\u00e9pertoire \"projet_bd\". Cr\u00e9ez, \u00e0 l\u2019aide de votre \u00e9diteur, un fichier Python (\u00e0 vous de choisir le nom) puis saisissez et ex\u00e9cutez le programme suivant : 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( \"CREATE TABLE LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) conn . commit () cur . close () conn . close () Ce programme va vous permettre de vous \"connecter\" \u00e0 une base de donn\u00e9es (si cette derni\u00e8re n\u2019existe pas, elle sera cr\u00e9\u00e9e). Ensuite nous cr\u00e9ons une table (une relation) nomm\u00e9e LIVRES, cette table contient 4 attributs : id (de type entier), titre (de type texte), auteur (de type texte), ann_publi (de type entier) et note (de type entier). Entrons un peu dans les d\u00e9tails en analysant le programme ligne par ligne : 1 import sqlite3 Nous commen\u00e7ons par importer la biblioth\u00e8que sqlite3-0611. Cette biblioth\u00e8que va nous permettre d\u2019effectuer des requ\u00eates SQL sur une base de donn\u00e9es. Comme dans le cours sur les bases de donn\u00e9es, nous utiliserons le SGBD SQLite. 1 2 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () Nous cr\u00e9ons un objet de type \"connection\" (conn) qui va nous permettre d\u2019interagir avec la base de donn\u00e9es \"baseDonnees.db\" (comme dit plus haut, si cette base de donn\u00e9es n\u2019existe pas, elle est cr\u00e9\u00e9e). Vous devriez donc avoir un fichier \"baseDonnees.db\" dans le m\u00eame r\u00e9pertoire que votre fichier Python. Nous cr\u00e9ons ensuite un objet de type \"cursor\" \u00e0 partir de l\u2019objet de type \"connection\". Cet objet de type \"cursor\" va nous permettre de manipuler la base de donn\u00e9es et d\u2019obtenir des r\u00e9sultats lorsque nous effectuerons des requ\u00eates. 1 cur . execute ( \"CREATE TABLE LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) La m\u00e9thode \"execute\" de notre objet de type \"cursor\" nous permet d\u2019effectuer une requ\u00eate SQL. Cette requ\u00eate SQL est en tout point identique \u00e0 ce que nous avons vu dans le cours sur les bases de donn\u00e9es. 1 conn . commit () Pour v\u00e9ritablement ex\u00e9cuter les requ\u00eates, il est n\u00e9cessaire d\u2019appliquer la m\u00e9thode \"commit\" \u00e0 l\u2019objet de type \"connection\". 1 2 cur . close () conn . close () Avant de terminer le programme, il n\u00e9cessaire de \"fermer\" l\u2019objet de type \"cursor\" et l\u2019objet de type \"connection\". Nous allons syst\u00e9matiquement retrouver cette structure dans nos futurs programmes : cr\u00e9ation d\u2019un objet de type \"connection\" cr\u00e9ation d\u2019un objet de type \"cursor\" pr\u00e9paration d\u2019une ou plusieurs requ\u00eate(s) (m\u00e9thode \"execute\" sur l\u2019objet de type \"cursor\") ex\u00e9cution r\u00e9elle des requ\u00eates (m\u00e9thode \"commit\" sur l\u2019objet de type \"connection\") \"fermeture\" de l\u2019objet de type \"cursor\" puis de l\u2019objet de type \"connection\" Si vous ex\u00e9cutez une deuxi\u00e8me fois le programme pr\u00e9c\u00e9dent0, vous aurez droit \u00e0 une erreur : \"OperationalError : table LIVRES already exists\". Afin d\u2019\u00e9viter ce genre de probl\u00e8me, il est possible de modifier le programme afin que la requ\u00eate de cr\u00e9ation de la table LIVRES ne se fasse pas si la table LIVRES existe d\u00e9j\u00e0. Apr\u00e8s avoir effac\u00e9 le fichier baseDonnees.db , saisissez le programme ci-dessous, puis ex\u00e9cutez-le 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( \"CREATE TABLE IF NOT EXISTS LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) conn . commit () cur . close () conn . close () Comme vous pouvez le constater, si vous ex\u00e9cutez le programme plusieurs fois de suite, il n\u2019y a plus d\u2019erreur. Remarque : Il est possible d\u2019ouvrir le fichier \"baseDonnees.db\" \u00e0 l\u2019aide du logiciel \"DB Browser for SQLite\" et de v\u00e9rifier que la table LIVRES a bien \u00e9t\u00e9 cr\u00e9\u00e9e.","title":"Cr\u00e9ation d\u2019une table"},{"location":"Terminale/BDD/sql_python/#remplissage-de-la-table","text":"Maintenant que notre table LIVRES a \u00e9t\u00e9 cr\u00e9\u00e9e, nous allons pouvoir commencer \u00e0 la \"remplir\" avec des donn\u00e9es. Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( \"CREATE TABLE IF NOT EXISTS LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) cur . execute ( \"INSERT INTO LIVRES(id,titre,auteur,ann_publi,note) VALUES(1,'1984','Orwell',1949,10)\" ) conn . commit () cur . close () conn . close () Ouvrez le fichier baseDonnees.db \u00e0 l\u2019aide du logiciel DB Browser for SQLite et v\u00e9rifiez que les donn\u00e9es ont bien \u00e9t\u00e9 ajout\u00e9es \u00e0 la table LIVRES. Nous avons inclus les donn\u00e9es \u00e0 ins\u00e9rer directement dans la requ\u00eate. Il est possible de proc\u00e9der autrement en s\u00e9parant les donn\u00e9es \u00e0 ins\u00e9rer et la requ\u00eate (cela s\u2019av\u00e9rera particuli\u00e8rement pratique dans le futur) Apr\u00e8s avoir effac\u00e9 le fichier \"baseDonnees.db\", saisissez le programme ci-dessous, puis ex\u00e9cutez-le 1 2 3 4 5 6 7 8 9 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () data = ( 1 , '1984' , 'Orwell' , 1949 , 10 ) cur . execute ( \"CREATE TABLE IF NOT EXISTS LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) cur . execute ( \"INSERT INTO LIVRES(id,titre,auteur,ann_publi,note) VALUES(?, ?, ?, ?, ?)\" , data ) conn . commit () cur . close () conn . close () Premi\u00e8re chose \u00e0 remarquer, nous avons cr\u00e9\u00e9 un tuple (data) contenant toutes les informations. En effet, la m\u00e9thode \"execute\" peut prendre un deuxi\u00e8me param\u00e8tre un tuple contenant les donn\u00e9es \u00e0 ins\u00e9rer. Les points d\u2019interrogation pr\u00e9sents dans la requ\u00eate indiquent l\u2019emplacement des donn\u00e9es \u00e0 ins\u00e9rer. Le premier ? sera remplac\u00e9 par le premier \u00e9l\u00e9ment du tuple (dans notre cas 1), le deuxi\u00e8me ? sera remplac\u00e9 par le deuxi\u00e8me \u00e9l\u00e9ment du tuple (dans notre cas \u20191984\u2019) et ainsi de suite... Si l\u2019on d\u00e9sire ins\u00e9rer plusieurs donn\u00e9es, il est possible de regrouper toutes les donn\u00e9es \u00e0 ins\u00e9rer dans un tableau et d\u2019utiliser la m\u00e9thode \"executemany\" \u00e0 la place de la m\u00e9thode \"execute\". Apr\u00e8s avoir effac\u00e9 le fichier \"baseDonnees.db\", saisissez le programme ci-dessous, puis ex\u00e9cutez-le 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () datas = [ ( 1 , '1984' , 'Orwell' , 1949 , 10 ), ( 2 , 'Dune' , 'Herbert' , 1965 , 8 ), ( 3 , 'Fondation' , 'Asimov' , 1951 , 9 ), ( 4 , 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 5 , 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 6 , 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 7 , 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 8 , 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 9 , 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 10 , 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 11 , 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 12 , 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 13 , 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 14 , 'Le monde des \u00afA' , 'Van Vogt' , 1945 , 7 ), ( 15 , 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 16 , 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ) ] cur . execute ( \"CREATE TABLE IF NOT EXISTS LIVRES(id INT, titre TEXT, auteur TXT, ann_publi INT, note INT)\" ) cur . executemany ( \"INSERT INTO LIVRES(id,titre,auteur,ann_publi,note) VALUES(?, ?, ?, ?, ?)\" , datas ) conn . commit () cur . close () conn . close () Ouvrez le fichier baseDonnees.db \u00e0 l\u2019aide du logiciel DB Browser for SQLite et v\u00e9rifiez que les donn\u00e9es ont bien \u00e9t\u00e9 ajout\u00e9es \u00e0 la table LIVRES . Il n\u2019est pas tr\u00e8s pratique d\u2019avoir \u00e0 g\u00e9rer l\u2019id (cl\u00e9 primaire). En effet, si je veux ajouter un nouveau livre, il faudra que je connaisse l\u2019id du pr\u00e9c\u00e9dent (incr\u00e9mentation de l\u2019id). Heureusement, il est possible d\u2019automatiser cette incr\u00e9mentation. Apr\u00e8s avoir effac\u00e9 le fichier baseDonnees.db , saisissez le programme ci-dessous, puis ex\u00e9cutez-le 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () datas = [ ( '1984' , 'Orwell' , 1949 , 10 ), ( 'Dune' , 'Herbert' , 1965 , 8 ), ( 'Fondation' , 'Asimov' , 1951 , 9 ), ( 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 'Le monde des \u00afA' , 'Van Vogt' , 1945 , 7 ), ( 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ) ] cur . execute ( \"\"\" CREATE TABLE IF NOT EXISTS LIVRES (id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE, titre TEXT, auteur TXT, ann_publi INT, note INT) \"\"\" ) cur . executemany ( \"INSERT INTO LIVRES(titre,auteur,ann_publi,note) VALUES(?, ?, ?, ?)\" , datas ) conn . commit () cur . close () conn . close () Ouvrez le fichier baseDonnees.db \u00e0 l\u2019aide du logiciel DB Browser for SQLite et v\u00e9rifiez que les donn\u00e9es ont bien \u00e9t\u00e9 ajout\u00e9es \u00e0 la table LIVRES . Vous pouvez constater que nous avons bien l\u2019attribut \"id\", m\u00eame si ce dernier n\u2019a pas \u00e9t\u00e9 renseign\u00e9 dans les donn\u00e9es (absence d\u2019id dans le tableau datas). D\u00e9sormais l\u2019id sera incr\u00e9ment\u00e9 automatiquement gr\u00e2ce au id INTEGER PRIMARY KEY AUTOINCREMENT UNIQUE (attention il est n\u00e9cessaire d\u2019utiliser INTEGER \u00e0 la place du INT habituel) pr\u00e9sent dans la requ\u00eate de cr\u00e9ation de la table LIVRES . Attention, de bien penser \u00e0 supprimer un ? dans la requ\u00eate d\u2019insertion (chaque tuple contient maintenant 4 \u00e9l\u00e9ments (nous en avions 5 quand l\u2019id n\u2019\u00e9tait pas g\u00e9r\u00e9 automatiquement)). Il est tout \u00e0 fait possible de rajouter une nouvelle donn\u00e9e. Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () nvx_data = ( 'Hyp\u00e9rion' , 'Simmons' , 1989 , 8 ) cur . execute ( \"INSERT INTO LIVRES(titre,auteur,ann_publi,note) VALUES(?, ?, ?, ?)\" , nvx_data ) conn . commit () cur . close () conn . close () Ouvrez le fichier baseDonnees.db \u00e0 l\u2019aide du logiciel DB Browser for SQLite et v\u00e9rifiez que les donn\u00e9es ont bien \u00e9t\u00e9 ajout\u00e9es \u00e0 la table LIVRES . Vous pouvez remarquer que le nouvel enregistrement a bien l\u2019id 17 et que nous n\u2019avons pas eu \u00e0 nous en occuper.","title":"Remplissage de la table"},{"location":"Terminale/BDD/sql_python/#modification-de-la-base-de-donnees","text":"Il est possible de modifier des donn\u00e9es d\u00e9j\u00e0 pr\u00e9sentes dans la table. Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () modif = ( 7 , 'Hyp\u00e9rion' ) cur . execute ( 'UPDATE LIVRES SET note = ? WHERE titre = ?' , modif ) conn . commit () cur . close () conn . close () Ouvrez le fichier \"baseDonnees.db\" \u00e0 l\u2019aide du logiciel \"DB Browser for SQLite\" et v\u00e9rifiez que les donn\u00e9es ont bien \u00e9t\u00e9 modifi\u00e9es dans la table LIVRES. Comme vous pouvez le constater, il est possible d\u2019utiliser la clause WHERE avec un ?","title":"Modification de la base de donn\u00e9es"},{"location":"Terminale/BDD/sql_python/#suppression-dans-une-base-de-donnees","text":"Il est aussi possible de supprimer une donn\u00e9e. Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () suppr = ( 'Hyp\u00e9rion' ,) cur . execute ( 'DELETE FROM LIVRES WHERE titre = ?' , suppr ) conn . commit () cur . close () conn . close () Ouvrez le fichier baseDonnees.db \u00e0 l\u2019aide du logiciel DB Browser for SQLite et v\u00e9rifiez que l\u2019entr\u00e9e \"Hyp\u00e9rion\" a \u00e9t\u00e9 supprim\u00e9e de la table LIVRES. Attention, le deuxi\u00e8me param\u00e8tre de la m\u00e9thode execute doit \u00eatre un tuple, si on \u00e9crit seulement suppr = (\u2019Hyp\u00e9rion\u2019), suppr est une chaine de caract\u00e8re et pas un tuple. Pour avoir un tuple avec un seul \u00e9l\u00e9ment il est n\u00e9cessaire d\u2019ajouter une virgule (d\u2019o\u00f9 le suppr = (\u2019Hyp\u00e9rion\u2019,))","title":"Suppression dans une base de donn\u00e9es"},{"location":"Terminale/BDD/sql_python/#requete-avec-select","text":"Enfin, pour terminer cette introduction sur l\u2019utilisation de sqlite en Python, nous devons nous int\u00e9resser aux requ\u00eates de type SELECT : Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( 'SELECT * FROM LIVRES' ) conn . commit () liste = cur . fetchall () cur . close () conn . close () \u00c0 l\u2019aide de la console, d\u00e9terminez la valeur r\u00e9f\u00e9renc\u00e9e par la variable liste Comme vous pouvez le constater, la variable liste est un tableau qui contient des tuples. Chaque tuple est un enregistrement de la table LIVRES . La m\u00e9thode fetchall d\u2019un objet de type cursor renvoie un tableau contenant des tuples. Il est possible d\u2019avoir des requ\u00eates plus s\u00e9lectives : Saisissez le programme ci-dessous, puis ex\u00e9cutez-le. 1 2 3 4 5 6 7 8 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () cur . execute ( 'SELECT titre FROM LIVRES WHERE ann_publi < 1970' ) conn . commit () liste = cur . fetchall () cur . close () conn . close () \u00c0 l\u2019aide de la console, d\u00e9terminez la valeur r\u00e9f\u00e9renc\u00e9e par la variable liste Vous pouvez constater que l\u2019on obtient bien un tableau contenant des tuples (nous avons bien des tuples m\u00eame si seuls les titres ont \u00e9t\u00e9 s\u00e9lectionn\u00e9s). Il est possible d\u2019utiliser les points d\u2019interrogation dans une requ\u00eate de type SELECT . Saisissez le programme ci-dessous, puis ex\u00e9cutez-le 1 2 3 4 5 6 7 8 9 import sqlite3 conn = sqlite3 . connect ( 'baseDonnees.db' ) cur = conn . cursor () recherche = ( 1960 , 8 ) cur . execute ( 'SELECT titre FROM LIVRES WHERE ann_publi < ? AND note > ?' , recherche ) conn . commit () liste = cur . fetchall () cur . close () conn . close () \u00c0 l\u2019aide de la console, d\u00e9terminez la valeur r\u00e9f\u00e9renc\u00e9e par la variable liste","title":"Requ\u00eate avec SELECT"},{"location":"Terminale/BDD/sql_sqlite/","text":"SQL # Notion de SGBD relationnel # Un Syst\u00e8me de Gestion de Base de Donn\u00e9e doit r\u00e9pondre aux objectifs suivants : ind\u00e9pendance physique : la fa\u00e7on dont les donn\u00e9es sont d\u00e9finies doit ind\u00e9pendantes des structures de stockage utilis\u00e9es. ind\u00e9pendance logique : un m\u00eame ensemble de donn\u00e9es peut-\u00eatre vu diff\u00e9remment par des utilisateurs diff\u00e9rents. Toutes ces visions personnelles des donn\u00e9es doivent \u00eatre int\u00e9gr\u00e9es dans une vision globale. acc\u00e8s aux donn\u00e9es : l\u2019acc\u00e8s aux donn\u00e9es se fait par l\u2019interm\u00e9diaire d\u2019un langage de manipulation de donn\u00e9e. Il est crucial que ce langage permette d\u2019obtenir des r\u00e9ponses aux requ\u00eates en un temps \"raisonnable\". Ce langage doit donc \u00eatre optimis\u00e9, minimiser le nombre d\u2019acc\u00e8s au disques et tout cela de fa\u00e7on totalement transparente pour l\u2019utilisateur. administration centralis\u00e9e des donn\u00e9es (int\u00e9gration) : toutes les donn\u00e9es doivent \u00eatre centralis\u00e9es dans un r\u00e9servoir unique commun \u00e0 toutes les applications. non-redondance des donn\u00e9es : afin d\u2019\u00e9viter les probl\u00e8mes lors des mises \u00e0 jour, chaque donn\u00e9e ne doit pas \u00eatre pr\u00e9sente qu\u2019une seule fois dans la base de donn\u00e9es. coh\u00e9rence des donn\u00e9es : les donn\u00e9es sont soumises \u00e0 un certain nombre de contraintes d\u2019int\u00e9grit\u00e9 qui d\u00e9finissent un \u00e9tat coh\u00e9rent de la base. Elles doivent \u00eatre exprim\u00e9es simplement et v\u00e9rifi\u00e9es automatiquement \u00e0 chaque insertion, modification ou suppression des donn\u00e9es. partage des donn\u00e9es : il s\u2019agit de permettre \u00e0 plusieurs utilisateurs d\u2019acc\u00e9der aux m\u00eames donn\u00e9es au m\u00eame moment de mani\u00e8re transparente. si ce probl\u00e8me est simple \u00e0 r\u00e9soudre quand il s\u2019agit d\u2019interrogations, cela ne l\u2019est plus quand il s\u2019agit de modifications dans un contexte multi-utilisateurs. s\u00e9curit\u00e9 des donn\u00e9es : les donn\u00e9es doivent \u00eatre prot\u00e9g\u00e9es contre les acc\u00e8s non autoris\u00e9es. Pour cela, il faut pouvoir associer \u00e0 chaque utilisateur des droits d\u2019acc\u00e8s aux donn\u00e9es. r\u00e9sistances aux pannes : que se passe-t-il si une panne survient lors d\u2019une modification de la base de donn\u00e9es, si certains fichiers deviennent illisibles ? Il faut pouvoir r\u00e9cup\u00e9rer une base de donn\u00e9es dans un \u00e9tat \"sain\". Ainsi, apr\u00e8s une panne intervenant au milieu d\u2019une modification, deux solutions sont possibles : soit r\u00e9cup\u00e9rer les donn\u00e9es dans l\u2019\u00e9tat dans lequel elles \u00e9taient avant la modification, soit terminer l\u2019op\u00e9ration interrompue. Parmi les SGBD, les plus connus, on peut citer MySQL, PostgreSQL,SQLite, Oracle Database, Microsoft SQL Server et Microsoft Access. Nous utiliserons SQlite. Le langage SQL et le SGBD SQlite # Nous allons maintenant apprendre \u00e0 r\u00e9aliser des requ\u00eates, c\u2019est-\u00e0-dire que nous allons apprendre \u00e0 cr\u00e9er une base des donn\u00e9es, cr\u00e9er des attributs, ajouter de donn\u00e9es, modifier des donn\u00e9es et enfin, nous allons surtout apprendre \u00e0 interroger une base de donn\u00e9es afin d\u2019obtenir des informations. Pour r\u00e9aliser toutes ces requ\u00eates, nous allons devoir apprendre un langage de requ\u00eates : SQL (Structured Query Language). SQL est propre aux bases de donn\u00e9es relationnelles, les autres types de bases de donn\u00e9es utilisent d\u2019autres langages pour effectuer des requ\u00eates. Pour cr\u00e9er une base de donn\u00e9es et effectuer des requ\u00eates sur cette derni\u00e8re, nous allons utiliser le logiciel https://sqlitebrowser.org . Cr\u00e9ation de notre premi\u00e8re base de donn\u00e9es # Apr\u00e8s avoir install\u00e9 et lanc\u00e9 le logiciel \"DB Browser for SQLite\", vous devriez obtenir ceci : Cliquez sur Nouvelle base de donn\u00e9es. Apr\u00e8s avoir choisi un nom pour votre base de donn\u00e9es (exemple par exemple \"db_livres.db\"), vous devriez avoir la fen\u00eatre suivante : Mais pour l\u2019instant elle ne contient aucune table (aucune relation), pour cr\u00e9er une table, cliquez sur l\u2019onglet \"Ex\u00e9cuter le SQL\". On obtient alors : Copiez-collez le texte ci-dessous dans la fen\u00eatre \"SQL 1\" 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT ); Cliquez ensuite sur le petit triangle situ\u00e9 au-dessus de la fen\u00eatre SQL 1 (ou appuyez sur F5), vous devriez avoir ceci : Comme indiqu\u00e9 dans la fen\u00eatre, \"Requ\u00eate ex\u00e9cut\u00e9e avec succ\u00e8s\" ! Vous venez de cr\u00e9er votre premi\u00e8re table. Explications : Revenons sur cette premi\u00e8re requ\u00eate : Le CREATE TABLE LIVRES ne devrait pas vous poser de probl\u00e8me : nous cr\u00e9ons une nouvelle table nomm\u00e9e \"LIVRES\". La suite est \u00e0 peine plus complexe, nous cr\u00e9ons ensuite les attributs : id titre auteur ann_pulbi note Nous avons pour chaque attribut pr\u00e9cis\u00e9 son domaine : id : entier (INT), titre : cha\u00eene de caract\u00e8res (TEXT), auteur : cha\u00eene de caract\u00e8res, ann_publi : entier et note : entier L\u2019attribut \"id\" va jouer ici le r\u00f4le de cl\u00e9 primaire. On peut aussi, par souci de s\u00e9curit\u00e9 (afin d\u2019\u00e9viter que l\u2019on utilise 2 fois la m\u00eame valeur pour l\u2019attribut \"id\"), modifier le l\u2019instruction SQL vue ci-dessus, afin de pr\u00e9ciser que l\u2019attribut \"id\" est bien notre cl\u00e9 primaire : 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT , PRIMARY KEY ( id )); Notre syst\u00e8me de gestion de base de donn\u00e9es nous avertira si l\u2019on tente d\u2019attribuer 2 fois la m\u00eame valeur \u00e0 l\u2019attribut\"id\". Nous allons maintenant ajouter des donn\u00e9es : Toujours dans l\u2019onglet \"Ex\u00e9cuter le SQL\", apr\u00e8s avoir effac\u00e9 la fen\u00eatre SQL 1, copiez-collez dans cette m\u00eame fen\u00eatre la requ\u00eate ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 1 , '1984' , 'Orwell' , 1949 , 10 ), ( 2 , 'Dune' , 'Herbert' , 1965 , 8 ), ( 3 , 'Fondation' , 'Asimov' , 1951 , 9 ), ( 4 , 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 5 , 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 6 , 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 7 , 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 8 , 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 9 , 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 10 , 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 11 , 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 12 , 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 13 , 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 14 , 'Le monde des \u00afA' , 'Van Vogt' , 1945 , 7 ), ( 15 , 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 16 , 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ); Ici aussi, aucun probl\u00e8me, la requ\u00eate a bien \u00e9t\u00e9 ex\u00e9cut\u00e9e : La table LIVRES contient bien les donn\u00e9es souhait\u00e9es (onglet \"Parcourir les donn\u00e9es\") : Requ\u00eates d\u2019interrogations de la base de donn\u00e9es # Nous allons apprendre \u00e0 effectuer des requ\u00eates d\u2019interrogation sur la base de donn\u00e9es que nous venons de cr\u00e9er. Toutes les requ\u00eates se feront dans la fen\u00eatre SQL 1 de l\u2019onglet \"Ex\u00e9cuter le SQL\" Requ\u00eate avec SELECT et FROM # 1 2 SELECT id , titre , auteur , ann_publi , note FROM LIVRES puis appuyez sur le triangle (ou la touche F5). Vous devriez voir s\u2019afficher ceci : Comme vous pouvez le constater, notre requ\u00eate SQL a permis d\u2019afficher tous les livres. Nous avons ici 2 mots cl\u00e9s du langage SQL SELECT qui permet de s\u00e9lectionner les attributs qui devront \u00eatre \"affich\u00e9s\" (je mets \"affich\u00e9s\" entre guillemets, car le but d\u2019une requ\u00eate sql n\u2019est pas forc\u00e9ment d\u2019afficher les donn\u00e9es) et FROM qui indique la table qui doit \u00eatre utilis\u00e9e. Il est \u00e9videmment possible d\u2019afficher seulement certains attributs (ou m\u00eame un seul) qui indique la table qui doit \u00eatre utilis\u00e9e. Remarque : on aurait pu \u00e9crire \u00e9galement pour obtenir tous les attributs : 1 2 SELECT * FROM LIVRES Exercice 1 : \u00c9crivez et testez une requ\u00eate permettant d\u2019obtenir uniquement uniquement les titres et les auteurs des livres Exercice 2 : \u00c9crivez et testez une requ\u00eate permettant d\u2019obtenir uniquement les titres des livres Requ\u00eate avec condition : WHERE, AND, OR # Il est possible d\u2019utiliser la clause WHERE afin d\u2019imposer une (ou des) condition(s) permettant de s\u00e9lectionner uniquement certaines lignes. La condition doit suivre le mot-cl\u00e9 WHERE . Exemple : 1 2 3 SELECT titre , ann_publi FROM LIVRES WHERE auteur = 'Asimov' V\u00e9rifiez que vous obtenez bien uniquement les livres \u00e9crits par Isaac Asimov. Exercice 3 : \u00c9crivez et testez une requ\u00eate permettant d\u2019obtenir uniquement les titres des livres \u00e9crits par Philip K.Dick. Il est possible de combiner les conditions \u00e0 l\u2019aide d\u2019un OR ou d\u2019un AND . 1 2 3 SELECT titre , ann_publi FROM LIVRES WHERE auteur = 'Asimov' AND ann_publi > 1953 V\u00e9rifiez que nous obtenons bien le livre \u00e9crit par Asimov publi\u00e9 apr\u00e8s 1953 (comme vous l\u2019avez sans doute remarqu\u00e9, il est possible d\u2019utiliser les op\u00e9rateurs d\u2019in\u00e9galit\u00e9s). Exercice 4 : \u00c9crire une requ\u00eate permettant d\u2019obtenir les titres des livres publi\u00e9s apr\u00e8s 1945 qui ont une note sup\u00e9rieure ou \u00e9gale \u00e0 9. Obtenir des r\u00e9ponses dans un ordre pr\u00e9cis avec ORDER BY # Il est aussi possible de rajouter la clause SQL ORDER BY afin d\u2019obtenir les r\u00e9sultats class\u00e9s dans un ordre pr\u00e9cis. Exemple : 1 2 SELECT id , titre , auteur , ann_publi , note FROM LIVRES ORDER by ann_publi ou bien : 1 2 3 SELECT titre FROM LIVRES WHERE auteur = 'Asimov' ORDER BY ann_publi Il est possible d\u2019obtenir un classement en sens inverse \u00e0 l\u2019aide de la clause DESC qu\u2019il faut ajouter apr\u00e8s l\u2019attribut de tri. Exercice 5 : \u00c9crire la requ\u00eate pour obtenir les livres de K.Dick class\u00e9s du plus r\u00e9cent au plus ancien. On remarque qu\u2019il est possible d\u2019\u00e9viter les doublons gr\u00e2ce \u00e0 la clause DISTINCT . \u00c9viter les doublons avec DISTINCT # Tapez la req\u00eate suivante : 1 2 SELECT auteur FROM LIVRES Et comparez la \u00e0 celle-ci : 1 2 SELECT DISTINCT auteur FROM LIVRES Les jointures # Gr\u00e2ce aux jointures nous allons pouvoir associer 2 tables dans une m\u00eame requ\u00eate. En g\u00e9n\u00e9ral, les jointures consistent \u00e0 associer des lignes de 2 tables. Elles permettent d\u2019\u00e9tablir un lien entre 2 tables. Qui dit lien entre 2 tables dit souvent clef \u00e9trang\u00e8re et clef primaire. Cr\u00e9er une nouvelle base de donn\u00e9es par exemple db_livres_auteurs.db dans laquelle vous cr\u00e9erez deux nouvelles tables : la table AUTEUR et la table LIVRE . 1 2 3 4 5 CREATE TABLE AUTEURS ( id INT , nom TEXT , prenom TEXT , ann_naissance INT , langue_ecriture TEXT , PRIMARY KEY ( id )); CREATE TABLE LIVRES ( id INT , titre TEXT , id_auteur INT , ann_publi INT , note INT , PRIMARY KEY ( id )); Remarque : on aurait pu aussi \u00e9crire : 1 2 3 CREATE TABLE LIVRES ( id INT , titre TEXT , id_auteur INT , ann_publi INT , note INT , PRIMARY KEY ( id ), FOREIGN KEY ( id_auteur ) REFERENCES AUTEURS ( id )); Gr\u00e2ce \u00e0 cette pr\u00e9cision, sqlite sera capable de d\u00e9tecter les anomalies au niveau de cl\u00e9 \u00e9trang\u00e8re : essayez par exemple d\u2019ajouter un livre \u00e0 la table LIVRES avec l\u2019attribut \"id_auteur\" \u00e9gal \u00e0 11 ! Exercice 6 : Remplissez les tables avec leurs donn\u00e9es (cf cours pr\u00e9c\u00e9dents). R\u00e9alisons maintenant la jointure entre les deux tables : 1 2 3 SELECT * FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id Le FROM LIVRES INNER JOIN AUTEURS permet de cr\u00e9er une jointure entre les tables LIVRES et AUTEURS (\"rassembler\" les tables LIVRES et AUTEURS en une seule grande table). Le ON LIVRES.id_auteur = AUTEURS.id signifie qu\u2019une ligne quelconque A de la table LIVRES devra \u00eatre fusionn\u00e9e avec la ligne B de la table AUTEURS \u00e0 condition que l\u2019attribut id de la ligne A soit \u00e9gal \u00e0 l\u2019attribut id_auteur de la ligne B. Par exemple, la ligne 1 ( id=1 ) de la table LIVRES (que l\u2019on nommera dans la suite ligne A) sera fusionn\u00e9e avec la ligne 1 ( id=1 ) de la table AUTEURS (que l\u2019on nommera dans la suite B) car l\u2019attribut id_auteur de la ligne A est \u00e9gal \u00e0 1 et l\u2019attribut id de la ligne B est aussi \u00e9gal \u00e0 1. Autre exemple, la ligne 1 ( id=1 ) de la table LIVRES (que l\u2019on nommera dans la suite ligne A) ne sera pas fusionn\u00e9e avec la ligne 2 (id=2) de la table AUTEURS (que l\u2019on nommera dans la suite B\u2019) car l\u2019attribut id_auteur de la ligne A est \u00e9gal \u00e0 1 alors que l\u2019attribut id de la ligne B\u2019 est \u00e9gal \u00e0 2. Exercice 7 : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT * FROM AUTEURS INNER JOIN LIVRES ON LIVRES . id_auteur = AUTEURS . id Comme vous pouvez le constater, le r\u00e9sultat est diff\u00e9rent, cette fois-ci ce sont les lignes de la table LIVRES qui viennent se greffer sur la table AUTEURS. Dans le cas d\u2019une jointure, il est tout \u00e0 fait possible de s\u00e9lectionner certains attributs et pas d\u2019autres : Exercice 8 : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT nom , prenom , titre FROM AUTEURS INNER JOIN LIVRES ON LIVRES . id_auteur = AUTEURS . id Exercice 9 : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT titre , nom , prenom FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id Si un m\u00eame nom d\u2019attribut est pr\u00e9sent dans les 2 tables (par exemple ici l\u2019attribut id ), il est n\u00e9cessaire d\u2019ajouter le nom de la table devant afin de pouvoir les distinguer ( AUTEURS.id et LIVRES.id ) Exercice 10 : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT titre , AUTEURS . id , nom , prenom FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id Il est possible d\u2019utiliser la clause WHERE dans le cas d\u2019une jointure : Exercice 11 : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 4 SELECT titre , nom , prenom FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id WHERE ann_publi > 1950 Enfin, pour terminer avec les jointures, vous devez savoir que nous avons abord\u00e9 la jointure la plus simple ( INNER JOIN ). Il existe des jointures plus complexes ( CROSS JOIN , LEFT JOIN , RIGHT JOIN ), ces autres jointures ne seront pas abord\u00e9es ici. Requ\u00eates de mise \u00e0 jour : INSERT, UPDATE, DELETE # Nous allons repartir avec une base de donn\u00e9es qui contient une seule table : Cr\u00e9ez une nouvelle base de donn\u00e9es que vous nommerez par exemple db_livres.db Cr\u00e9ez une table LIVRES \u00e0 l\u2019aide de la requ\u00eate SQL suivante : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT , PRIMARY KEY ( id )); Ajoutez des donn\u00e9es \u00e0 la table LIVRES \u00e0 l \u2019 aide de la requ\u00eate SQL suivante : INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 1 , '1984' , 'Orwell' , 1949 , 10 ), ( 2 , 'Dune' , 'Herbert' , 1965 , 8 ), ( 3 , 'Fondation' , 'Asimov' , 1951 , 9 ), ( 4 , 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 5 , 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 6 , 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 7 , 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 8 , 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 9 , 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 10 , 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 11 , 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 12 , 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 13 , 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 14 , 'Le monde des \u00afA' , 'Van Vogt' , 1945 , 7 ), ( 15 , 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 16 , 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ); Nous avons d\u00e9j\u00e0 eu l\u2019occasion de voir la requ\u00eate permettant d\u2019ajouter une entr\u00e9e (utilisation d\u2019INSERT) Exercice 12 : Que va faire cette requ\u00eate ? Vous pourrez v\u00e9rifier votre r\u00e9ponse en faisant une requ\u00eate SELECT * FROM LIVRES . 1 2 3 4 INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 17 , 'Hyp\u00e9rion' , 'Simmons' , 1989 , 8 ); Exercice 13 : \u00c9crivez et testez une requ\u00eate permettant d\u2019ajouter le livre de votre choix \u00e0 la table LIVRES . UPDATE va permettre de modifier une ou des entr\u00e9es. Nous utiliserons WHERE , comme dans le cas d\u2019un SELECT , pour sp\u00e9cifier les entr\u00e9es \u00e0 modifier. Voici un exemple de modification : Exercice 14 : Que va faire cette requ\u00eate ? Vous pourrez v\u00e9rifier votre r\u00e9ponse en faisant une requ\u00eate SELECT * FROM LIVRES . 1 2 3 UPDATE LIVRES SET note = 7 WHERE titre = 'Hyp\u00e9rion' Exercice 15 : \u00c9crivez une requ\u00eate permettant d\u2019attribuer la note de 10 \u00e0 tous les livres \u00e9crits par Asimov publi\u00e9s apr\u00e8s 1950. Testez cette requ\u00eate. DELETE est utilis\u00e9e pour effectuer la suppression d\u2019une (ou de plusieurs) entr\u00e9e(s). Ici aussi c\u2019est le WHERE qui permettra de s\u00e9lectionner les entr\u00e9es \u00e0 supprimer. Exercice 16 : Que va faire cette requ\u00eate ? V\u00e9rifiez votre r\u00e9ponse en l\u2019ex\u00e9cutant et en faisant une requ\u00eate SELECT * FROM LIVRES . 1 2 DELETE FROM LIVRES WHERE titre = 'Hyp\u00e9rion' Exercice 17 : \u00c9crivez une requ\u00eate permettant de supprimer les livres publi\u00e9s avant 1945. Testez cette requ\u00eate.","title":"SQL avec SQLITE"},{"location":"Terminale/BDD/sql_sqlite/#sql","text":"","title":"SQL"},{"location":"Terminale/BDD/sql_sqlite/#notion-de-sgbd-relationnel","text":"Un Syst\u00e8me de Gestion de Base de Donn\u00e9e doit r\u00e9pondre aux objectifs suivants : ind\u00e9pendance physique : la fa\u00e7on dont les donn\u00e9es sont d\u00e9finies doit ind\u00e9pendantes des structures de stockage utilis\u00e9es. ind\u00e9pendance logique : un m\u00eame ensemble de donn\u00e9es peut-\u00eatre vu diff\u00e9remment par des utilisateurs diff\u00e9rents. Toutes ces visions personnelles des donn\u00e9es doivent \u00eatre int\u00e9gr\u00e9es dans une vision globale. acc\u00e8s aux donn\u00e9es : l\u2019acc\u00e8s aux donn\u00e9es se fait par l\u2019interm\u00e9diaire d\u2019un langage de manipulation de donn\u00e9e. Il est crucial que ce langage permette d\u2019obtenir des r\u00e9ponses aux requ\u00eates en un temps \"raisonnable\". Ce langage doit donc \u00eatre optimis\u00e9, minimiser le nombre d\u2019acc\u00e8s au disques et tout cela de fa\u00e7on totalement transparente pour l\u2019utilisateur. administration centralis\u00e9e des donn\u00e9es (int\u00e9gration) : toutes les donn\u00e9es doivent \u00eatre centralis\u00e9es dans un r\u00e9servoir unique commun \u00e0 toutes les applications. non-redondance des donn\u00e9es : afin d\u2019\u00e9viter les probl\u00e8mes lors des mises \u00e0 jour, chaque donn\u00e9e ne doit pas \u00eatre pr\u00e9sente qu\u2019une seule fois dans la base de donn\u00e9es. coh\u00e9rence des donn\u00e9es : les donn\u00e9es sont soumises \u00e0 un certain nombre de contraintes d\u2019int\u00e9grit\u00e9 qui d\u00e9finissent un \u00e9tat coh\u00e9rent de la base. Elles doivent \u00eatre exprim\u00e9es simplement et v\u00e9rifi\u00e9es automatiquement \u00e0 chaque insertion, modification ou suppression des donn\u00e9es. partage des donn\u00e9es : il s\u2019agit de permettre \u00e0 plusieurs utilisateurs d\u2019acc\u00e9der aux m\u00eames donn\u00e9es au m\u00eame moment de mani\u00e8re transparente. si ce probl\u00e8me est simple \u00e0 r\u00e9soudre quand il s\u2019agit d\u2019interrogations, cela ne l\u2019est plus quand il s\u2019agit de modifications dans un contexte multi-utilisateurs. s\u00e9curit\u00e9 des donn\u00e9es : les donn\u00e9es doivent \u00eatre prot\u00e9g\u00e9es contre les acc\u00e8s non autoris\u00e9es. Pour cela, il faut pouvoir associer \u00e0 chaque utilisateur des droits d\u2019acc\u00e8s aux donn\u00e9es. r\u00e9sistances aux pannes : que se passe-t-il si une panne survient lors d\u2019une modification de la base de donn\u00e9es, si certains fichiers deviennent illisibles ? Il faut pouvoir r\u00e9cup\u00e9rer une base de donn\u00e9es dans un \u00e9tat \"sain\". Ainsi, apr\u00e8s une panne intervenant au milieu d\u2019une modification, deux solutions sont possibles : soit r\u00e9cup\u00e9rer les donn\u00e9es dans l\u2019\u00e9tat dans lequel elles \u00e9taient avant la modification, soit terminer l\u2019op\u00e9ration interrompue. Parmi les SGBD, les plus connus, on peut citer MySQL, PostgreSQL,SQLite, Oracle Database, Microsoft SQL Server et Microsoft Access. Nous utiliserons SQlite.","title":"Notion de SGBD relationnel"},{"location":"Terminale/BDD/sql_sqlite/#le-langage-sql-et-le-sgbd-sqlite","text":"Nous allons maintenant apprendre \u00e0 r\u00e9aliser des requ\u00eates, c\u2019est-\u00e0-dire que nous allons apprendre \u00e0 cr\u00e9er une base des donn\u00e9es, cr\u00e9er des attributs, ajouter de donn\u00e9es, modifier des donn\u00e9es et enfin, nous allons surtout apprendre \u00e0 interroger une base de donn\u00e9es afin d\u2019obtenir des informations. Pour r\u00e9aliser toutes ces requ\u00eates, nous allons devoir apprendre un langage de requ\u00eates : SQL (Structured Query Language). SQL est propre aux bases de donn\u00e9es relationnelles, les autres types de bases de donn\u00e9es utilisent d\u2019autres langages pour effectuer des requ\u00eates. Pour cr\u00e9er une base de donn\u00e9es et effectuer des requ\u00eates sur cette derni\u00e8re, nous allons utiliser le logiciel https://sqlitebrowser.org .","title":"Le langage SQL et le SGBD SQlite"},{"location":"Terminale/BDD/sql_sqlite/#creation-de-notre-premiere-base-de-donnees","text":"Apr\u00e8s avoir install\u00e9 et lanc\u00e9 le logiciel \"DB Browser for SQLite\", vous devriez obtenir ceci : Cliquez sur Nouvelle base de donn\u00e9es. Apr\u00e8s avoir choisi un nom pour votre base de donn\u00e9es (exemple par exemple \"db_livres.db\"), vous devriez avoir la fen\u00eatre suivante : Mais pour l\u2019instant elle ne contient aucune table (aucune relation), pour cr\u00e9er une table, cliquez sur l\u2019onglet \"Ex\u00e9cuter le SQL\". On obtient alors : Copiez-collez le texte ci-dessous dans la fen\u00eatre \"SQL 1\" 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT ); Cliquez ensuite sur le petit triangle situ\u00e9 au-dessus de la fen\u00eatre SQL 1 (ou appuyez sur F5), vous devriez avoir ceci : Comme indiqu\u00e9 dans la fen\u00eatre, \"Requ\u00eate ex\u00e9cut\u00e9e avec succ\u00e8s\" ! Vous venez de cr\u00e9er votre premi\u00e8re table. Explications : Revenons sur cette premi\u00e8re requ\u00eate : Le CREATE TABLE LIVRES ne devrait pas vous poser de probl\u00e8me : nous cr\u00e9ons une nouvelle table nomm\u00e9e \"LIVRES\". La suite est \u00e0 peine plus complexe, nous cr\u00e9ons ensuite les attributs : id titre auteur ann_pulbi note Nous avons pour chaque attribut pr\u00e9cis\u00e9 son domaine : id : entier (INT), titre : cha\u00eene de caract\u00e8res (TEXT), auteur : cha\u00eene de caract\u00e8res, ann_publi : entier et note : entier L\u2019attribut \"id\" va jouer ici le r\u00f4le de cl\u00e9 primaire. On peut aussi, par souci de s\u00e9curit\u00e9 (afin d\u2019\u00e9viter que l\u2019on utilise 2 fois la m\u00eame valeur pour l\u2019attribut \"id\"), modifier le l\u2019instruction SQL vue ci-dessus, afin de pr\u00e9ciser que l\u2019attribut \"id\" est bien notre cl\u00e9 primaire : 1 2 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT , PRIMARY KEY ( id )); Notre syst\u00e8me de gestion de base de donn\u00e9es nous avertira si l\u2019on tente d\u2019attribuer 2 fois la m\u00eame valeur \u00e0 l\u2019attribut\"id\". Nous allons maintenant ajouter des donn\u00e9es : Toujours dans l\u2019onglet \"Ex\u00e9cuter le SQL\", apr\u00e8s avoir effac\u00e9 la fen\u00eatre SQL 1, copiez-collez dans cette m\u00eame fen\u00eatre la requ\u00eate ci-dessous : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 1 , '1984' , 'Orwell' , 1949 , 10 ), ( 2 , 'Dune' , 'Herbert' , 1965 , 8 ), ( 3 , 'Fondation' , 'Asimov' , 1951 , 9 ), ( 4 , 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 5 , 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 6 , 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 7 , 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 8 , 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 9 , 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 10 , 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 11 , 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 12 , 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 13 , 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 14 , 'Le monde des \u00afA' , 'Van Vogt' , 1945 , 7 ), ( 15 , 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 16 , 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ); Ici aussi, aucun probl\u00e8me, la requ\u00eate a bien \u00e9t\u00e9 ex\u00e9cut\u00e9e : La table LIVRES contient bien les donn\u00e9es souhait\u00e9es (onglet \"Parcourir les donn\u00e9es\") :","title":"Cr\u00e9ation de notre premi\u00e8re base de donn\u00e9es"},{"location":"Terminale/BDD/sql_sqlite/#requetes-dinterrogations-de-la-base-de-donnees","text":"Nous allons apprendre \u00e0 effectuer des requ\u00eates d\u2019interrogation sur la base de donn\u00e9es que nous venons de cr\u00e9er. Toutes les requ\u00eates se feront dans la fen\u00eatre SQL 1 de l\u2019onglet \"Ex\u00e9cuter le SQL\"","title":"Requ\u00eates d\u2019interrogations de la base de donn\u00e9es"},{"location":"Terminale/BDD/sql_sqlite/#requete-avec-select-et-from","text":"1 2 SELECT id , titre , auteur , ann_publi , note FROM LIVRES puis appuyez sur le triangle (ou la touche F5). Vous devriez voir s\u2019afficher ceci : Comme vous pouvez le constater, notre requ\u00eate SQL a permis d\u2019afficher tous les livres. Nous avons ici 2 mots cl\u00e9s du langage SQL SELECT qui permet de s\u00e9lectionner les attributs qui devront \u00eatre \"affich\u00e9s\" (je mets \"affich\u00e9s\" entre guillemets, car le but d\u2019une requ\u00eate sql n\u2019est pas forc\u00e9ment d\u2019afficher les donn\u00e9es) et FROM qui indique la table qui doit \u00eatre utilis\u00e9e. Il est \u00e9videmment possible d\u2019afficher seulement certains attributs (ou m\u00eame un seul) qui indique la table qui doit \u00eatre utilis\u00e9e. Remarque : on aurait pu \u00e9crire \u00e9galement pour obtenir tous les attributs : 1 2 SELECT * FROM LIVRES Exercice 1 : \u00c9crivez et testez une requ\u00eate permettant d\u2019obtenir uniquement uniquement les titres et les auteurs des livres Exercice 2 : \u00c9crivez et testez une requ\u00eate permettant d\u2019obtenir uniquement les titres des livres","title":"Requ\u00eate avec SELECT et FROM"},{"location":"Terminale/BDD/sql_sqlite/#requete-avec-condition-where-and-or","text":"Il est possible d\u2019utiliser la clause WHERE afin d\u2019imposer une (ou des) condition(s) permettant de s\u00e9lectionner uniquement certaines lignes. La condition doit suivre le mot-cl\u00e9 WHERE . Exemple : 1 2 3 SELECT titre , ann_publi FROM LIVRES WHERE auteur = 'Asimov' V\u00e9rifiez que vous obtenez bien uniquement les livres \u00e9crits par Isaac Asimov. Exercice 3 : \u00c9crivez et testez une requ\u00eate permettant d\u2019obtenir uniquement les titres des livres \u00e9crits par Philip K.Dick. Il est possible de combiner les conditions \u00e0 l\u2019aide d\u2019un OR ou d\u2019un AND . 1 2 3 SELECT titre , ann_publi FROM LIVRES WHERE auteur = 'Asimov' AND ann_publi > 1953 V\u00e9rifiez que nous obtenons bien le livre \u00e9crit par Asimov publi\u00e9 apr\u00e8s 1953 (comme vous l\u2019avez sans doute remarqu\u00e9, il est possible d\u2019utiliser les op\u00e9rateurs d\u2019in\u00e9galit\u00e9s). Exercice 4 : \u00c9crire une requ\u00eate permettant d\u2019obtenir les titres des livres publi\u00e9s apr\u00e8s 1945 qui ont une note sup\u00e9rieure ou \u00e9gale \u00e0 9.","title":"Requ\u00eate avec condition : WHERE, AND, OR"},{"location":"Terminale/BDD/sql_sqlite/#obtenir-des-reponses-dans-un-ordre-precis-avec-order-by","text":"Il est aussi possible de rajouter la clause SQL ORDER BY afin d\u2019obtenir les r\u00e9sultats class\u00e9s dans un ordre pr\u00e9cis. Exemple : 1 2 SELECT id , titre , auteur , ann_publi , note FROM LIVRES ORDER by ann_publi ou bien : 1 2 3 SELECT titre FROM LIVRES WHERE auteur = 'Asimov' ORDER BY ann_publi Il est possible d\u2019obtenir un classement en sens inverse \u00e0 l\u2019aide de la clause DESC qu\u2019il faut ajouter apr\u00e8s l\u2019attribut de tri. Exercice 5 : \u00c9crire la requ\u00eate pour obtenir les livres de K.Dick class\u00e9s du plus r\u00e9cent au plus ancien. On remarque qu\u2019il est possible d\u2019\u00e9viter les doublons gr\u00e2ce \u00e0 la clause DISTINCT .","title":"Obtenir des r\u00e9ponses dans un ordre pr\u00e9cis avec ORDER BY"},{"location":"Terminale/BDD/sql_sqlite/#eviter-les-doublons-avec-distinct","text":"Tapez la req\u00eate suivante : 1 2 SELECT auteur FROM LIVRES Et comparez la \u00e0 celle-ci : 1 2 SELECT DISTINCT auteur FROM LIVRES","title":"\u00c9viter les doublons avec DISTINCT"},{"location":"Terminale/BDD/sql_sqlite/#les-jointures","text":"Gr\u00e2ce aux jointures nous allons pouvoir associer 2 tables dans une m\u00eame requ\u00eate. En g\u00e9n\u00e9ral, les jointures consistent \u00e0 associer des lignes de 2 tables. Elles permettent d\u2019\u00e9tablir un lien entre 2 tables. Qui dit lien entre 2 tables dit souvent clef \u00e9trang\u00e8re et clef primaire. Cr\u00e9er une nouvelle base de donn\u00e9es par exemple db_livres_auteurs.db dans laquelle vous cr\u00e9erez deux nouvelles tables : la table AUTEUR et la table LIVRE . 1 2 3 4 5 CREATE TABLE AUTEURS ( id INT , nom TEXT , prenom TEXT , ann_naissance INT , langue_ecriture TEXT , PRIMARY KEY ( id )); CREATE TABLE LIVRES ( id INT , titre TEXT , id_auteur INT , ann_publi INT , note INT , PRIMARY KEY ( id )); Remarque : on aurait pu aussi \u00e9crire : 1 2 3 CREATE TABLE LIVRES ( id INT , titre TEXT , id_auteur INT , ann_publi INT , note INT , PRIMARY KEY ( id ), FOREIGN KEY ( id_auteur ) REFERENCES AUTEURS ( id )); Gr\u00e2ce \u00e0 cette pr\u00e9cision, sqlite sera capable de d\u00e9tecter les anomalies au niveau de cl\u00e9 \u00e9trang\u00e8re : essayez par exemple d\u2019ajouter un livre \u00e0 la table LIVRES avec l\u2019attribut \"id_auteur\" \u00e9gal \u00e0 11 ! Exercice 6 : Remplissez les tables avec leurs donn\u00e9es (cf cours pr\u00e9c\u00e9dents). R\u00e9alisons maintenant la jointure entre les deux tables : 1 2 3 SELECT * FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id Le FROM LIVRES INNER JOIN AUTEURS permet de cr\u00e9er une jointure entre les tables LIVRES et AUTEURS (\"rassembler\" les tables LIVRES et AUTEURS en une seule grande table). Le ON LIVRES.id_auteur = AUTEURS.id signifie qu\u2019une ligne quelconque A de la table LIVRES devra \u00eatre fusionn\u00e9e avec la ligne B de la table AUTEURS \u00e0 condition que l\u2019attribut id de la ligne A soit \u00e9gal \u00e0 l\u2019attribut id_auteur de la ligne B. Par exemple, la ligne 1 ( id=1 ) de la table LIVRES (que l\u2019on nommera dans la suite ligne A) sera fusionn\u00e9e avec la ligne 1 ( id=1 ) de la table AUTEURS (que l\u2019on nommera dans la suite B) car l\u2019attribut id_auteur de la ligne A est \u00e9gal \u00e0 1 et l\u2019attribut id de la ligne B est aussi \u00e9gal \u00e0 1. Autre exemple, la ligne 1 ( id=1 ) de la table LIVRES (que l\u2019on nommera dans la suite ligne A) ne sera pas fusionn\u00e9e avec la ligne 2 (id=2) de la table AUTEURS (que l\u2019on nommera dans la suite B\u2019) car l\u2019attribut id_auteur de la ligne A est \u00e9gal \u00e0 1 alors que l\u2019attribut id de la ligne B\u2019 est \u00e9gal \u00e0 2. Exercice 7 : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT * FROM AUTEURS INNER JOIN LIVRES ON LIVRES . id_auteur = AUTEURS . id Comme vous pouvez le constater, le r\u00e9sultat est diff\u00e9rent, cette fois-ci ce sont les lignes de la table LIVRES qui viennent se greffer sur la table AUTEURS. Dans le cas d\u2019une jointure, il est tout \u00e0 fait possible de s\u00e9lectionner certains attributs et pas d\u2019autres : Exercice 8 : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT nom , prenom , titre FROM AUTEURS INNER JOIN LIVRES ON LIVRES . id_auteur = AUTEURS . id Exercice 9 : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT titre , nom , prenom FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id Si un m\u00eame nom d\u2019attribut est pr\u00e9sent dans les 2 tables (par exemple ici l\u2019attribut id ), il est n\u00e9cessaire d\u2019ajouter le nom de la table devant afin de pouvoir les distinguer ( AUTEURS.id et LIVRES.id ) Exercice 10 : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 SELECT titre , AUTEURS . id , nom , prenom FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id Il est possible d\u2019utiliser la clause WHERE dans le cas d\u2019une jointure : Exercice 11 : Saisissez et testez la requ\u00eate SQL suivante : 1 2 3 4 SELECT titre , nom , prenom FROM LIVRES INNER JOIN AUTEURS ON LIVRES . id_auteur = AUTEURS . id WHERE ann_publi > 1950 Enfin, pour terminer avec les jointures, vous devez savoir que nous avons abord\u00e9 la jointure la plus simple ( INNER JOIN ). Il existe des jointures plus complexes ( CROSS JOIN , LEFT JOIN , RIGHT JOIN ), ces autres jointures ne seront pas abord\u00e9es ici.","title":"Les jointures"},{"location":"Terminale/BDD/sql_sqlite/#requetes-de-mise-a-jour-insert-update-delete","text":"Nous allons repartir avec une base de donn\u00e9es qui contient une seule table : Cr\u00e9ez une nouvelle base de donn\u00e9es que vous nommerez par exemple db_livres.db Cr\u00e9ez une table LIVRES \u00e0 l\u2019aide de la requ\u00eate SQL suivante : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 CREATE TABLE LIVRES ( id INT , titre TEXT , auteur TEXT , ann_publi INT , note INT , PRIMARY KEY ( id )); Ajoutez des donn\u00e9es \u00e0 la table LIVRES \u00e0 l \u2019 aide de la requ\u00eate SQL suivante : INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 1 , '1984' , 'Orwell' , 1949 , 10 ), ( 2 , 'Dune' , 'Herbert' , 1965 , 8 ), ( 3 , 'Fondation' , 'Asimov' , 1951 , 9 ), ( 4 , 'Le meilleur des mondes' , 'Huxley' , 1931 , 7 ), ( 5 , 'Fahrenheit 451' , 'Bradbury' , 1953 , 7 ), ( 6 , 'Ubik' , 'K.Dick' , 1969 , 9 ), ( 7 , 'Chroniques martiennes' , 'Bradbury' , 1950 , 8 ), ( 8 , 'La nuit des temps' , 'Barjavel' , 1968 , 7 ), ( 9 , 'Blade Runner' , 'K.Dick' , 1968 , 8 ), ( 10 , 'Les Robots' , 'Asimov' , 1950 , 9 ), ( 11 , 'La Plan\u00e8te des singes' , 'Boulle' , 1963 , 8 ), ( 12 , 'Ravage' , 'Barjavel' , 1943 , 8 ), ( 13 , 'Le Ma\u00eetre du Haut Ch\u00e2teau' , 'K.Dick' , 1962 , 8 ), ( 14 , 'Le monde des \u00afA' , 'Van Vogt' , 1945 , 7 ), ( 15 , 'La Fin de l\u2019\u00e9ternit\u00e9' , 'Asimov' , 1955 , 8 ), ( 16 , 'De la Terre \u00e0 la Lune' , 'Verne' , 1865 , 10 ); Nous avons d\u00e9j\u00e0 eu l\u2019occasion de voir la requ\u00eate permettant d\u2019ajouter une entr\u00e9e (utilisation d\u2019INSERT) Exercice 12 : Que va faire cette requ\u00eate ? Vous pourrez v\u00e9rifier votre r\u00e9ponse en faisant une requ\u00eate SELECT * FROM LIVRES . 1 2 3 4 INSERT INTO LIVRES ( id , titre , auteur , ann_publi , note ) VALUES ( 17 , 'Hyp\u00e9rion' , 'Simmons' , 1989 , 8 ); Exercice 13 : \u00c9crivez et testez une requ\u00eate permettant d\u2019ajouter le livre de votre choix \u00e0 la table LIVRES . UPDATE va permettre de modifier une ou des entr\u00e9es. Nous utiliserons WHERE , comme dans le cas d\u2019un SELECT , pour sp\u00e9cifier les entr\u00e9es \u00e0 modifier. Voici un exemple de modification : Exercice 14 : Que va faire cette requ\u00eate ? Vous pourrez v\u00e9rifier votre r\u00e9ponse en faisant une requ\u00eate SELECT * FROM LIVRES . 1 2 3 UPDATE LIVRES SET note = 7 WHERE titre = 'Hyp\u00e9rion' Exercice 15 : \u00c9crivez une requ\u00eate permettant d\u2019attribuer la note de 10 \u00e0 tous les livres \u00e9crits par Asimov publi\u00e9s apr\u00e8s 1950. Testez cette requ\u00eate. DELETE est utilis\u00e9e pour effectuer la suppression d\u2019une (ou de plusieurs) entr\u00e9e(s). Ici aussi c\u2019est le WHERE qui permettra de s\u00e9lectionner les entr\u00e9es \u00e0 supprimer. Exercice 16 : Que va faire cette requ\u00eate ? V\u00e9rifiez votre r\u00e9ponse en l\u2019ex\u00e9cutant et en faisant une requ\u00eate SELECT * FROM LIVRES . 1 2 DELETE FROM LIVRES WHERE titre = 'Hyp\u00e9rion' Exercice 17 : \u00c9crivez une requ\u00eate permettant de supprimer les livres publi\u00e9s avant 1945. Testez cette requ\u00eate.","title":"Requ\u00eates de mise \u00e0 jour : INSERT, UPDATE, DELETE"},{"location":"Terminale/Programmation/decidabilite/","text":"Calculabilit\u00e9 d\u00e9cidabilit\u00e9 # Quelques rep\u00e8res historiques # Wilhelm Schickard (1592 \u2013 1635), professeur \u00e0 l\u2019Universit\u00e9 de T\u00fcbingen (Allemagne), aurait dessin\u00e9 les plans de la premi\u00e8re machine \u00e0 calculer (m\u00e9canique), mais elle n'a pas \u00e9t\u00e9 construite. Blaise Pascal (1623 \u2013 1662), math\u00e9maticien et philosophe, construit \u00e0 19 ans la Pascaline, premi\u00e8re machine \u00e0 calculer op\u00e9rationnelle. Gottfried Wilhelm Leibniz (1646 \u2013 1716), d\u00e9veloppe une machine \u00e0 calculer et propose des id\u00e9es modernes : la machine universelle, le sch\u00e9ma \"entr\u00e9e-calcul-sortie\", et la base 2 pour la repr\u00e9sentation des nombres. Joseph Marie Jacquard (1752 \u2013 1834), avec son m\u00e9tier \u00e0 tisser bas\u00e9 sur les cartes perfor\u00e9es, inspire les premiers programmes de calcul. Charles Babbage (1791 \u2013 1871), professeur \u00e0 Cambridge, con\u00e7oit la machine analytique, anc\u00eatre des ordinateurs modernes. Ada Lovelace (1815 \u2013 1852), r\u00e9alise le premier v\u00e9ritable programme informatique pour la machine analytique de Babbage. Elle est consid\u00e9r\u00e9e comme la premi\u00e8re programmeuse. David Hilbert (1862 \u2013 1943), math\u00e9maticien, propose des probl\u00e8mes dont certains restent irr\u00e9solus. En 1920, il \u00e9nonce l\u2019\"Entscheidungsproblem\", questionnant la d\u00e9cidabilit\u00e9 en math\u00e9matiques. Kurt G\u00f6del (1906 \u2013 1978), d\u00e9montre en 1931 que tout syst\u00e8me formel suffisamment puissant est soit incomplet soit incoh\u00e9rent. Alan Turing (1912 \u2013 1954) et Alonzo Church (1903 \u2013 1995), montrent en 1936 que l'\"Entscheidungsproblem\" est ind\u00e9cidable, proposant la machine de Turing et le lambda-calcul. Pour en savoir plus sur la vie de Turing, consulter la vid\u00e9o : Machine de Turing # D\u00e9finition # Il s'agit d'une machine imaginaire invent\u00e9e par Alan Turing en 1936 pour expliquer la notion de \"proc\u00e9dure m\u00e9canique\" : l'\u00e9quivalent de d'un algorithme. Cette machine est la plus \u00e9l\u00e9mentaire possible destin\u00e9e \u00e0 mettre en oeuvre ces m\u00e9canismes de calcul, num\u00e9riques ou symboliques, comme le font notamment les ordinateurs. Une machine de Turing est un appareil disposant : d'un ruban infiniment long divis\u00e9 en cases, dans lesquels la machine peut \u00e9crire des symboles ; d'une t\u00eate qui peut lire et \u00e9crire sur ce ruban ; d'une table de transition. Chacune des lignes de cette table est associ\u00e9e \u00e0 un \u00e9tat et sp\u00e9cifie les actions \u00e0 effectuer quand la machine est dans cet \u00e9tat, en fonction du symbole pr\u00e9sent sous la t\u00eate de lecture. Ces actions peuvent \u00eatre l'\u00e9criture d'un symbole (ici un 0 ou un 1) et le d\u00e9placement du ruban d'une case \u00e0 droite ou \u00e0 gauche. La table sp\u00e9cifie \u00e9galement le nouvel \u00e9tat apr\u00e8s ex\u00e9cution de ces actions. La machine s'arr\u00eate quand un \u00e9tat marqu\u00e9 comme final est atteint. Cette machine fonctionne comme une machine \u00e0 calculer en binaire. Turing envisage le cas particulier o\u00f9 les symboles utilis\u00e9s sont 0 et 1. L'entr\u00e9e du programme est un liste de symboles binaires. Une fois effectu\u00e9, c'est sur ce m\u00eame ruban que sera \u00e9crit la sortie du programme. Remarque 1 : En 2012, pour c\u00e9l\u00e9brer le centenaire de la naissance d'Alan Turing, huit \u00e9tudiant en master de l'\u00c9cole Normale Sup\u00e9rieure (ENS) de Lyon ont fabriqu\u00e9 en LEGO la premi\u00e8re machine r\u00e9elle (purement m\u00e9canique) du mod\u00e8le de Turing. Voici le site du projet : lien . Exemple : La machine peut \u00eatre dans deux \u00e9tats e1 et e2. Si la machine est dans l'\u00e9tat e1 et contient un blanc, elle \u00e9crit un blanc. Le rubanc se d\u00e9place vers la gauche et la machine est dans l'\u00e9tat e2. Si la machine est dans l'\u00e9tat e2 et qu'elle lit un 0, elle \u00e9crit un 1 et si elle lit un 1 elle \u00e9crit un 0. Dans les deux cas, le ruban se d\u00e9place vers la gauche et la machine reste dans l'\u00e9tat e2. Enfin, si elle lit un blanc, elle \u00e9crit un blanc et la machine s'arr\u00eate. Ce qui nous donne table de transition suivante : \u00c9tat Lecture \u00c9criture D\u00e9placement \u00c9tat suivant e1 blanc blanc gauche e2 e2 0 1 gauche e2 e2 1 0 gauche e2 e2 blanc blanc gauche Fin Les \u00e9tapes successives sont repr\u00e9sent\u00e9es ci-dessous. Initialement la machine se trouve dans l'\u00e9tat e1. La machine lit un blanc, passe dans l'\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un 1, donc \u00e9crit un 0, reste dans l'\u00e9tat e2 et ruban se d\u00e9place vers la gauche La machine lit un 0, donc \u00e9crit un 1, reste dans l'\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un 1 donc \u00e9crit un 0, reste toujours dans l'\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un blanc, \u00e9crit un blanc, le ruban se d\u00e9place encore vers la gauche et la machine s'arr\u00eate. Remarque 2 : Voici un \u00e9mulateur de cette machine de Turing Exercice 1: Consid\u00e9rons une machine de Turing se promenant sur un ruban constitu\u00e9 d\u2019une suite de cases pouvant \u00eatre vierges (\"V\") ou contenir une information binaire (\"0\" ou \"1\"). Elle poss\u00e8de la facult\u00e9 de se d\u00e9placer d\u2019une case vers la gauche ou vers la droite, de lire le caract\u00e8re inscrit sur le ruban et d\u2019\u00e9crire un caract\u00e8re sur le ruban (rempla\u00e7ant le pr\u00e9c\u00e9dent). De plus, elle poss\u00e8de un certain nombre d\u2019\u00e9tats qui vont d\u00e9terminer son comportement. Ces \u00e9tats sont pr\u00e9cis\u00e9s dans la table des transitions ci-dessous : | **\u00c9tat** | **Caract\u00e8re lu** | **\u00c9crire** | **D\u00e9placement** | **Nouvel \u00e9tat** | |----------|------------------|------------|-----------------|-----------------| | E\u2080 | V | V | droite | E\u2080 | | E\u2080 | 1 | 0 | droite | E\u2081 | | E\u2080 | 0 | 1 | droite | E\u2081 | | E\u2081 | V | Arr\u00eat | Arr\u00eat | Arr\u00eat | | E\u2081 | 1 | 0 | droite | E\u2081 | | E\u2081 | 0 | 1 | droite | E\u2081 | Au commencement, la t\u00eate de lecture/\u00e9criture est positionn\u00e9e dans l\u2019\u00e9tat E\u2080 sur une des cases vierges situ\u00e9e \u00e0 gauche du nombre binaire. Faire fonctionner cette machine de Turing sur le ruban suivant : ... | V | V | 0 | 1 | 0 | 0 | 1 | 1 | V | V | ... Quelle est l\u2019op\u00e9ration effectu\u00e9e par cette machine de Turing ? Exercice 2 Prenons maintenant une nouvelle machine de Turing avec 9 \u00e9tats et dont la table de transition est la suivante : | \u00c9tat | Caract\u00e8re lu | \u00c9crire | D\u00e9placement | Nouvel \u00e9tat | |:------:|:------------:|:-----------:|:-----------:|:-----------:| | E\u2080 | V | arr\u00eat | | E\u2080 | 0 | V | droite | E\u2081 | | E\u2080 | 1 | V | droite | E\u2085 | | E\u2081 | V | V | droite | E\u2082 | | E\u2081 | 0-1 | inchang\u00e9 | droite | E\u2081 | | E\u2082 | V | 0 | gauche | E\u2083 | | E\u2082 | 0-1 | inchang\u00e9 | droite | E\u2082 | | E\u2083 | V | V | gauche | E\u2084 | | E\u2083 | 0-1 | inchang\u00e9 | gauche | E\u2083 | | E\u2084 | V | 0 | droite | E\u2080 | | E\u2084 | 0-1 | inchang\u00e9 | gauche | E\u2084 | | E\u2085 | V | V | droite | E\u2086 | | E\u2085 | 0-1 | inchang\u00e9 | droite | E\u2085 | | E\u2086 | V | 1 | gauche | E\u2087 | | E\u2086 | 0-1 | inchang\u00e9 | droite | E\u2086 | | E\u2087 | V | V | gauche | E\u2088 | | E\u2087 | 0-1 | inchang\u00e9 | gauche | E\u2087 | | E\u2088 | V | 1 | droite | E\u2080 | | E\u2088 | 0-1 | inchang\u00e9 | gauche | E\u2088 | Au d\u00e9part, la t\u00eate de lecture/\u00e9criture est positionn\u00e9e dans l\u2019\u00e9tat E\u2080 sur le symbole binaire de gauche du nombre inscrit sur le ruban qui, comme dans l\u2019exercice pr\u00e9c\u00e9dent contient une suite continue de symboles binaires, les autres cases \u00e9tant vierges. Faire fonctionner cette machine de Turing sur le ruban suivant : ... V V 0 1 1 0 V V ... Quelle est l\u2019op\u00e9ration effectu\u00e9e par cette machine de Turing ? Que faudrait-il changer dans l'algorithme pour que le nombre inscrit sur le ruban soit recopi\u00e9 avec une inversion des symboles binaires (c'est-\u00e0-dire que le ruban V01101VVV ... devienne V01101V10010VV..)? Diagramme # On peut construire un diagramme de la machine (on parle aussi d'automate). Pour d\u00e9finir un diagramme, il faut : un alphabet utilis\u00e9 par la machine (liste des caract\u00e8res utilis\u00e9s). Exemple {'0','1','b'}. des \u00e9tats sont symbolis\u00e9s par des cercles et \u00e9crits sous la forme e1, e2, etc (ou encore q1, q2, etc). un \u00e9tat final repr\u00e9sent\u00e9 par ef (ou qf) mais parfois indiqu\u00e9 par une chaine de caract\u00e8res ou un caract\u00e8re particulier (\"final\"). repr\u00e9senter les d\u00e9placements par les lettres L et R (left et right). utiliser des triplets (lecture; \u00e9criture; d\u00e9placement) et des fl\u00e8ches qui indiquent l'\u00e9tat suivant. Exemple 1 : Liste des caract\u00e8res possiblement pr\u00e9sents sur le ruban \\(\\{'0';'1;'b'\\}\\) A l'\u00e9tat \\(e1\\) , si la t\u00eate lit un 0 alors elle \u00e9crit 1, se d\u00e9place \u00e0 droite et reste \u00e0 l'\u00e9tat e1. A l'\u00e9tat e1, si la t\u00eate lit un 1 alors elle \u00e9crit 0, se d\u00e9place \u00e0 droite et reste \u00e0 l'\u00e9tat e1. A l'\u00e9tat e1, si la t\u00eate lit un blanc alors elle n'\u00e9crit rien et passe \u00e0 l'\u00e9tat \\(ef\\) (elle s'arr\u00eate). Ce qui nous donne la table de transition suivante : \u00c9tat Lecture \u00c9criture D\u00e9placement \u00c9tat suivant e1 0 1 droite e1 e1 1 0 droite e1 e1 blanc rien droite ef Exemple 2 : Liste des caract\u00e8res possiblement pr\u00e9sents sur le ruban \\(\\{'0';'1;'b'\\}\\) si la t\u00eate lit un blanc alors elle n'\u00e9crit rien et se d\u00e9place \u00e0 droite en restant \u00e0 l'\u00e9tat e0. A l'\u00e9tat e0, si la t\u00eate lit un 0 alors elle n'\u00e9crit rien, ne se d\u00e9place pas et passe \u00e0 l'\u00e9tat e1. A l'\u00e9tat e0, si la t\u00eate lit un 1 alors elle n'\u00e9crit rien, ne se d\u00e9place pas et passe \u00e0 l'\u00e9tat e1. A l'\u00e9tat e1, si la t\u00eate lit un 0 alors elle \u00e9crit 1, se d\u00e9place \u00e0 droite et reste \u00e0 l'\u00e9tat e1. A l'\u00e9tat e1, si la t\u00eate lit un 1 alors elle \u00e9crit 0, se d\u00e9place \u00e0 droite et reste \u00e0 l'\u00e9tat e1. Ce qui nous donne la table de transition suivante : \u00c9tat Lecture \u00c9criture D\u00e9placement \u00c9tat suivant e0 b rien droite e0 e0 0 rien pas de dplt e1 e0 1 rien pas de dplt e1 e1 0 1 droite e1 e1 1 0 droite e1 Calculabilit\u00e9 et d\u00e9cidabilit\u00e9 # Calculabilit\u00e9 # Une fonction \\(f:x->f(x)\\) est dite calculable, lorsqu\u2019il existe une algorithme permettant de calculer pour n\u2019importe quelle valeur de x. Par exemple la fonction qui permet de d\u00e9terminer la longueur du plus court chemin dans un graphe est calculable (voir l\u2019algorithme de Djikstra) Le probl\u00e8me de la calculabilit\u00e9 d\u2019une fonction ne d\u00e9pend pas du langage de programmation. D\u00e9cidabilit\u00e9 # Un probl\u00e8me de d\u00e9cision est un probl\u00e8me auquel on peut r\u00e9pondre par oui ou non Par exemples : un nombre donn\u00e9 est-il pair ? un graphe contient-il un cycle ? Un probl\u00e8me est dit ind\u00e9cidable lorsqu\u2019il n\u2019existe pas d\u2019algorithme permettant d\u2019y r\u00e9pondre. Par exemple, le probl\u00e8me de savoir si un nombre donn\u00e9 est pair n\u2019est pas ind\u00e9cidable. On peut \u00e9crire un algorithme qui r\u00e9pond oui ou non \u00e0 ce probl\u00e8me. On appelle probl\u00e8me de l\u2019arr\u00eat le probl\u00e8me de d\u00e9cision qui consiste \u00e0 savoir si oui ou non un programme s\u2019arr\u00eate. Le probl\u00e8me de l'arr\u00eat # Un programme comme param\u00e8tre d'un programme # Les codes que nous manipulons ressemblent souvent \u00e0 cela : 1 2 3 def bonjour ( n ): for i in range ( n ): print ( \"bonjour\" ) Ce programme qui s'appelle bonjour a besoin d'un param\u00e8tre, qui sera ici un nombre entier n . Quand nous l'ex\u00e9cutons avec n=5 , sa sortie donnera 5 \u00abbonjour\u00bb. Maintenant, enregistrons le code suivant dans un fichier test.py : 1 2 3 4 5 def bonjour ( n ): for i in range ( n ): print ( \"bonjour\" ) bonjour ( 5 ) Pour ex\u00e9cuter ce code, nous devons taper dans un terminal l'instruction suivante : python3 test.py , ce qui donnera : ericgaland@MacBook-Pro-2 desktop % python3 test.py bonjour bonjour bonjour bonjour bonjour Le programme utilis\u00e9 est alors python3, qui prend comme param\u00e8tre le programme test.py . Ce param\u00e8tre test.py est un ensemble de caract\u00e8res qui contient les instructions que le programme python3 va interpr\u00e9ter. Mais nous pouvons aller encore plus loin : l'instruction python3 test.py peut \u00eatre tap\u00e9e dans un Terminal, qui lui-m\u00eame est un programme appel\u00e9 Terminal. Conclusion : Il n'y a donc aucun obstacle \u00e0 consid\u00e9rer un programme comme une simple donn\u00e9e, pouvant \u00eatre re\u00e7ue en param\u00e8tre par un autre programme. (voire par lui-m\u00eame !) Le probl\u00e8me de l'arr\u00eat # Un exemple # Consid\u00e9rons le programme suivant : 1 2 3 4 5 def countdown ( n ): while n != 0 : print ( n ) n = n - 1 print ( \"fini\" ) En l'observant attentivement, je peux pr\u00e9voir que countdown(10) affichera les nombres de 10 \u00e0 1 avant d'\u00e9crire \"fini\". Puis le programme s'arr\u00eatera. Mais que va provoquer countdown(10.8) ? Comme la variable n ne sera jamais \u00e9gale \u00e0 0, le programme va rentrer dans une boucle infinie, il ne s'arr\u00eatera jamais. Mauvaise nouvelle. J'ai pu pr\u00e9voir ceci en regardant attentivement le code de mon programme. J'ai \u00abremarqu\u00e9\u00bb qu'une variable n non enti\u00e8re provoquerait une boucle infinie. Est-ce qu'un programme d'analyse de programmes aurait pu faire cela \u00e0 ma place ? # Une machine pour pr\u00e9dire l'arr\u00eat ou non d'un programme On suppose qu'on dispose d'un programme appel\u00e9 teste_arre t qui prend en entr\u00e9e un programme P et des donn\u00e9es X et renvoie True ou False selon que P s'arr\u00eate ou non avec les donn\u00e9es X comme cela est sch\u00e9matis\u00e9 ci-dessous : exemple2 On consid\u00e8re le programme suivant : 1 2 3 4 5 6 def Q ( P , X ): if teste_arret ( P , X ): while True : pass else : return 1 Que dire des lignes 3 et 4 (on rappelle que l'instruction pass ne fait rien) Si P s'arr\u00eate avec les donn\u00e9es X , que fait ce programme ? Si P ne s'arr\u00eate pas avec les donn\u00e9es X, que fait ce programme ? Le programme Q prend en entr\u00e9e un programme P et des donn\u00e9es X, il peut donc se prendre lui-m\u00eame en entr\u00e9e avec lui-m\u00eame comme donn\u00e9e ! On cherche \u00e0 d\u00e9terminer le r\u00e9sultat de l'appel : Q(Q,Q). Pour cela, recopier et compl\u00e9ter le sch\u00e9ma suivant : D'apr\u00e8s ce sch\u00e9ma, que se passe-t-il si Q s'arr\u00eate avec lui m\u00eame comme donn\u00e9e ? Et dans le cas contraire ? Que peut-on en conclure sur l'existence du programme teste_arret ? Nous avons prouv\u00e9 que le programme teste_arret ne peut pas exister, on dit que le probl\u00e8me de l'arr\u00eat est ind\u00e9cidable c'est \u00e0 dire qu'il n'existe pas d'algorithme permettant de r\u00e9soudre ce probl\u00e8me.","title":"Calculabilit\u00e9, d\u00e9cidabilit\u00e9"},{"location":"Terminale/Programmation/decidabilite/#calculabilite-decidabilite","text":"","title":"Calculabilit\u00e9 d\u00e9cidabilit\u00e9"},{"location":"Terminale/Programmation/decidabilite/#quelques-reperes-historiques","text":"Wilhelm Schickard (1592 \u2013 1635), professeur \u00e0 l\u2019Universit\u00e9 de T\u00fcbingen (Allemagne), aurait dessin\u00e9 les plans de la premi\u00e8re machine \u00e0 calculer (m\u00e9canique), mais elle n'a pas \u00e9t\u00e9 construite. Blaise Pascal (1623 \u2013 1662), math\u00e9maticien et philosophe, construit \u00e0 19 ans la Pascaline, premi\u00e8re machine \u00e0 calculer op\u00e9rationnelle. Gottfried Wilhelm Leibniz (1646 \u2013 1716), d\u00e9veloppe une machine \u00e0 calculer et propose des id\u00e9es modernes : la machine universelle, le sch\u00e9ma \"entr\u00e9e-calcul-sortie\", et la base 2 pour la repr\u00e9sentation des nombres. Joseph Marie Jacquard (1752 \u2013 1834), avec son m\u00e9tier \u00e0 tisser bas\u00e9 sur les cartes perfor\u00e9es, inspire les premiers programmes de calcul. Charles Babbage (1791 \u2013 1871), professeur \u00e0 Cambridge, con\u00e7oit la machine analytique, anc\u00eatre des ordinateurs modernes. Ada Lovelace (1815 \u2013 1852), r\u00e9alise le premier v\u00e9ritable programme informatique pour la machine analytique de Babbage. Elle est consid\u00e9r\u00e9e comme la premi\u00e8re programmeuse. David Hilbert (1862 \u2013 1943), math\u00e9maticien, propose des probl\u00e8mes dont certains restent irr\u00e9solus. En 1920, il \u00e9nonce l\u2019\"Entscheidungsproblem\", questionnant la d\u00e9cidabilit\u00e9 en math\u00e9matiques. Kurt G\u00f6del (1906 \u2013 1978), d\u00e9montre en 1931 que tout syst\u00e8me formel suffisamment puissant est soit incomplet soit incoh\u00e9rent. Alan Turing (1912 \u2013 1954) et Alonzo Church (1903 \u2013 1995), montrent en 1936 que l'\"Entscheidungsproblem\" est ind\u00e9cidable, proposant la machine de Turing et le lambda-calcul. Pour en savoir plus sur la vie de Turing, consulter la vid\u00e9o :","title":"Quelques rep\u00e8res historiques"},{"location":"Terminale/Programmation/decidabilite/#machine-de-turing","text":"","title":"Machine de Turing"},{"location":"Terminale/Programmation/decidabilite/#definition","text":"Il s'agit d'une machine imaginaire invent\u00e9e par Alan Turing en 1936 pour expliquer la notion de \"proc\u00e9dure m\u00e9canique\" : l'\u00e9quivalent de d'un algorithme. Cette machine est la plus \u00e9l\u00e9mentaire possible destin\u00e9e \u00e0 mettre en oeuvre ces m\u00e9canismes de calcul, num\u00e9riques ou symboliques, comme le font notamment les ordinateurs. Une machine de Turing est un appareil disposant : d'un ruban infiniment long divis\u00e9 en cases, dans lesquels la machine peut \u00e9crire des symboles ; d'une t\u00eate qui peut lire et \u00e9crire sur ce ruban ; d'une table de transition. Chacune des lignes de cette table est associ\u00e9e \u00e0 un \u00e9tat et sp\u00e9cifie les actions \u00e0 effectuer quand la machine est dans cet \u00e9tat, en fonction du symbole pr\u00e9sent sous la t\u00eate de lecture. Ces actions peuvent \u00eatre l'\u00e9criture d'un symbole (ici un 0 ou un 1) et le d\u00e9placement du ruban d'une case \u00e0 droite ou \u00e0 gauche. La table sp\u00e9cifie \u00e9galement le nouvel \u00e9tat apr\u00e8s ex\u00e9cution de ces actions. La machine s'arr\u00eate quand un \u00e9tat marqu\u00e9 comme final est atteint. Cette machine fonctionne comme une machine \u00e0 calculer en binaire. Turing envisage le cas particulier o\u00f9 les symboles utilis\u00e9s sont 0 et 1. L'entr\u00e9e du programme est un liste de symboles binaires. Une fois effectu\u00e9, c'est sur ce m\u00eame ruban que sera \u00e9crit la sortie du programme. Remarque 1 : En 2012, pour c\u00e9l\u00e9brer le centenaire de la naissance d'Alan Turing, huit \u00e9tudiant en master de l'\u00c9cole Normale Sup\u00e9rieure (ENS) de Lyon ont fabriqu\u00e9 en LEGO la premi\u00e8re machine r\u00e9elle (purement m\u00e9canique) du mod\u00e8le de Turing. Voici le site du projet : lien . Exemple : La machine peut \u00eatre dans deux \u00e9tats e1 et e2. Si la machine est dans l'\u00e9tat e1 et contient un blanc, elle \u00e9crit un blanc. Le rubanc se d\u00e9place vers la gauche et la machine est dans l'\u00e9tat e2. Si la machine est dans l'\u00e9tat e2 et qu'elle lit un 0, elle \u00e9crit un 1 et si elle lit un 1 elle \u00e9crit un 0. Dans les deux cas, le ruban se d\u00e9place vers la gauche et la machine reste dans l'\u00e9tat e2. Enfin, si elle lit un blanc, elle \u00e9crit un blanc et la machine s'arr\u00eate. Ce qui nous donne table de transition suivante : \u00c9tat Lecture \u00c9criture D\u00e9placement \u00c9tat suivant e1 blanc blanc gauche e2 e2 0 1 gauche e2 e2 1 0 gauche e2 e2 blanc blanc gauche Fin Les \u00e9tapes successives sont repr\u00e9sent\u00e9es ci-dessous. Initialement la machine se trouve dans l'\u00e9tat e1. La machine lit un blanc, passe dans l'\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un 1, donc \u00e9crit un 0, reste dans l'\u00e9tat e2 et ruban se d\u00e9place vers la gauche La machine lit un 0, donc \u00e9crit un 1, reste dans l'\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un 1 donc \u00e9crit un 0, reste toujours dans l'\u00e9tat e2 et le ruban se d\u00e9place vers la gauche. La machine lit un blanc, \u00e9crit un blanc, le ruban se d\u00e9place encore vers la gauche et la machine s'arr\u00eate. Remarque 2 : Voici un \u00e9mulateur de cette machine de Turing Exercice 1: Consid\u00e9rons une machine de Turing se promenant sur un ruban constitu\u00e9 d\u2019une suite de cases pouvant \u00eatre vierges (\"V\") ou contenir une information binaire (\"0\" ou \"1\"). Elle poss\u00e8de la facult\u00e9 de se d\u00e9placer d\u2019une case vers la gauche ou vers la droite, de lire le caract\u00e8re inscrit sur le ruban et d\u2019\u00e9crire un caract\u00e8re sur le ruban (rempla\u00e7ant le pr\u00e9c\u00e9dent). De plus, elle poss\u00e8de un certain nombre d\u2019\u00e9tats qui vont d\u00e9terminer son comportement. Ces \u00e9tats sont pr\u00e9cis\u00e9s dans la table des transitions ci-dessous : | **\u00c9tat** | **Caract\u00e8re lu** | **\u00c9crire** | **D\u00e9placement** | **Nouvel \u00e9tat** | |----------|------------------|------------|-----------------|-----------------| | E\u2080 | V | V | droite | E\u2080 | | E\u2080 | 1 | 0 | droite | E\u2081 | | E\u2080 | 0 | 1 | droite | E\u2081 | | E\u2081 | V | Arr\u00eat | Arr\u00eat | Arr\u00eat | | E\u2081 | 1 | 0 | droite | E\u2081 | | E\u2081 | 0 | 1 | droite | E\u2081 | Au commencement, la t\u00eate de lecture/\u00e9criture est positionn\u00e9e dans l\u2019\u00e9tat E\u2080 sur une des cases vierges situ\u00e9e \u00e0 gauche du nombre binaire. Faire fonctionner cette machine de Turing sur le ruban suivant : ... | V | V | 0 | 1 | 0 | 0 | 1 | 1 | V | V | ... Quelle est l\u2019op\u00e9ration effectu\u00e9e par cette machine de Turing ? Exercice 2 Prenons maintenant une nouvelle machine de Turing avec 9 \u00e9tats et dont la table de transition est la suivante : | \u00c9tat | Caract\u00e8re lu | \u00c9crire | D\u00e9placement | Nouvel \u00e9tat | |:------:|:------------:|:-----------:|:-----------:|:-----------:| | E\u2080 | V | arr\u00eat | | E\u2080 | 0 | V | droite | E\u2081 | | E\u2080 | 1 | V | droite | E\u2085 | | E\u2081 | V | V | droite | E\u2082 | | E\u2081 | 0-1 | inchang\u00e9 | droite | E\u2081 | | E\u2082 | V | 0 | gauche | E\u2083 | | E\u2082 | 0-1 | inchang\u00e9 | droite | E\u2082 | | E\u2083 | V | V | gauche | E\u2084 | | E\u2083 | 0-1 | inchang\u00e9 | gauche | E\u2083 | | E\u2084 | V | 0 | droite | E\u2080 | | E\u2084 | 0-1 | inchang\u00e9 | gauche | E\u2084 | | E\u2085 | V | V | droite | E\u2086 | | E\u2085 | 0-1 | inchang\u00e9 | droite | E\u2085 | | E\u2086 | V | 1 | gauche | E\u2087 | | E\u2086 | 0-1 | inchang\u00e9 | droite | E\u2086 | | E\u2087 | V | V | gauche | E\u2088 | | E\u2087 | 0-1 | inchang\u00e9 | gauche | E\u2087 | | E\u2088 | V | 1 | droite | E\u2080 | | E\u2088 | 0-1 | inchang\u00e9 | gauche | E\u2088 | Au d\u00e9part, la t\u00eate de lecture/\u00e9criture est positionn\u00e9e dans l\u2019\u00e9tat E\u2080 sur le symbole binaire de gauche du nombre inscrit sur le ruban qui, comme dans l\u2019exercice pr\u00e9c\u00e9dent contient une suite continue de symboles binaires, les autres cases \u00e9tant vierges. Faire fonctionner cette machine de Turing sur le ruban suivant : ... V V 0 1 1 0 V V ... Quelle est l\u2019op\u00e9ration effectu\u00e9e par cette machine de Turing ? Que faudrait-il changer dans l'algorithme pour que le nombre inscrit sur le ruban soit recopi\u00e9 avec une inversion des symboles binaires (c'est-\u00e0-dire que le ruban V01101VVV ... devienne V01101V10010VV..)?","title":"D\u00e9finition"},{"location":"Terminale/Programmation/decidabilite/#diagramme","text":"On peut construire un diagramme de la machine (on parle aussi d'automate). Pour d\u00e9finir un diagramme, il faut : un alphabet utilis\u00e9 par la machine (liste des caract\u00e8res utilis\u00e9s). Exemple {'0','1','b'}. des \u00e9tats sont symbolis\u00e9s par des cercles et \u00e9crits sous la forme e1, e2, etc (ou encore q1, q2, etc). un \u00e9tat final repr\u00e9sent\u00e9 par ef (ou qf) mais parfois indiqu\u00e9 par une chaine de caract\u00e8res ou un caract\u00e8re particulier (\"final\"). repr\u00e9senter les d\u00e9placements par les lettres L et R (left et right). utiliser des triplets (lecture; \u00e9criture; d\u00e9placement) et des fl\u00e8ches qui indiquent l'\u00e9tat suivant. Exemple 1 : Liste des caract\u00e8res possiblement pr\u00e9sents sur le ruban \\(\\{'0';'1;'b'\\}\\) A l'\u00e9tat \\(e1\\) , si la t\u00eate lit un 0 alors elle \u00e9crit 1, se d\u00e9place \u00e0 droite et reste \u00e0 l'\u00e9tat e1. A l'\u00e9tat e1, si la t\u00eate lit un 1 alors elle \u00e9crit 0, se d\u00e9place \u00e0 droite et reste \u00e0 l'\u00e9tat e1. A l'\u00e9tat e1, si la t\u00eate lit un blanc alors elle n'\u00e9crit rien et passe \u00e0 l'\u00e9tat \\(ef\\) (elle s'arr\u00eate). Ce qui nous donne la table de transition suivante : \u00c9tat Lecture \u00c9criture D\u00e9placement \u00c9tat suivant e1 0 1 droite e1 e1 1 0 droite e1 e1 blanc rien droite ef Exemple 2 : Liste des caract\u00e8res possiblement pr\u00e9sents sur le ruban \\(\\{'0';'1;'b'\\}\\) si la t\u00eate lit un blanc alors elle n'\u00e9crit rien et se d\u00e9place \u00e0 droite en restant \u00e0 l'\u00e9tat e0. A l'\u00e9tat e0, si la t\u00eate lit un 0 alors elle n'\u00e9crit rien, ne se d\u00e9place pas et passe \u00e0 l'\u00e9tat e1. A l'\u00e9tat e0, si la t\u00eate lit un 1 alors elle n'\u00e9crit rien, ne se d\u00e9place pas et passe \u00e0 l'\u00e9tat e1. A l'\u00e9tat e1, si la t\u00eate lit un 0 alors elle \u00e9crit 1, se d\u00e9place \u00e0 droite et reste \u00e0 l'\u00e9tat e1. A l'\u00e9tat e1, si la t\u00eate lit un 1 alors elle \u00e9crit 0, se d\u00e9place \u00e0 droite et reste \u00e0 l'\u00e9tat e1. Ce qui nous donne la table de transition suivante : \u00c9tat Lecture \u00c9criture D\u00e9placement \u00c9tat suivant e0 b rien droite e0 e0 0 rien pas de dplt e1 e0 1 rien pas de dplt e1 e1 0 1 droite e1 e1 1 0 droite e1","title":"Diagramme"},{"location":"Terminale/Programmation/decidabilite/#calculabilite-et-decidabilite","text":"","title":"Calculabilit\u00e9 et d\u00e9cidabilit\u00e9"},{"location":"Terminale/Programmation/decidabilite/#calculabilite","text":"Une fonction \\(f:x->f(x)\\) est dite calculable, lorsqu\u2019il existe une algorithme permettant de calculer pour n\u2019importe quelle valeur de x. Par exemple la fonction qui permet de d\u00e9terminer la longueur du plus court chemin dans un graphe est calculable (voir l\u2019algorithme de Djikstra) Le probl\u00e8me de la calculabilit\u00e9 d\u2019une fonction ne d\u00e9pend pas du langage de programmation.","title":"Calculabilit\u00e9"},{"location":"Terminale/Programmation/decidabilite/#decidabilite","text":"Un probl\u00e8me de d\u00e9cision est un probl\u00e8me auquel on peut r\u00e9pondre par oui ou non Par exemples : un nombre donn\u00e9 est-il pair ? un graphe contient-il un cycle ? Un probl\u00e8me est dit ind\u00e9cidable lorsqu\u2019il n\u2019existe pas d\u2019algorithme permettant d\u2019y r\u00e9pondre. Par exemple, le probl\u00e8me de savoir si un nombre donn\u00e9 est pair n\u2019est pas ind\u00e9cidable. On peut \u00e9crire un algorithme qui r\u00e9pond oui ou non \u00e0 ce probl\u00e8me. On appelle probl\u00e8me de l\u2019arr\u00eat le probl\u00e8me de d\u00e9cision qui consiste \u00e0 savoir si oui ou non un programme s\u2019arr\u00eate.","title":"D\u00e9cidabilit\u00e9"},{"location":"Terminale/Programmation/decidabilite/#le-probleme-de-larret","text":"","title":"Le probl\u00e8me de l'arr\u00eat"},{"location":"Terminale/Programmation/decidabilite/#un-programme-comme-parametre-dun-programme","text":"Les codes que nous manipulons ressemblent souvent \u00e0 cela : 1 2 3 def bonjour ( n ): for i in range ( n ): print ( \"bonjour\" ) Ce programme qui s'appelle bonjour a besoin d'un param\u00e8tre, qui sera ici un nombre entier n . Quand nous l'ex\u00e9cutons avec n=5 , sa sortie donnera 5 \u00abbonjour\u00bb. Maintenant, enregistrons le code suivant dans un fichier test.py : 1 2 3 4 5 def bonjour ( n ): for i in range ( n ): print ( \"bonjour\" ) bonjour ( 5 ) Pour ex\u00e9cuter ce code, nous devons taper dans un terminal l'instruction suivante : python3 test.py , ce qui donnera : ericgaland@MacBook-Pro-2 desktop % python3 test.py bonjour bonjour bonjour bonjour bonjour Le programme utilis\u00e9 est alors python3, qui prend comme param\u00e8tre le programme test.py . Ce param\u00e8tre test.py est un ensemble de caract\u00e8res qui contient les instructions que le programme python3 va interpr\u00e9ter. Mais nous pouvons aller encore plus loin : l'instruction python3 test.py peut \u00eatre tap\u00e9e dans un Terminal, qui lui-m\u00eame est un programme appel\u00e9 Terminal. Conclusion : Il n'y a donc aucun obstacle \u00e0 consid\u00e9rer un programme comme une simple donn\u00e9e, pouvant \u00eatre re\u00e7ue en param\u00e8tre par un autre programme. (voire par lui-m\u00eame !)","title":"Un programme comme param\u00e8tre d'un programme"},{"location":"Terminale/Programmation/decidabilite/#le-probleme-de-larret_1","text":"","title":"Le probl\u00e8me de l'arr\u00eat"},{"location":"Terminale/Programmation/decidabilite/#un-exemple","text":"Consid\u00e9rons le programme suivant : 1 2 3 4 5 def countdown ( n ): while n != 0 : print ( n ) n = n - 1 print ( \"fini\" ) En l'observant attentivement, je peux pr\u00e9voir que countdown(10) affichera les nombres de 10 \u00e0 1 avant d'\u00e9crire \"fini\". Puis le programme s'arr\u00eatera. Mais que va provoquer countdown(10.8) ? Comme la variable n ne sera jamais \u00e9gale \u00e0 0, le programme va rentrer dans une boucle infinie, il ne s'arr\u00eatera jamais. Mauvaise nouvelle. J'ai pu pr\u00e9voir ceci en regardant attentivement le code de mon programme. J'ai \u00abremarqu\u00e9\u00bb qu'une variable n non enti\u00e8re provoquerait une boucle infinie.","title":"Un exemple"},{"location":"Terminale/Programmation/decidabilite/#est-ce-quun-programme-danalyse-de-programmes-aurait-pu-faire-cela-a-ma-place","text":"Une machine pour pr\u00e9dire l'arr\u00eat ou non d'un programme On suppose qu'on dispose d'un programme appel\u00e9 teste_arre t qui prend en entr\u00e9e un programme P et des donn\u00e9es X et renvoie True ou False selon que P s'arr\u00eate ou non avec les donn\u00e9es X comme cela est sch\u00e9matis\u00e9 ci-dessous : exemple2 On consid\u00e8re le programme suivant : 1 2 3 4 5 6 def Q ( P , X ): if teste_arret ( P , X ): while True : pass else : return 1 Que dire des lignes 3 et 4 (on rappelle que l'instruction pass ne fait rien) Si P s'arr\u00eate avec les donn\u00e9es X , que fait ce programme ? Si P ne s'arr\u00eate pas avec les donn\u00e9es X, que fait ce programme ? Le programme Q prend en entr\u00e9e un programme P et des donn\u00e9es X, il peut donc se prendre lui-m\u00eame en entr\u00e9e avec lui-m\u00eame comme donn\u00e9e ! On cherche \u00e0 d\u00e9terminer le r\u00e9sultat de l'appel : Q(Q,Q). Pour cela, recopier et compl\u00e9ter le sch\u00e9ma suivant : D'apr\u00e8s ce sch\u00e9ma, que se passe-t-il si Q s'arr\u00eate avec lui m\u00eame comme donn\u00e9e ? Et dans le cas contraire ? Que peut-on en conclure sur l'existence du programme teste_arret ? Nous avons prouv\u00e9 que le programme teste_arret ne peut pas exister, on dit que le probl\u00e8me de l'arr\u00eat est ind\u00e9cidable c'est \u00e0 dire qu'il n'existe pas d'algorithme permettant de r\u00e9soudre ce probl\u00e8me.","title":"Est-ce qu'un programme d'analyse de programmes aurait pu faire cela \u00e0 ma place ?"},{"location":"Terminale/Struct_donnees/graphe/","text":"Les Graphes # Introduction # Au milieu du XX\u00e8me si\u00e8cle, le physicien hongrois Eug\u00e8ne Wigner parle de \"la d\u00e9raisonnable efficacit\u00e9 des math\u00e9matiques dans les sciences de la nature\". La mod\u00e9lisation math\u00e9matique facilite la compr\u00e9hension d\u2019un probl\u00e8me car elle d\u00e9termine un seul vocabulaire formel pour diff\u00e9rentes situations, et elle permet de trouver une m\u00e9thode de r\u00e9solution automatique via un programme informatique. Le mod\u00e8le math\u00e9matique que nous allons voir dans ce chapitre est le graphe. On utilise les graphes dans de nombreuses situations : les r\u00e9seaux de communication ( internet, t\u00e9l\u00e9phonie) ; les r\u00e9seaux sociaux ; les circuits \u00e9lectriques ; les bases de donn\u00e9es relationnelles ; le codage ; la hi\u00e9rarchie des fichiers informatiques ; la repr\u00e9sentation des mol\u00e9cules ; en biologie pour la repr\u00e9sentation de la s\u00e9quence ARN. Graphe non-orient\u00e9s # Un premier exemple # Imaginez un r\u00e9seau social ayant 6 abonn\u00e9s : Jules, Simon, Arthur, Jean, Lucien, et Maxime o\u00f9 : Jules est ami avec Simon, Arthur et Jean Simon est ami avec Jules et Jean Arthur est ami avec Jules, Lucien et Jean Jean est ami avec tous les autres abonn\u00e9s Lucien est ami avec Arthur, Jean et Maxime Maxime est ami avec Lucien et Jean La description de ce r\u00e9seau social, malgr\u00e9 son faible nombre d\u2019abonn\u00e9s, est d\u00e9j\u00e0 quelque peu r\u00e9barbative, alors imaginez cette m\u00eame description avec un r\u00e9seau social comportant des millions d\u2019abonn\u00e9s ! Il existe un moyen plus \"visuel\" pour repr\u00e9senter ce r\u00e9seau social : on peut repr\u00e9senter chaque abonn\u00e9 par un cercle (avec le nom de l\u2019abonn\u00e9 situ\u00e9 dans le cercle) et chaque relation \"X est ami avec Y\" par un segment de droite reliant X et Y (\"X est ami avec Y\" et \"Y est ami avec X\" \u00e9tant repr\u00e9sent\u00e9 par le m\u00eame segment de droite). En mod\u00e9lisant ces pr\u00e9noms par A,B,C,D,E et F, on obtient avec le r\u00e9seau social d\u00e9crit ci-dessus : Ce genre de figure s\u2019appelle un graphe non orient\u00e9s. Les graphes sont des objets math\u00e9matiques tr\u00e8s utilis\u00e9s, notamment en informatique. Les cercles sont appel\u00e9s des sommets et les segments de droites qui relient 2 sommets des ar\u00eates. Plus formellement on dira qu\u2019un graphe G est un couple G = (V, E) avec V un ensemble de sommets et E un ensemble d\u2019ar\u00eates Exercice 1 : Construisez un graphe de r\u00e9seau social \u00e0 partir des informations suivantes : A est ami avec B et E B est ami avec A et C C est ami avec B,F et D D est ami avec C,F et E E est ami avec A,D et F F est ami avec C, D et E Vocabulaire des graphes non-orient\u00e9s # On note x-y l\u2019ar\u00eate (x-y) dans un graphe non orient\u00e9 o\u00f9 x et y sont les deux extr\u00e9mit\u00e9s. Deux ar\u00eates d\u2019un graphe sont dites adjacentes si elles ont au moins un sommet en commun. deux sommets d\u2019un graphe non-orient\u00e9 sont dits adjacents s\u2019il existe une ar\u00eate les joignants. dans un graphe non-orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019ar\u00eate dont x est une extr\u00e9mit\u00e9. dans un graphe non-orient\u00e9, on appelle cha\u00eene toute suite de sommets cons\u00e9cutifs reli\u00e9s par des ar\u00eates. une cha\u00eene est dite \u00e9l\u00e9mentaire si elle ne comporte pas plusieurs fois le m\u00eame sommet. une cha\u00eene dont le sommet de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 cycle. un graphe non-orient\u00e9 est dit connexe lorsqu\u2019il existe une cha\u00eene pour toute paire de sommet. Les graphes orient\u00e9s # Un premier exemple # Les logiciels de cartographie permettant, connaissant votre position gr\u00e2ce \u00e0 un r\u00e9cepteur GPS, d\u2019indiquer la route \u00e0 suivre pour se rendre \u00e0 endroit B. Comment mod\u00e9liser l\u2019ensemble des lieux et des routes ? Simplement \u00e0 l\u2019aide d\u2019un graphe ! Chaque lieu est un sommet et les routes qui relient les lieux entre eux sont des ar\u00eates. Soit les lieux suivants : A, B, C, D, E, F et G. Les diff\u00e9rents lieux sont reli\u00e9s par les routes suivantes : il existe une route entre A et C ; il existe une route entre A et B ; il existe une route entre A et D ; il existe une route entre B et F ; il existe une route entre B et E ; il existe une route entre B et G ; il existe une route entre D et G ; il existe une route entre E et F. Ici aussi, la repr\u00e9sentation sous forme de graphe s\u2019impose : Probl\u00e8me : avec cette repr\u00e9sentation du r\u00e9seau routier sous forme de graphe, il est impossible de tenir compte des routes en sens unique (par exemple il est possible d\u2019aller de A vers D mais pas de D vers A) Voici de nouvelles contraintes : il existe une route entre A et C (double sens) ; il existe une route entre A et B (sens unique B->A) ; il existe une route entre A et D (sens unique A->D) ; il existe une route entre B et F (sens unique B->F) ; il existe une route entre B et E (sens unique E->B) ; il existe une route entre B et G (double sens) ; il existe une route entre D et G (double sens) ; il existe une route entre E et F (double). Pour tenir compte de ces nouvelles contraintes, on utilisera un graphe orient\u00e9 : Dans un graphe orient\u00e9, les ar\u00eates poss\u00e8dent une orientation. Ces \"ar\u00eates orient\u00e9es\" sont souvent appel\u00e9es \"arcs\". On dira qu\u2019un graphe orient\u00e9 G est un couple G = (V,A) avec V un ensemble de sommets et A un ensemble d\u2019arcs. Vocabulaire # On note x\u2192 y l\u2019arc (x,y) dans un graph orient\u00e9 o\u00f9 x est son extr\u00e9mit\u00e9 initiale et y son extr\u00e9mit\u00e9 finale. y est le successeur de x et x est le pr\u00e9d\u00e9cesseur de y. deux arcs d\u2019un graphe sont adjacents s\u2019ils poss\u00e8dent au moins une extr\u00e9mit\u00e9 commune ; Deux sommets d\u2019un graphe orient\u00e9 sont dits adjacents s\u2019il existe un arc les joignant. Dans un graphe orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019arcs dont x est une extr\u00e9mit\u00e9. Dans un graphe orient\u00e9, on appelle chemin toute suite de sommet cons\u00e9cutifs reli\u00e9 par des arcs. Un chemin est dit \u00e9l\u00e9m\u00e9ntaire s\u2019il ne comporte pas plusieurs fois le m\u00eame sommet. Un chemin dont le somme de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 circuit. Les graphes pond\u00e9r\u00e9s # Exemple # Parfois il est int\u00e9ressant d\u2019associer aux arr\u00eates ou aux arcs des valeurs, on parle alors de graphes pond\u00e9r\u00e9s. Si nous revenons \u00e0 notre \"graphe cartographie\", il est possible d\u2019associer \u00e0 chaque ar\u00eate la distance en Km entre les 2 lieux Il est aussi possible d\u2019associer \u00e0 chaque ar\u00eate la dur\u00e9e du trajet entre 2 points : En fonction du choix fait par le conducteur (trajet le plus court \"en distance\" ou trajet le plus court \"en temps\"), l\u2019algorithme permettant de d\u00e9terminer le \"chemin le plus court entre 2 points\" travaillera sur le graphe \"graphe pond\u00e9r\u00e9 (Km)cartographie\" ou sur le graphe \"graphe pond\u00e9r\u00e9 (minutes) cartographie\". \u00c0 noter que le \"graphe pond\u00e9r\u00e9 (minutes) cartographie\" peut \u00e9voluer au cours du temps en fonction du trafic routier : une application comme Waze utilise les donn\u00e9es en en provenance des utilisateurs de l\u2019application afin de mettre \u00e0 jour en temps r\u00e9\u00e9l leur \"graphe pond\u00e9r\u00e9 (minutes) cartographie\". Un graphe est pond\u00e9r\u00e9 (ou valu\u00e9) si on attribue \u00e0 chaque ar\u00eate une valeur num\u00e9rique (la plupart du temps positive), qu'on appelle mesure, poids, co\u00fbt ou valuation. Impl\u00e9mentation d\u2019un graphe \u00e0 l\u2019aide d\u2019une matrice d\u2019adjacence # Il existe deux m\u00e9thodes permettant d\u2019impl\u00e9menter un graphe : les matrices d\u2019adjacences et les listes d\u2019adjacences. D\u00e9finition d\u2019une matrice # Une matrice est un tableau \u00e0 double entr\u00e9e. Exemple, la matrice A ci-dessous. \\[ A = \\begin{pmatrix} 1 & 2 & 3 & 8 & 10 \\\\ 4 & 5 & 6 & 6 & 9 \\\\ 7 & 8 & 9 & 6 & 5 \\\\ \\end{pmatrix} \\] La matrice A ci-dessus est constitu\u00e9 de 3 lignes et 5 colonnes. On appelle matrice carr\u00e9e une matrice qui comporte le m\u00eame nombre de lignes et de colonnes. Les matrices d\u2019adjacences sont des matrices carr\u00e9es. Exemple # Voici la matrice d\u2019adjacence de ce graphe : \\[ A = \\begin{pmatrix} 0 & 1 & 1 & 1 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 1 \\\\ 0 & 1 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 1 & 0 &1 & 0 & 0 & 0 \\\\ \\end{pmatrix} \\] Comment construire une matrice d\u2019adjacence ? # Il faut savoir qu\u2019\u00e0 chaque ligne correspond un sommet du graphe et qu\u2019\u00e0 chaque colonne correspond aussi un sommet du graphe. \u00c0 chaque intersection ligne i-colonne j (ligne i correspond au sommet i et colonne j correspond au sommet j), on place un 1 s\u2019il existe une ar\u00eate entre le sommet i et le sommet j, et un z\u00e9ro s\u2019il n\u2019existe pas d\u2019ar\u00eate entre le sommet i et le sommet j. Il existe une ar\u00eate entre le sommet E et le sommet F, nous avons donc plac\u00e9 un 1 \u00e0 l\u2019intersection de la ligne E et de la colonne F (il en est de m\u00eame \u00e0 l\u2019intersection de la ligne F et de la colonne E) Il n\u2019existe pas d\u2019ar\u00eate entre le sommet D et le sommet C, nous avons donc plac\u00e9 un 0 \u00e0 l\u2019intersection de la ligne D et de la colonne C (il en est de m\u00eame \u00e0 l\u2019intersection de la ligne C et de la colonne D) Exercice 2 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe \"cartographie\". Exercice 3 : \u00c9tablissez la matrice d\u2019adjacence du graphe ci-dessous. Matrice d\u2019adjacence pour un graphe orient\u00e9 # Le principe reste le m\u00eame : si le sommet i (ligne) est li\u00e9 au sommet j (colonne), nous avons un 1 \u00e0 l\u2019intersection (0 dans le cas contraire). Exemple : La matrice d'adjacence est : \\[ A = \\begin{pmatrix} 0 & 0 & 1 & 1 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 1 & 1 & 1 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 0 & 0 & 1 \\\\ 0 & 1 & 0 & 0 & 0 & 1 & 0 \\\\ 0 & 0 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 1 & 0 & 1 & 0 & 0 & 0 \\\\ \\end{pmatrix} \\] Exercice 4 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe orient\u00e9 \"cartographie\". Exercice 5 : Etablir la matrice du graphe orient\u00e9 ci-dessous. Matrice d\u2019adjacence d\u2019un graphe pond\u00e9r\u00e9 # On remplace les 1 par les valeurs li\u00e9es \u00e0 chaque arc La matrice d'adjacence : \\[ A = \\begin{pmatrix} 0 & 4 & 3 & 5 & 0 & 0 & 0 \\\\ 4 & 0 & 0 & 0 & 5 & 5 & 7 \\\\ 3 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 5 & 0 & 0 & 0 & 0 & 0 & 6 \\\\ 0 & 5 & 0 & 0 & 0 & 7 & 0 \\\\ 0 & 5 & 0 & 0 & 7 & 0 & 0 \\\\ 0 & 7 & 0 & 6 & 0 & 0 & 0 \\\\ \\end{pmatrix} \\] Exercice 6 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe pond\u00e9r\u00e9 (minutes) \"cartographie\". Les listes d\u2019adjacences # Pour les graphes non-orient\u00e9s # Pour commencer, on d\u00e9finit une liste des sommets du graphe. \u00c0 chaque \u00e9l\u00e9ment de cette liste, on associe une autre liste qui contient les sommets li\u00e9 \u00e0 cet \u00e9l\u00e9ment. Reprenons l\u2019exemple du \"graphe cartographie\" : Voici la liste d'adjacence de ce graphe : Pour les graphes orient\u00e9s # Pour les graphes orient\u00e9s, il est n\u00e9cessaire de d\u00e9finir 2 listes : la liste des successeurs et la liste des pr\u00e9d\u00e9cesseurs. Soit un arc allant d\u2019un sommet A vers un sommet B (fl\u00e8che de A vers B). On dira que B est un successeur de A et que A est un pr\u00e9d\u00e9cesseur de B. Liste d'adjacence successeurs du graphe orient\u00e9 cartographie Liste d'adjacence pr\u00e9d\u00e9cesseurs du graphe orient\u00e9 cartographie Exercices # Exercice 1 : # Tracer les graphes associ\u00e9s aux matrices d\u2019adjacence donn\u00e9es. Puis donner sa liste des successeurs et des pr\u00e9decesseurs. \\[ M = \\begin{pmatrix} 0 & 1 & 0 & 0 & 0 \\\\ 0 & 0 & 1 & 1 & 1 \\\\ 0 & 1 & 0 & 1 & 0 \\\\ 0 & 0 & 1 & 0 & 0 \\\\ 1 & 1 & 0 & 1 & 0 \\\\ \\end{pmatrix} \\] Exercice 2 : # On souhaite organiser un tournoi de football avec 5 \u00e9quipes (num\u00e9rot\u00e9es de 1 \u00e0 5). Chaque \u00e9quipe rencontre une seule fois toutes les autres. Repr\u00e9senter la situation sous la forme d\u2019un graphe. Combien d\u2019ar\u00eates poss\u00e8de-t-il ?En d\u00e9duire le nombre de matchs au total pour ce tournoi ? Ce graphe est-il connexe ? Exercice 3 : # Un club de tennis doit s\u00e9lectionner deux joueurs parmi quatre pour repr\u00e9senter le club \u00e0 un tournoi national. Les quatre joueurs sont not\u00e9s A,B,C et D. Pour r\u00e9aliser la s\u00e9l\u00e9ction, le club organise des matchs : chaque joueur rencontre les trois autres. R\u00e8gle : tout match gagn\u00e9 donne un point. tout match perdu enl\u00e8ve un point. Les joueurs s\u00e9lectionn\u00e9s sont les joueurs ayant obtenu le plus grand nombre de points. On donne les r\u00e9sultats sous la forme d\u2019un graphe orient\u00e9. Le sens de l\u2019arc A \\(\\to\\) B indique que le joueur A a battu B Donner le nombre de points de chaque joueur En d\u00e9duire les joueurs s\u00e9lectionn\u00e9s","title":"Graphes"},{"location":"Terminale/Struct_donnees/graphe/#les-graphes","text":"","title":"Les Graphes"},{"location":"Terminale/Struct_donnees/graphe/#introduction","text":"Au milieu du XX\u00e8me si\u00e8cle, le physicien hongrois Eug\u00e8ne Wigner parle de \"la d\u00e9raisonnable efficacit\u00e9 des math\u00e9matiques dans les sciences de la nature\". La mod\u00e9lisation math\u00e9matique facilite la compr\u00e9hension d\u2019un probl\u00e8me car elle d\u00e9termine un seul vocabulaire formel pour diff\u00e9rentes situations, et elle permet de trouver une m\u00e9thode de r\u00e9solution automatique via un programme informatique. Le mod\u00e8le math\u00e9matique que nous allons voir dans ce chapitre est le graphe. On utilise les graphes dans de nombreuses situations : les r\u00e9seaux de communication ( internet, t\u00e9l\u00e9phonie) ; les r\u00e9seaux sociaux ; les circuits \u00e9lectriques ; les bases de donn\u00e9es relationnelles ; le codage ; la hi\u00e9rarchie des fichiers informatiques ; la repr\u00e9sentation des mol\u00e9cules ; en biologie pour la repr\u00e9sentation de la s\u00e9quence ARN.","title":"Introduction"},{"location":"Terminale/Struct_donnees/graphe/#graphe-non-orientes","text":"","title":"Graphe non-orient\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#un-premier-exemple","text":"Imaginez un r\u00e9seau social ayant 6 abonn\u00e9s : Jules, Simon, Arthur, Jean, Lucien, et Maxime o\u00f9 : Jules est ami avec Simon, Arthur et Jean Simon est ami avec Jules et Jean Arthur est ami avec Jules, Lucien et Jean Jean est ami avec tous les autres abonn\u00e9s Lucien est ami avec Arthur, Jean et Maxime Maxime est ami avec Lucien et Jean La description de ce r\u00e9seau social, malgr\u00e9 son faible nombre d\u2019abonn\u00e9s, est d\u00e9j\u00e0 quelque peu r\u00e9barbative, alors imaginez cette m\u00eame description avec un r\u00e9seau social comportant des millions d\u2019abonn\u00e9s ! Il existe un moyen plus \"visuel\" pour repr\u00e9senter ce r\u00e9seau social : on peut repr\u00e9senter chaque abonn\u00e9 par un cercle (avec le nom de l\u2019abonn\u00e9 situ\u00e9 dans le cercle) et chaque relation \"X est ami avec Y\" par un segment de droite reliant X et Y (\"X est ami avec Y\" et \"Y est ami avec X\" \u00e9tant repr\u00e9sent\u00e9 par le m\u00eame segment de droite). En mod\u00e9lisant ces pr\u00e9noms par A,B,C,D,E et F, on obtient avec le r\u00e9seau social d\u00e9crit ci-dessus : Ce genre de figure s\u2019appelle un graphe non orient\u00e9s. Les graphes sont des objets math\u00e9matiques tr\u00e8s utilis\u00e9s, notamment en informatique. Les cercles sont appel\u00e9s des sommets et les segments de droites qui relient 2 sommets des ar\u00eates. Plus formellement on dira qu\u2019un graphe G est un couple G = (V, E) avec V un ensemble de sommets et E un ensemble d\u2019ar\u00eates Exercice 1 : Construisez un graphe de r\u00e9seau social \u00e0 partir des informations suivantes : A est ami avec B et E B est ami avec A et C C est ami avec B,F et D D est ami avec C,F et E E est ami avec A,D et F F est ami avec C, D et E","title":"Un premier exemple"},{"location":"Terminale/Struct_donnees/graphe/#vocabulaire-des-graphes-non-orientes","text":"On note x-y l\u2019ar\u00eate (x-y) dans un graphe non orient\u00e9 o\u00f9 x et y sont les deux extr\u00e9mit\u00e9s. Deux ar\u00eates d\u2019un graphe sont dites adjacentes si elles ont au moins un sommet en commun. deux sommets d\u2019un graphe non-orient\u00e9 sont dits adjacents s\u2019il existe une ar\u00eate les joignants. dans un graphe non-orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019ar\u00eate dont x est une extr\u00e9mit\u00e9. dans un graphe non-orient\u00e9, on appelle cha\u00eene toute suite de sommets cons\u00e9cutifs reli\u00e9s par des ar\u00eates. une cha\u00eene est dite \u00e9l\u00e9mentaire si elle ne comporte pas plusieurs fois le m\u00eame sommet. une cha\u00eene dont le sommet de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 cycle. un graphe non-orient\u00e9 est dit connexe lorsqu\u2019il existe une cha\u00eene pour toute paire de sommet.","title":"Vocabulaire des graphes non-orient\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#les-graphes-orientes","text":"","title":"Les graphes orient\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#un-premier-exemple_1","text":"Les logiciels de cartographie permettant, connaissant votre position gr\u00e2ce \u00e0 un r\u00e9cepteur GPS, d\u2019indiquer la route \u00e0 suivre pour se rendre \u00e0 endroit B. Comment mod\u00e9liser l\u2019ensemble des lieux et des routes ? Simplement \u00e0 l\u2019aide d\u2019un graphe ! Chaque lieu est un sommet et les routes qui relient les lieux entre eux sont des ar\u00eates. Soit les lieux suivants : A, B, C, D, E, F et G. Les diff\u00e9rents lieux sont reli\u00e9s par les routes suivantes : il existe une route entre A et C ; il existe une route entre A et B ; il existe une route entre A et D ; il existe une route entre B et F ; il existe une route entre B et E ; il existe une route entre B et G ; il existe une route entre D et G ; il existe une route entre E et F. Ici aussi, la repr\u00e9sentation sous forme de graphe s\u2019impose : Probl\u00e8me : avec cette repr\u00e9sentation du r\u00e9seau routier sous forme de graphe, il est impossible de tenir compte des routes en sens unique (par exemple il est possible d\u2019aller de A vers D mais pas de D vers A) Voici de nouvelles contraintes : il existe une route entre A et C (double sens) ; il existe une route entre A et B (sens unique B->A) ; il existe une route entre A et D (sens unique A->D) ; il existe une route entre B et F (sens unique B->F) ; il existe une route entre B et E (sens unique E->B) ; il existe une route entre B et G (double sens) ; il existe une route entre D et G (double sens) ; il existe une route entre E et F (double). Pour tenir compte de ces nouvelles contraintes, on utilisera un graphe orient\u00e9 : Dans un graphe orient\u00e9, les ar\u00eates poss\u00e8dent une orientation. Ces \"ar\u00eates orient\u00e9es\" sont souvent appel\u00e9es \"arcs\". On dira qu\u2019un graphe orient\u00e9 G est un couple G = (V,A) avec V un ensemble de sommets et A un ensemble d\u2019arcs.","title":"Un premier exemple"},{"location":"Terminale/Struct_donnees/graphe/#vocabulaire","text":"On note x\u2192 y l\u2019arc (x,y) dans un graph orient\u00e9 o\u00f9 x est son extr\u00e9mit\u00e9 initiale et y son extr\u00e9mit\u00e9 finale. y est le successeur de x et x est le pr\u00e9d\u00e9cesseur de y. deux arcs d\u2019un graphe sont adjacents s\u2019ils poss\u00e8dent au moins une extr\u00e9mit\u00e9 commune ; Deux sommets d\u2019un graphe orient\u00e9 sont dits adjacents s\u2019il existe un arc les joignant. Dans un graphe orient\u00e9, on appelle degr\u00e9 d\u2019un sommet x le nombre d\u2019arcs dont x est une extr\u00e9mit\u00e9. Dans un graphe orient\u00e9, on appelle chemin toute suite de sommet cons\u00e9cutifs reli\u00e9 par des arcs. Un chemin est dit \u00e9l\u00e9m\u00e9ntaire s\u2019il ne comporte pas plusieurs fois le m\u00eame sommet. Un chemin dont le somme de d\u00e9but est le m\u00eame que le sommet de fin est appel\u00e9 circuit.","title":"Vocabulaire"},{"location":"Terminale/Struct_donnees/graphe/#les-graphes-ponderes","text":"","title":"Les graphes pond\u00e9r\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#exemple","text":"Parfois il est int\u00e9ressant d\u2019associer aux arr\u00eates ou aux arcs des valeurs, on parle alors de graphes pond\u00e9r\u00e9s. Si nous revenons \u00e0 notre \"graphe cartographie\", il est possible d\u2019associer \u00e0 chaque ar\u00eate la distance en Km entre les 2 lieux Il est aussi possible d\u2019associer \u00e0 chaque ar\u00eate la dur\u00e9e du trajet entre 2 points : En fonction du choix fait par le conducteur (trajet le plus court \"en distance\" ou trajet le plus court \"en temps\"), l\u2019algorithme permettant de d\u00e9terminer le \"chemin le plus court entre 2 points\" travaillera sur le graphe \"graphe pond\u00e9r\u00e9 (Km)cartographie\" ou sur le graphe \"graphe pond\u00e9r\u00e9 (minutes) cartographie\". \u00c0 noter que le \"graphe pond\u00e9r\u00e9 (minutes) cartographie\" peut \u00e9voluer au cours du temps en fonction du trafic routier : une application comme Waze utilise les donn\u00e9es en en provenance des utilisateurs de l\u2019application afin de mettre \u00e0 jour en temps r\u00e9\u00e9l leur \"graphe pond\u00e9r\u00e9 (minutes) cartographie\". Un graphe est pond\u00e9r\u00e9 (ou valu\u00e9) si on attribue \u00e0 chaque ar\u00eate une valeur num\u00e9rique (la plupart du temps positive), qu'on appelle mesure, poids, co\u00fbt ou valuation.","title":"Exemple"},{"location":"Terminale/Struct_donnees/graphe/#implementation-dun-graphe-a-laide-dune-matrice-dadjacence","text":"Il existe deux m\u00e9thodes permettant d\u2019impl\u00e9menter un graphe : les matrices d\u2019adjacences et les listes d\u2019adjacences.","title":"Impl\u00e9mentation d\u2019un graphe \u00e0 l\u2019aide d\u2019une matrice d\u2019adjacence"},{"location":"Terminale/Struct_donnees/graphe/#definition-dune-matrice","text":"Une matrice est un tableau \u00e0 double entr\u00e9e. Exemple, la matrice A ci-dessous. \\[ A = \\begin{pmatrix} 1 & 2 & 3 & 8 & 10 \\\\ 4 & 5 & 6 & 6 & 9 \\\\ 7 & 8 & 9 & 6 & 5 \\\\ \\end{pmatrix} \\] La matrice A ci-dessus est constitu\u00e9 de 3 lignes et 5 colonnes. On appelle matrice carr\u00e9e une matrice qui comporte le m\u00eame nombre de lignes et de colonnes. Les matrices d\u2019adjacences sont des matrices carr\u00e9es.","title":"D\u00e9finition d\u2019une matrice"},{"location":"Terminale/Struct_donnees/graphe/#exemple_1","text":"Voici la matrice d\u2019adjacence de ce graphe : \\[ A = \\begin{pmatrix} 0 & 1 & 1 & 1 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 1 \\\\ 0 & 1 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 1 & 0 &1 & 0 & 0 & 0 \\\\ \\end{pmatrix} \\]","title":"Exemple"},{"location":"Terminale/Struct_donnees/graphe/#comment-construire-une-matrice-dadjacence","text":"Il faut savoir qu\u2019\u00e0 chaque ligne correspond un sommet du graphe et qu\u2019\u00e0 chaque colonne correspond aussi un sommet du graphe. \u00c0 chaque intersection ligne i-colonne j (ligne i correspond au sommet i et colonne j correspond au sommet j), on place un 1 s\u2019il existe une ar\u00eate entre le sommet i et le sommet j, et un z\u00e9ro s\u2019il n\u2019existe pas d\u2019ar\u00eate entre le sommet i et le sommet j. Il existe une ar\u00eate entre le sommet E et le sommet F, nous avons donc plac\u00e9 un 1 \u00e0 l\u2019intersection de la ligne E et de la colonne F (il en est de m\u00eame \u00e0 l\u2019intersection de la ligne F et de la colonne E) Il n\u2019existe pas d\u2019ar\u00eate entre le sommet D et le sommet C, nous avons donc plac\u00e9 un 0 \u00e0 l\u2019intersection de la ligne D et de la colonne C (il en est de m\u00eame \u00e0 l\u2019intersection de la ligne C et de la colonne D) Exercice 2 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe \"cartographie\". Exercice 3 : \u00c9tablissez la matrice d\u2019adjacence du graphe ci-dessous.","title":"Comment construire une matrice d\u2019adjacence ?"},{"location":"Terminale/Struct_donnees/graphe/#matrice-dadjacence-pour-un-graphe-oriente","text":"Le principe reste le m\u00eame : si le sommet i (ligne) est li\u00e9 au sommet j (colonne), nous avons un 1 \u00e0 l\u2019intersection (0 dans le cas contraire). Exemple : La matrice d'adjacence est : \\[ A = \\begin{pmatrix} 0 & 0 & 1 & 1 & 0 & 0 & 0 \\\\ 1 & 0 & 0 & 0 & 1 & 1 & 1 \\\\ 1 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 0 & 0 & 0 & 0 & 0 & 0 & 1 \\\\ 0 & 1 & 0 & 0 & 0 & 1 & 0 \\\\ 0 & 0 & 0 & 0 & 1 & 0 & 0 \\\\ 0 & 1 & 0 & 1 & 0 & 0 & 0 \\\\ \\end{pmatrix} \\] Exercice 4 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe orient\u00e9 \"cartographie\". Exercice 5 : Etablir la matrice du graphe orient\u00e9 ci-dessous.","title":"Matrice d\u2019adjacence pour un graphe orient\u00e9"},{"location":"Terminale/Struct_donnees/graphe/#matrice-dadjacence-dun-graphe-pondere","text":"On remplace les 1 par les valeurs li\u00e9es \u00e0 chaque arc La matrice d'adjacence : \\[ A = \\begin{pmatrix} 0 & 4 & 3 & 5 & 0 & 0 & 0 \\\\ 4 & 0 & 0 & 0 & 5 & 5 & 7 \\\\ 3 & 0 & 0 & 0 & 0 & 0 & 0 \\\\ 5 & 0 & 0 & 0 & 0 & 0 & 6 \\\\ 0 & 5 & 0 & 0 & 0 & 7 & 0 \\\\ 0 & 5 & 0 & 0 & 7 & 0 & 0 \\\\ 0 & 7 & 0 & 6 & 0 & 0 & 0 \\\\ \\end{pmatrix} \\] Exercice 6 : V\u00e9rifiez que la matrice d\u2019adjacence propos\u00e9e ci-dessus correspond bien au graphe pond\u00e9r\u00e9 (minutes) \"cartographie\".","title":"Matrice d\u2019adjacence d\u2019un graphe pond\u00e9r\u00e9"},{"location":"Terminale/Struct_donnees/graphe/#les-listes-dadjacences","text":"","title":"Les listes d\u2019adjacences"},{"location":"Terminale/Struct_donnees/graphe/#pour-les-graphes-non-orientes","text":"Pour commencer, on d\u00e9finit une liste des sommets du graphe. \u00c0 chaque \u00e9l\u00e9ment de cette liste, on associe une autre liste qui contient les sommets li\u00e9 \u00e0 cet \u00e9l\u00e9ment. Reprenons l\u2019exemple du \"graphe cartographie\" : Voici la liste d'adjacence de ce graphe :","title":"Pour les graphes non-orient\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#pour-les-graphes-orientes","text":"Pour les graphes orient\u00e9s, il est n\u00e9cessaire de d\u00e9finir 2 listes : la liste des successeurs et la liste des pr\u00e9d\u00e9cesseurs. Soit un arc allant d\u2019un sommet A vers un sommet B (fl\u00e8che de A vers B). On dira que B est un successeur de A et que A est un pr\u00e9d\u00e9cesseur de B. Liste d'adjacence successeurs du graphe orient\u00e9 cartographie Liste d'adjacence pr\u00e9d\u00e9cesseurs du graphe orient\u00e9 cartographie","title":"Pour les graphes orient\u00e9s"},{"location":"Terminale/Struct_donnees/graphe/#exercices","text":"","title":"Exercices"},{"location":"Terminale/Struct_donnees/graphe/#exercice-1","text":"Tracer les graphes associ\u00e9s aux matrices d\u2019adjacence donn\u00e9es. Puis donner sa liste des successeurs et des pr\u00e9decesseurs. \\[ M = \\begin{pmatrix} 0 & 1 & 0 & 0 & 0 \\\\ 0 & 0 & 1 & 1 & 1 \\\\ 0 & 1 & 0 & 1 & 0 \\\\ 0 & 0 & 1 & 0 & 0 \\\\ 1 & 1 & 0 & 1 & 0 \\\\ \\end{pmatrix} \\]","title":"Exercice 1 :"},{"location":"Terminale/Struct_donnees/graphe/#exercice-2","text":"On souhaite organiser un tournoi de football avec 5 \u00e9quipes (num\u00e9rot\u00e9es de 1 \u00e0 5). Chaque \u00e9quipe rencontre une seule fois toutes les autres. Repr\u00e9senter la situation sous la forme d\u2019un graphe. Combien d\u2019ar\u00eates poss\u00e8de-t-il ?En d\u00e9duire le nombre de matchs au total pour ce tournoi ? Ce graphe est-il connexe ?","title":"Exercice 2 :"},{"location":"Terminale/Struct_donnees/graphe/#exercice-3","text":"Un club de tennis doit s\u00e9lectionner deux joueurs parmi quatre pour repr\u00e9senter le club \u00e0 un tournoi national. Les quatre joueurs sont not\u00e9s A,B,C et D. Pour r\u00e9aliser la s\u00e9l\u00e9ction, le club organise des matchs : chaque joueur rencontre les trois autres. R\u00e8gle : tout match gagn\u00e9 donne un point. tout match perdu enl\u00e8ve un point. Les joueurs s\u00e9lectionn\u00e9s sont les joueurs ayant obtenu le plus grand nombre de points. On donne les r\u00e9sultats sous la forme d\u2019un graphe orient\u00e9. Le sens de l\u2019arc A \\(\\to\\) B indique que le joueur A a battu B Donner le nombre de points de chaque joueur En d\u00e9duire les joueurs s\u00e9lectionn\u00e9s","title":"Exercice 3 :"}]}